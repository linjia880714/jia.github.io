<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jia&#39;s Blog</title>
  
  <subtitle>生命因思考而变得美好</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.linjia.site/"/>
  <updated>2018-07-31T07:13:07.000Z</updated>
  <id>http://www.linjia.site/</id>
  
  <author>
    <name>林佳</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>系列推荐</title>
    <link href="http://www.linjia.site/2020/01/01/%E7%B3%BB%E5%88%97%E6%8E%A8%E8%8D%90/"/>
    <id>http://www.linjia.site/2020/01/01/系列推荐/</id>
    <published>2019-12-31T16:00:00.000Z</published>
    <updated>2018-07-31T07:13:07.000Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="看看源码">看看源码</span></h3><ul><li>Java基础<ul><li>List <ul><li><a href="/2018/07/23/Java-ArrayList/" title="ArrayList">ArrayList</a></li><li><a href="/2018/07/23/Java-LinkedList/" title="LinkedList">LinkedList</a></li></ul></li><li>List - safe<ul><li><a href="/2018/07/23/Java-Vector/" title="Vector">Vector</a></li><li><a href="/2018/07/20/Java-CopyOnWriteArrayList/" title="CopyOnWriteArrayList">CopyOnWriteArrayList</a> - 读远远大于写操作</li></ul></li><li>Map<ul><li><a href="/2018/07/23/Java-HashMap/" title="HashMap">HashMap</a></li></ul></li><li>Map - safe<ul><li><a href="/2018/07/28/Java-HashTable/" title="HashTable">HashTable</a></li><li>ConcurrentHashMap(暂无)</li><li>ConcurrentSkipListMap(暂无) - 有序的Map</li></ul></li><li>Queue<ul><li>ConcurrentLinkedQueue(暂无)</li><li><a href="/2018/07/20/Java-ArrayBlockingQueue/" title="ArrayBlockingQueue">ArrayBlockingQueue</a> - 有界阻塞队列</li></ul></li></ul></li><li>框架<ul><li><a href="/2018/07/22/Java-hessian-01/" title="hessian">hessian</a> - 每次远程调用到底传了什么</li></ul></li></ul><h3><span id="spring-boot">spring-boot</span></h3><ol><li><a href="/2017/08/02/SpringBoot学习（一）/" title="SpringBoot学习（一）">SpringBoot学习（一）</a></li><li><a href="/2017/08/17/SpringBoot学习（二）/" title="SpringBoot学习（二）">SpringBoot学习（二）</a></li><li><a href="/2017/08/24/SpringBoot学习（三）-Log/" title="SpringBoot学习（三）-Log">SpringBoot学习（三）-Log</a></li><li><a href="/2018/01/18/SpringBoot-Websocket/" title="SpringBoot Websocket(sockjs)">SpringBoot Websocket(sockjs)</a></li></ol><h3><span id="排序算法">排序算法</span></h3><ol><li><a href="/2018/02/01/排序-冒泡/" title="冒泡">冒泡</a></li><li><a href="/2018/02/04/排序-插入/" title="插入">插入</a></li><li><a href="/2018/02/04/排序-选择/" title="选择">选择</a></li></ol><h3><span id="各种坑">各种坑</span></h3><ol><li><a href="/2017/12/22/Nginx打印整个Requst和Reponse/" title="Nginx打印整个Requst和Reponse">Nginx打印整个Requst和Reponse</a> - LG老是污蔑我们没有返回某个Header</li><li><a href="/2017/04/27/ipv6折腾/" title="ipv6折腾">ipv6折腾</a> - 据说苹果要普及ipv6怕审核不过关赶紧研究</li><li><a href="/2017/06/16/Javamail使用gmail发送邮件/" title="Javamail使用gmail发送邮件">Javamail使用gmail发送邮件</a> - 一个大写引发的血案</li><li><a href="/2018/02/24/Jenkins实践/" title="Jenkins实践">Jenkins实践</a> </li></ol><h3><span id="生活吃喝玩乐">生活（吃喝玩乐）</span></h3><ul><li><a href="/2017/09/25/20170923-2d-香港-麦理浩径-浪茄湾露营麦理浩径二段/" title="2017年09月 [ 20170923~2d ] [ 香港 ] [ 麦理浩径 ] 浪茄湾露营麦理浩径二段">2017年09月 [ 20170923~2d ] [ 香港 ] [ 麦理浩径 ] 浪茄湾露营麦理浩径二段</a></li><li><a href="/2017/07/31/深圳-羊台山-20170729-野餐还是爬山/" title="2017年07月 [ 20170729~1d ] [ 深圳 ] [ 羊台山 ] 野餐还是爬山?">2017年07月 [ 20170729~1d ] [ 深圳 ] [ 羊台山 ] 野餐还是爬山?</a></li><li><a href="/2017/04/10/日本东京20170402-20170409/" title="2017年04月 [ 20170402~8d ] [ 日本 ] [ 东京镰仓伊东河口湖 ]">2017年04月 [ 20170402~8d ] [ 日本 ] [ 东京镰仓伊东河口湖 ]</a></li></ul><h3><span id="其他也精彩">其他也精彩</span></h3><hr><h3><span id="非原创做个简单的索引">非原创，做个简单的索引</span></h3><p><a href="http://www.infoq.com/cn/articles/solution-of-distributed-system-transaction-consistency" target="_blank" rel="noopener">Infoq - 分布式系统事务一致性解决方案</a><br><a href="https://blog.csdn.net/skiof007/article/details/52873421" target="_blank" rel="noopener">BIO与NIO、AIO的区别(这个容易理解)</a><br><a href="http://blog.codinglabs.org/articles/theory-of-mysql-index.html" target="_blank" rel="noopener">MySQL索引背后的数据结构及算法原理</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3&gt;&lt;span id=&quot;看看源码&quot;&gt;看看源码&lt;/span&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Java基础&lt;ul&gt;
&lt;li&gt;List &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2018/07/23/Java-ArrayList/&quot; title=&quot;ArrayList&quot;&gt;ArrayList&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HashTable</title>
    <link href="http://www.linjia.site/2018/07/28/Java-HashTable/"/>
    <id>http://www.linjia.site/2018/07/28/Java-HashTable/</id>
    <published>2018-07-27T16:52:42.000Z</published>
    <updated>2018-07-31T07:01:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="环境">环境</span></h2><p>JDK: 1.8</p><h2><span id="分析">分析</span></h2><h3><span id="1底层数据结构">1.底层数据结构</span></h3><p>可以看出HashTable的底层结构是数组加链表的结构</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">transient</span> Entry&lt;?,?&gt;[] table;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Entry</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; <span class="keyword">implements</span> <span class="title">Map</span>.<span class="title">Entry</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> hash;</span><br><span class="line">    <span class="keyword">final</span> K key;</span><br><span class="line">    V value;</span><br><span class="line">    Entry&lt;K,V&gt; next;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="2默认值">2.默认值</span></h3><p>size=11的数组， 数组元素大于 (size * 0.75) 扩容<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Hashtable</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>(<span class="number">11</span>, <span class="number">0.75f</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Hashtable</span><span class="params">(<span class="keyword">int</span> initialCapacity, <span class="keyword">float</span> loadFactor)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (initialCapacity &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Illegal Capacity: "</span>+</span><br><span class="line">                                           initialCapacity);</span><br><span class="line">    <span class="keyword">if</span> (loadFactor &lt;= <span class="number">0</span> || Float.isNaN(loadFactor))</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Illegal Load: "</span>+loadFactor);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (initialCapacity==<span class="number">0</span>)</span><br><span class="line">        initialCapacity = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">this</span>.loadFactor = loadFactor;</span><br><span class="line">    table = <span class="keyword">new</span> Entry&lt;?,?&gt;[initialCapacity];</span><br><span class="line">    threshold = (<span class="keyword">int</span>)Math.min(initialCapacity * loadFactor, MAX_ARRAY_SIZE + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3><span id="3put操作">3.put操作</span></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> V <span class="title">put</span><span class="params">(K key, V value)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 省略...</span></span><br><span class="line"></span><br><span class="line">    Entry&lt;?,?&gt; tab[] = table;</span><br><span class="line">    <span class="keyword">int</span> hash = key.hashCode();</span><br><span class="line">    <span class="comment">// hash &amp; 0x7FFFFFFF 作用是把hash的值都转成正数</span></span><br><span class="line">    <span class="keyword">int</span> index = (hash &amp; <span class="number">0x7FFFFFFF</span>) % tab.length;</span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">    Entry&lt;K,V&gt; entry = (Entry&lt;K,V&gt;)tab[index];</span><br><span class="line">    <span class="comment">// 如果key存在更新操作</span></span><br><span class="line">    <span class="keyword">for</span>(; entry != <span class="keyword">null</span> ; entry = entry.next) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((entry.hash == hash) &amp;&amp; entry.key.equals(key)) &#123;</span><br><span class="line">            V old = entry.value;</span><br><span class="line">            entry.value = value;</span><br><span class="line">            <span class="keyword">return</span> old;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    addEntry(hash, key, value, index);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addEntry</span><span class="params">(<span class="keyword">int</span> hash, K key, V value, <span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">    modCount++;</span><br><span class="line"></span><br><span class="line">    Entry&lt;?,?&gt; tab[] = table;</span><br><span class="line">    <span class="keyword">if</span> (count &gt;= threshold) &#123;</span><br><span class="line">        <span class="comment">// 扩容</span></span><br><span class="line">        rehash();</span><br><span class="line"></span><br><span class="line">        tab = table;</span><br><span class="line">        hash = key.hashCode();</span><br><span class="line">        index = (hash &amp; <span class="number">0x7FFFFFFF</span>) % tab.length;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取旧的节点</span></span><br><span class="line">    Entry&lt;K,V&gt; e = (Entry&lt;K,V&gt;) tab[index];</span><br><span class="line">    <span class="comment">// 新的节点放在头部</span></span><br><span class="line">    tab[index] = <span class="keyword">new</span> Entry&lt;&gt;(hash, key, value, e);</span><br><span class="line">    count++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="4rehash-扩容">4.rehash 扩容</span></h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;环境&quot;&gt;环境&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;JDK: 1.8&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;分析&quot;&gt;分析&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;&lt;span id=&quot;1底层数据结构&quot;&gt;1.底层数据结构&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;可以看出HashTable的
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HashMap</title>
    <link href="http://www.linjia.site/2018/07/23/Java-HashMap/"/>
    <id>http://www.linjia.site/2018/07/23/Java-HashMap/</id>
    <published>2018-07-23T14:48:15.000Z</published>
    <updated>2018-07-31T07:01:50.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#环境">环境</a></li><li><a href="#分析">分析</a><ul><li><a href="#1底层数据结构">1.底层数据结构</a></li><li><a href="#2table初始化和扩容">2.table初始化和扩容</a></li><li><a href="#3扩容之后的数据整理链表">3.扩容之后的数据整理（链表）</a></li></ul></li></ul><!-- tocstop --><h2><span id="环境">环境</span></h2><p>JDK: 1.8</p><h2><span id="分析">分析</span></h2><h3><span id="1底层数据结构">1.底层数据结构</span></h3><p>可以看出HashMap的底层结构是数组加链表的结构<br>（一定条件下会转成数组加树，稍后讲）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">transient</span> Node&lt;K,V&gt;[] table</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; <span class="keyword">implements</span> <span class="title">Map</span>.<span class="title">Entry</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> hash;</span><br><span class="line">    <span class="keyword">final</span> K key;</span><br><span class="line">    V value;</span><br><span class="line">    Node&lt;K,V&gt; next;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 忽略</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="2table初始化和扩容">2.table初始化和扩容</span></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEFAULT_INITIAL_CAPACITY = <span class="number">1</span> &lt;&lt; <span class="number">4</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">float</span> DEFAULT_LOAD_FACTOR = <span class="number">0.75f</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在HashMap.resize()</span></span><br><span class="line"><span class="comment">// 第一次初始化</span></span><br><span class="line">newCap = DEFAULT_INITIAL_CAPACITY;  <span class="comment">// 16，新数组长度</span></span><br><span class="line">newThr = (<span class="keyword">int</span>)(DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY); <span class="comment">// 16 * 0.75，门槛值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在HashMap.resize()</span></span><br><span class="line"><span class="comment">// 扩容时，size &gt; threshold 触发扩容</span></span><br><span class="line">newCap = oldCap &lt;&lt; <span class="number">1</span>  <span class="comment">// 翻倍</span></span><br><span class="line">newThr = oldThr &lt;&lt; <span class="number">1</span>  <span class="comment">// 翻倍</span></span><br></pre></td></tr></table></figure><h3><span id="3扩容之后的数据整理链表">3.扩容之后的数据整理（链表）</span></h3><p>需要看懂下面的逻辑代码才好看些，可能有点难以理解，这也是HashMap的优化</p><img src="/2018/07/23/Java-HashMap/01.png"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> Node&lt;K,V&gt;[] resize() &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 省略 。。。</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (oldTab != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; oldCap; ++j) &#123;</span><br><span class="line">            Node&lt;K,V&gt; e;</span><br><span class="line">            <span class="keyword">if</span> ((e = oldTab[j]) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                oldTab[j] = <span class="keyword">null</span>;</span><br><span class="line">                <span class="comment">// 如果没有next，重新获取index</span></span><br><span class="line">                <span class="keyword">if</span> (e.next == <span class="keyword">null</span>)</span><br><span class="line">                    newTab[e.hash &amp; (newCap - <span class="number">1</span>)] = e;</span><br><span class="line">                <span class="comment">// 如果是TreeNode的结构（先不看）</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (e <span class="keyword">instanceof</span> TreeNode)</span><br><span class="line">                    ((TreeNode&lt;K,V&gt;)e).split(<span class="keyword">this</span>, newTab, j, oldCap);</span><br><span class="line">                <span class="comment">// 如果有next</span></span><br><span class="line">                <span class="keyword">else</span> &#123; </span><br><span class="line">                    <span class="comment">// 不需要改变index的node</span></span><br><span class="line">                    Node&lt;K,V&gt; loHead = <span class="keyword">null</span>, loTail = <span class="keyword">null</span>;</span><br><span class="line">                    <span class="comment">// 需要改变index（j+oldCap）的node</span></span><br><span class="line">                    Node&lt;K,V&gt; hiHead = <span class="keyword">null</span>, hiTail = <span class="keyword">null</span>;</span><br><span class="line">                    Node&lt;K,V&gt; next;</span><br><span class="line">                    <span class="keyword">do</span> &#123;</span><br><span class="line">                        next = e.next;</span><br><span class="line">                        <span class="comment">// “不需要改变index”的判断</span></span><br><span class="line">                        <span class="keyword">if</span> ((e.hash &amp; oldCap) == <span class="number">0</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (loTail == <span class="keyword">null</span>)</span><br><span class="line">                                loHead = e;</span><br><span class="line">                            <span class="keyword">else</span></span><br><span class="line">                                loTail.next = e;</span><br><span class="line">                            loTail = e;</span><br><span class="line">                        &#125;</span><br><span class="line">                         <span class="comment">// 其他就是“需要改变index”</span></span><br><span class="line">                        <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="keyword">if</span> (hiTail == <span class="keyword">null</span>)</span><br><span class="line">                                hiHead = e;</span><br><span class="line">                            <span class="keyword">else</span></span><br><span class="line">                                hiTail.next = e;</span><br><span class="line">                            hiTail = e;</span><br><span class="line">                        &#125;</span><br><span class="line">                    <span class="comment">// 循环结构，构成链表</span></span><br><span class="line">                    &#125; <span class="keyword">while</span> ((e = next) != <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (loTail != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        loTail.next = <span class="keyword">null</span>;</span><br><span class="line">                        <span class="comment">// 不需要改变index的node还是放在原来的位置</span></span><br><span class="line">                        newTab[j] = loHead;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (hiTail != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        hiTail.next = <span class="keyword">null</span>;</span><br><span class="line">                        <span class="comment">// 需要改变index的node放在 j + oldCap 的位置</span></span><br><span class="line">                        newTab[j + oldCap] = hiHead;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newTab;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#环境&quot;&gt;环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#分析&quot;&gt;分析&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1底层数据结构&quot;&gt;1.底层数据结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2table初始
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>LinkedList</title>
    <link href="http://www.linjia.site/2018/07/23/Java-LinkedList/"/>
    <id>http://www.linjia.site/2018/07/23/Java-LinkedList/</id>
    <published>2018-07-23T09:49:42.000Z</published>
    <updated>2018-07-31T07:01:50.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#环境">环境</a></li><li><a href="#分析">分析</a><ul><li><a href="#底层数据结构">底层数据结构</a></li><li><a href="#add">add</a></li><li><a href="#get">get</a></li><li><a href="#remove">remove</a></li><li><a href="#modcount">modCount</a></li></ul></li><li><a href="#总结">总结</a></li></ul><!-- tocstop --><h2><span id="环境">环境</span></h2><p>JDK: 1.7</p><h2><span id="分析">分析</span></h2><h3><span id="底层数据结构">底层数据结构</span></h3><p>从代码上看可以看出是个双向链表<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line">    E item;</span><br><span class="line">    Node&lt;E&gt; next;</span><br><span class="line">    Node&lt;E&gt; prev;</span><br><span class="line"></span><br><span class="line">    Node(Node&lt;E&gt; prev, E element, Node&lt;E&gt; next) &#123;</span><br><span class="line">        <span class="keyword">this</span>.item = element;</span><br><span class="line">        <span class="keyword">this</span>.next = next;</span><br><span class="line">        <span class="keyword">this</span>.prev = prev;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3><span id="add">add</span></h3><p>add的逻辑还是很简单的，比起ArrayList要扩容，拷贝数据要简单很多</p><ol><li>last为空，first,list就指向第一个插入的数</li><li>last不为空，list.next指向新插入的元素</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">add</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">    linkLast(e);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">linkLast</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; l = last;</span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; newNode = <span class="keyword">new</span> Node&lt;&gt;(l, e, <span class="keyword">null</span>);</span><br><span class="line">    last = newNode;</span><br><span class="line">    <span class="keyword">if</span> (l == <span class="keyword">null</span>)</span><br><span class="line">        first = newNode;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        l.next = newNode;</span><br><span class="line">    size++;</span><br><span class="line">    modCount++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="get">get</span></h3><p>双向链表的get需要从第一个元素/最后一个元素开始遍历。所以对于读操作很重的，LinkedList不是个好选择</p><p>这里有个小优化就是，index离first比较近从头部开始遍历，离last比较近从尾部开始遍历, 只有双向链表才可以</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">get</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">    checkElementIndex(index);</span><br><span class="line">    <span class="keyword">return</span> node(index).item;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Node&lt;E&gt; <span class="title">node</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (index &lt; (size &gt;&gt; <span class="number">1</span>)) &#123;</span><br><span class="line">        Node&lt;E&gt; x = first;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; index; i++)</span><br><span class="line">            x = x.next;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Node&lt;E&gt; x = last;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = size - <span class="number">1</span>; i &gt; index; i--)</span><br><span class="line">            x = x.prev;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="remove">remove</span></h3><p>remove的逻辑也很简单，就把元素的prev，next从新指向就好了<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">remove</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">    checkElementIndex(index);</span><br><span class="line">    <span class="keyword">return</span> unlink(node(index));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">E <span class="title">unlink</span><span class="params">(Node&lt;E&gt; x)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// assert x != null;</span></span><br><span class="line">    <span class="keyword">final</span> E element = x.item;</span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; next = x.next;</span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; prev = x.prev;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (prev == <span class="keyword">null</span>) &#123;</span><br><span class="line">        first = next;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        prev.next = next;</span><br><span class="line">        x.prev = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (next == <span class="keyword">null</span>) &#123;</span><br><span class="line">        last = prev;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        next.prev = prev;</span><br><span class="line">        x.next = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    x.item = <span class="keyword">null</span>;</span><br><span class="line">    size--;</span><br><span class="line">    modCount++;</span><br><span class="line">    <span class="keyword">return</span> element;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3><span id="modcount">modCount</span></h3><p>作用和<a href="/2018/07/23/Java-ArrayList/" title="ArrayList">ArrayList</a>一样</p><h2><span id="总结">总结</span></h2><p>LinkedList在插入删除有很大的优势，在读取就要遍历链表</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#环境&quot;&gt;环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#分析&quot;&gt;分析&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#底层数据结构&quot;&gt;底层数据结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#add&quot;&gt;add&lt;/a
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Vector</title>
    <link href="http://www.linjia.site/2018/07/23/Java-Vector/"/>
    <id>http://www.linjia.site/2018/07/23/Java-Vector/</id>
    <published>2018-07-23T06:21:10.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#环境">环境</a></li><li><a href="#分析">分析</a></li></ul><!-- tocstop --><h2><span id="环境">环境</span></h2><p>JDK: 1.8</p><h2><span id="分析">分析</span></h2><p>Vector数据结构逻辑和Arraylist差不多，Vector是线程安全的</p><p>区别</p><ol><li><p>新建对象Vector会默认生成长度为10的数组，Arraylist是长度为0的数组（第一次add扩容）</p></li><li><p>grow方法有区别</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">grow</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">int</span> oldCapacity = elementData.length;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1. 有指定capacityIncrement变量，新的长度 = 旧长度 + capacityIncrement</span></span><br><span class="line">    <span class="comment">// 2. 没有指定capacityIncrement变量，新的长度 = 旧长度 * 2</span></span><br><span class="line">    <span class="keyword">int</span> newCapacity = oldCapacity + ((capacityIncrement &gt; <span class="number">0</span>) ?</span><br><span class="line">                                     capacityIncrement : oldCapacity);</span><br><span class="line">    <span class="keyword">if</span> (newCapacity - minCapacity &lt; <span class="number">0</span>)</span><br><span class="line">        newCapacity = minCapacity;</span><br><span class="line">    <span class="keyword">if</span> (newCapacity - MAX_ARRAY_SIZE &gt; <span class="number">0</span>)</span><br><span class="line">        newCapacity = hugeCapacity(minCapacity);</span><br><span class="line">    elementData = Arrays.copyOf(elementData, newCapacity);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#环境&quot;&gt;环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#分析&quot;&gt;分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tocstop --&gt;
&lt;h2&gt;&lt;span id=&quot;环境&quot;&gt;环境&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;JDK:
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ArrayList</title>
    <link href="http://www.linjia.site/2018/07/23/Java-ArrayList/"/>
    <id>http://www.linjia.site/2018/07/23/Java-ArrayList/</id>
    <published>2018-07-23T05:02:22.000Z</published>
    <updated>2018-08-01T06:38:46.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#环境">环境</a></li><li><a href="#分析">分析</a><ul><li><a href="#add-添加">add 添加</a></li><li><a href="#remove-删除">remove 删除</a></li><li><a href="#grow-扩容">grow 扩容</a></li><li><a href="#foreach时不能修改数据">foreach时不能修改数据</a></li><li><a href="#循环遍历时安全删除数据">循环遍历时安全删除数据</a></li></ul></li><li><a href="#总结">总结</a></li></ul><!-- tocstop --><h2><span id="环境">环境</span></h2><p>JDK: 1.7</p><h2><span id="分析">分析</span></h2><p>ArrayList底层数据结构就是一个数组，随着数据的添加不断扩容</p><h3><span id="add-添加">add 添加</span></h3><p>add操作非常简单<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">add</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 扩容逻辑</span></span><br><span class="line">    ensureCapacityInternal(size + <span class="number">1</span>);  <span class="comment">// Increments modCount!!</span></span><br><span class="line">    elementData[size++] = e;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3><span id="remove-删除">remove 删除</span></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">remove</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">    rangeCheck(index);</span><br><span class="line"></span><br><span class="line">    modCount++;</span><br><span class="line">    E oldValue = elementData(index);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> numMoved = size - index - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (numMoved &gt; <span class="number">0</span>)</span><br><span class="line">        <span class="comment">// 把删除的index后面的数据往前移动</span></span><br><span class="line">        System.arraycopy(elementData, index+<span class="number">1</span>, elementData, index,</span><br><span class="line">                         numMoved);</span><br><span class="line">    <span class="comment">// 最后一个数据设置为空</span></span><br><span class="line">    elementData[--size] = <span class="keyword">null</span>; <span class="comment">// clear to let GC do its work</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> oldValue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="grow-扩容">grow 扩容</span></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">grow</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> oldCapacity = elementData.length;</span><br><span class="line">    <span class="comment">// 默认第一次初始化长度为 10</span></span><br><span class="line">    <span class="comment">// 数组大小增长逻辑 原本大小 + 原本大小/2 取整数</span></span><br><span class="line">    <span class="keyword">int</span> newCapacity = oldCapacity + (oldCapacity &gt;&gt; <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (newCapacity - minCapacity &lt; <span class="number">0</span>)</span><br><span class="line">        newCapacity = minCapacity;</span><br><span class="line">    <span class="keyword">if</span> (newCapacity - MAX_ARRAY_SIZE &gt; <span class="number">0</span>)</span><br><span class="line">        newCapacity = hugeCapacity(minCapacity);</span><br><span class="line">    <span class="comment">// 把原有数值的数据拷贝到新数组</span></span><br><span class="line">    elementData = Arrays.copyOf(elementData, newCapacity);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="foreach时不能修改数据">foreach时不能修改数据</span></h3><p>只要Arraylist有任何的修改操作，modCount都会+1</p><p>当调用next会见检查modCount是否已经变化，就会抛出<code>ConcurrentModificationException</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">next</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    checkForComodification();</span><br><span class="line">    <span class="keyword">int</span> i = cursor;</span><br><span class="line">    <span class="keyword">if</span> (i &gt;= size)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchElementException();</span><br><span class="line">    Object[] elementData = ArrayList.<span class="keyword">this</span>.elementData;</span><br><span class="line">    <span class="keyword">if</span> (i &gt;= elementData.length)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> ConcurrentModificationException();</span><br><span class="line">    cursor = i + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> (E) elementData[lastRet = i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">final</span> <span class="keyword">void</span> <span class="title">checkForComodification</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (modCount != expectedModCount)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> ConcurrentModificationException();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="循环遍历时安全删除数据">循环遍历时安全删除数据</span></h3><p>错误示范<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 新建数据塞进10个元素</span></span><br><span class="line">ArrayList list = <span class="keyword">new</span> ArrayList();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span> ; i&lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    list.add(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">    System.out.println(<span class="string">"i="</span>+i+<span class="string">"; res="</span>+list.get(i));</span><br><span class="line">    list.remove(i);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">从结果看，是跳着访问，因为执行remove操作，数据会往前一定，size--</span></span><br><span class="line"><span class="comment">i=0; res=0</span></span><br><span class="line"><span class="comment">[1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span><br><span class="line"><span class="comment">i=1; res=2</span></span><br><span class="line"><span class="comment">[1, 3, 4, 5, 6, 7, 8, 9]</span></span><br><span class="line"><span class="comment">i=2; res=4</span></span><br><span class="line"><span class="comment">[1, 3, 5, 6, 7, 8, 9]</span></span><br><span class="line"><span class="comment">i=3; res=6</span></span><br><span class="line"><span class="comment">[1, 3, 5, 7, 8, 9]</span></span><br><span class="line"><span class="comment">i=4; res=8</span></span><br><span class="line"><span class="comment">[1, 3, 5, 7, 9]</span></span><br><span class="line"><span class="comment">java.lang.IndexOutOfBoundsException: Index: 5, Size: 5</span></span><br><span class="line"><span class="comment">    at java.util.ArrayList.rangeCheck(ArrayList.java:653)</span></span><br><span class="line"><span class="comment">    at java.util.ArrayList.get(ArrayList.java:429)</span></span><br><span class="line"><span class="comment">    at org.demo.javabase.base.HasStatic.main(HasStatic.java:27)</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></p><p>正确示范<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">Iterator&lt;Integer&gt; i = list.iterator();         </span><br><span class="line"><span class="keyword">while</span> (i.hasNext()) &#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = i.next();</span><br><span class="line">    <span class="comment">// 可以执行两次remove看会有什么结果</span></span><br><span class="line">    i.remove();</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在ArrayList.java里面</span></span><br><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Itr</span> <span class="keyword">implements</span> <span class="title">Iterator</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">// 下一个元素的index</span></span><br><span class="line">    <span class="keyword">int</span> cursor;   </span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">      1. 已经返回给调用者的index，调用next。 </span></span><br><span class="line"><span class="comment">      2. 执行remove时，remove的元素是elementData[lastRet]</span></span><br><span class="line"><span class="comment">         然后lastRet = -1. 如果没有调用next就继续调用remove，IllegalStateException</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">int</span> lastRet = -<span class="number">1</span>; <span class="comment">// index of last element returned; -1 if no such</span></span><br><span class="line">    <span class="keyword">int</span> expectedModCount = modCount;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> cursor != size;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">next</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        checkForComodification();</span><br><span class="line">        <span class="keyword">int</span> i = cursor;</span><br><span class="line">        <span class="keyword">if</span> (i &gt;= size)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchElementException();</span><br><span class="line">        Object[] elementData = ArrayList.<span class="keyword">this</span>.elementData;</span><br><span class="line">        <span class="keyword">if</span> (i &gt;= elementData.length)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ConcurrentModificationException();</span><br><span class="line">        cursor = i + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> (E) elementData[lastRet = i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (lastRet &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException();</span><br><span class="line">        checkForComodification();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ArrayList.<span class="keyword">this</span>.remove(lastRet);</span><br><span class="line">            cursor = lastRet;</span><br><span class="line">            lastRet = -<span class="number">1</span>;</span><br><span class="line">            expectedModCount = modCount;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IndexOutOfBoundsException ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ConcurrentModificationException();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 省略...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2><span id="总结">总结</span></h2><p>ArrayList的结构还是相当简单的，可以稍微注意下下面两点</p><ol><li><p>如果预知List很大，不妨使用<code>public ArrayList(int initialCapacity)</code>刚开始就指定数组的大小，避免多次grow</p></li><li><p>Arraylist不是线程安全的</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#环境&quot;&gt;环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#分析&quot;&gt;分析&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#add-添加&quot;&gt;add 添加&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#remove-删除&quot;&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hessian</title>
    <link href="http://www.linjia.site/2018/07/22/Java-hessian-01/"/>
    <id>http://www.linjia.site/2018/07/22/Java-hessian-01/</id>
    <published>2018-07-22T09:56:37.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#环境">环境</a></li><li><a href="#分析">分析</a><ul><li><a href="#接口定义">接口定义</a></li><li><a href="#客户端调用">客户端调用</a></li><li><a href="#源码研读">源码研读</a><ul><li><a href="#调用哪个方法">调用哪个方法</a></li><li><a href="#参数是什么">参数是什么</a><ul><li><a href="#map的头部">Map的头部</a></li><li><a href="#map的值">Map的值</a></li></ul></li><li><a href="#结束标志">结束标志</a></li></ul></li></ul></li><li><a href="#总结">总结</a></li></ul><!-- tocstop --><h2><span id="环境">环境</span></h2><p>JDK: 1.8</p><p>hessian-4.0.38.jar</p><h2><span id="分析">分析</span></h2><h3><span id="接口定义">接口定义</span></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 接口定义</span></span><br><span class="line"><span class="keyword">package</span> com.demo.demospringbase.hessian;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">HelloService</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sayHi</span><span class="params">(Persion p)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对象定义</span></span><br><span class="line"><span class="keyword">package</span> com.demo.demospringbase.hessian;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Persion</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Persion</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="客户端调用">客户端调用</span></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.demo.demospringbase.hessian;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> com.caucho.hessian.client.HessianProxyFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HessianClient</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> MalformedURLException </span>&#123;</span><br><span class="line">        String url = <span class="string">"http://127.0.0.1:8080/hello"</span>;</span><br><span class="line"></span><br><span class="line">        HessianProxyFactory factory = <span class="keyword">new</span> HessianProxyFactory();</span><br><span class="line">        factory.setOverloadEnabled(<span class="keyword">true</span>);</span><br><span class="line">        HelloService helloService = (HelloService) factory.create(HelloService.class, url);</span><br><span class="line">        helloService.sayHi(<span class="keyword">new</span> Persion(<span class="string">"link"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="源码研读">源码研读</span></h3><p>我们都是知道hessian是基于http传输的，我们现在来研究下<code>helloService.sayHi(new Persion(&quot;link&quot;))</code>，这个过程到底发送了什么</p><p>这里只研究客户端怎么调用发送了什么</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// HessianProxyFactory.java</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">create</span><span class="params">(Class&lt;?&gt; api, URL url, ClassLoader loader)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (api == <span class="keyword">null</span>)</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException(<span class="string">"api must not be null for HessianProxyFactory.create()"</span>);</span><br><span class="line">InvocationHandler handler = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">handler = <span class="keyword">new</span> HessianProxy(url, <span class="keyword">this</span>, api);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用jdc动态代理</span></span><br><span class="line"><span class="keyword">return</span> Proxy.newProxyInstance(loader,</span><br><span class="line">                              <span class="keyword">new</span> Class[] &#123; api,</span><br><span class="line">                                            HessianRemoteObject.class &#125;,</span><br><span class="line">                              handler);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>helloService.sayHi(new Persion(&quot;link&quot;))</code>调用的是HessianProxyFactory使用jdk动态代理生成的代理对象,所以我们接下看要看<code>HessianProxy.invoke</code>方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// HessianProxy.java</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object []args)</span> <span class="keyword">throws</span> Throwable</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 省略</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送请求，请看下面的sendRequest方法</span></span><br><span class="line">    conn = sendRequest(mangleName, args);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 省略</span></span><br><span class="line">    <span class="comment">// 处理返回的inputstream</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> HessianConnection <span class="title">sendRequest</span><span class="params">(String methodName, Object []args)</span></span></span><br><span class="line"><span class="function">    <span class="keyword">throws</span> IOException</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">     </span><br><span class="line">    <span class="comment">// 省略</span></span><br><span class="line"></span><br><span class="line">    AbstractHessianOutput out = _factory.getHessianOutput(os);</span><br><span class="line">    <span class="comment">// 生成发送给服务端的字节数组，这个使我们接下来重点研究的</span></span><br><span class="line">    out.call(methodName, args);</span><br><span class="line">    out.flush();</span><br><span class="line">    conn.sendRequest();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 省略</span></span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>使用实际例子研究out.call发送放了什么</p><p>调用<code>helloService.sayHi(new Persion(&quot;link&quot;))</code>发送了78个byte,我们一个个字节看<br>99, 2, 0, 109, 0, 13, 115, 97, 121, 72, 105, 95, 80, 101, 114, 115, 105, 111, 110, 77, 116, 0, 39, 99, 111, 109, 46, 100, 101, 109, 111, 46, 100, 101, 109, 111, 115, 112, 114, 105, 110, 103, 98, 97, 115, 101, 46, 104, 101, 115, 115, 105, 97, 110, 46, 80, 101, 114, 115, 105, 111, 110, 83, 0, 4, 110, 97, 109, 101, 83, 0, 4, 108, 105, 110, 107, 122, 122</p><h4><span id="调用哪个方法">调用哪个方法</span></h4><table><thead><tr><th>字节</th><th>值</th><th>解释</th></tr></thead><tbody><tr><td>99</td><td>c</td><td>call</td></tr><tr><td>2</td><td>2</td><td>major主版本</td></tr><tr><td>0</td><td>0</td><td>minor子版本</td></tr><tr><td>109</td><td>m</td><td>method</td></tr><tr><td>0, 13</td><td>13</td><td>表示接下来13个字节就是方法名</td></tr><tr><td>115, 97, 121, 72, 105, <br>95, 80, 101, 114, 115,<br> 105, 111, 110</td><td>sayHi_Persion</td><td>调用方法的名称</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// HessianOutput.java</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startCall</span><span class="params">(String method, <span class="keyword">int</span> length)</span> <span class="keyword">throws</span> IOException</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    os.write(<span class="string">'c'</span>);</span><br><span class="line">    os.write(_version);</span><br><span class="line">    os.write(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    os.write(<span class="string">'m'</span>);</span><br><span class="line">    <span class="keyword">int</span> len = method.length();</span><br><span class="line">    os.write(len &gt;&gt; <span class="number">8</span>);</span><br><span class="line">    os.write(len);</span><br><span class="line">    printString(method, <span class="number">0</span>, len);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用utf-8编码</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printString</span><span class="params">(String v, <span class="keyword">int</span> offset, <span class="keyword">int</span> length)</span><span class="keyword">throws</span> IOException</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">      <span class="keyword">char</span> ch = v.charAt(i + offset);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (ch &lt; <span class="number">0x80</span>)</span><br><span class="line">        os.write(ch);</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (ch &lt; <span class="number">0x800</span>) &#123;</span><br><span class="line">        os.write(<span class="number">0xc0</span> + ((ch &gt;&gt; <span class="number">6</span>) &amp; <span class="number">0x1f</span>));</span><br><span class="line">        os.write(<span class="number">0x80</span> + (ch &amp; <span class="number">0x3f</span>));</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> &#123;</span><br><span class="line">        os.write(<span class="number">0xe0</span> + ((ch &gt;&gt; <span class="number">12</span>) &amp; <span class="number">0xf</span>));</span><br><span class="line">        os.write(<span class="number">0x80</span> + ((ch &gt;&gt; <span class="number">6</span>) &amp; <span class="number">0x3f</span>));</span><br><span class="line">        os.write(<span class="number">0x80</span> + (ch &amp; <span class="number">0x3f</span>));</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4><span id="参数是什么">参数是什么</span></h4><p>Persion这个对象最后用的是<code>UnsafeSerializer</code>这个进行序列化的，决定使用哪个序列化器<code>SerializerFactory</code>的<code>getSerializer(Class cl)</code>方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// HessianOutput.java</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeObject</span><span class="params">(Object object)</span> <span class="keyword">throws</span> IOException                                                                              </span></span><br><span class="line"><span class="function"></span>&#123;                                                                                                 </span><br><span class="line">  <span class="keyword">if</span> (object == <span class="keyword">null</span>) &#123;                                                                           </span><br><span class="line">    writeNull();                                                                                  </span><br><span class="line">    <span class="keyword">return</span>;                                                                                       </span><br><span class="line">  &#125;                                                                                               </span><br><span class="line">                                                                                                  </span><br><span class="line">  Serializer serializer;                                                                          </span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 获取相应的序列化器                                                                                             </span></span><br><span class="line">  serializer = _serializerFactory.getSerializer(object.getClass());                               </span><br><span class="line">                                                                                                  </span><br><span class="line">  serializer.writeObject(object, <span class="keyword">this</span>);                                                           </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>注意：UnsafeSerializer只是使用sun.misc.Unsafe的API去获取对象的值，最后序列化Sting，int，long，double这些还是使用HessianOutput提供的方法（可以看下面的HessianOutput方法列表）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// UnsafeSerializer.java</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeObject</span><span class="params">(Object obj, AbstractHessianOutput out)</span> <span class="keyword">throws</span> IOException</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (out.addRef(obj)) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Class&lt;?&gt; cl = obj.getClass();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 第一部分 Map头部（HessianOutput的方法）</span></span><br><span class="line">    <span class="keyword">int</span> ref = out.writeObjectBegin(cl.getName());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ref &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">      writeInstance(obj, out);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (ref == -<span class="number">1</span>) &#123;</span><br><span class="line">      <span class="comment">// hessian2使用的</span></span><br><span class="line">      writeDefinition20(out);</span><br><span class="line">      out.writeObjectBegin(cl.getName());</span><br><span class="line">      writeInstance(obj, out);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 第二部分 Map值</span></span><br><span class="line">      writeObject10(obj, out);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5><span id="map的头部">Map的头部</span></h5><table><thead><tr><th>字节</th><th>值</th><th>解释</th></tr></thead><tbody><tr><td>77, 116</td><td>Mt</td><td>表示这是个map的结构，{key：value}</td></tr><tr><td>0, 39</td><td>39</td><td>表示接下来的39个字节就是类名</td></tr><tr><td>99, 111, 109, 46, 100, 101, 109, 111, 46, 100, <br>101, 109, 111, 115, 112, 114, 105, 110, 103, 98, <br> 97, 115, 101, 46, 104, 101, 115, 115, 105, 97, <br> 110, 46, 80, 101, 114, 115, 105, 111, 110</td><td>com.demo.demospringbase.hessian.Persion</td><td>类名</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// HessianOutput.java</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeMapBegin</span><span class="params">(String type)</span> <span class="keyword">throws</span> IOException</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    os.write(<span class="string">'M'</span>);</span><br><span class="line">    os.write(<span class="string">'t'</span>);</span><br><span class="line">    printLenString(type);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5><span id="map的值">Map的值</span></h5><table><thead><tr><th>字节</th><th>值</th><th>解释</th></tr></thead><tbody><tr><td>83</td><td>S</td><td>表示是一个String类型</td></tr><tr><td>0, 4</td><td>4</td><td>表示接下来的4个字节就是filed的name</td></tr><tr><td>110, 97, 109, 101</td><td>name</td><td>filed的name</td></tr><tr><td>83</td><td>S</td><td>表示是一个String类型</td></tr><tr><td>0, 4</td><td>4</td><td>表示接下来的4个字节就是filed的value</td></tr><tr><td>108, 105, 110, 107</td><td>link</td><td>filed的vallue</td></tr><tr><td>122</td><td>z</td><td>表示这是个map的结构结束</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// UnsafeSerializer.java</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">writeObject10</span><span class="params">(Object obj, AbstractHessianOutput out)</span> <span class="keyword">throws</span> IOException</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; _fields.length; i++) &#123;</span><br><span class="line">      Field field = _fields[i];</span><br><span class="line"></span><br><span class="line">      out.writeString(field.getName());</span><br><span class="line"></span><br><span class="line">      <span class="comment">// fieldSerializers是UnsafeSerializer的内部抽象类，有11个实现</span></span><br><span class="line">      <span class="comment">// 对应Boollean，Byte，Char，Short，Int，Long，Float，Double，String, Date, Object</span></span><br><span class="line">      <span class="comment">// 本例子name的类型是String，所以是使用StringFieldSerializer</span></span><br><span class="line">      _fieldSerializers[i].serialize(out, obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 第三部分 尾部（HessianOutput的方法）</span></span><br><span class="line">    out.writeMapEnd();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4><span id="结束标志">结束标志</span></h4><table><thead><tr><th>字节</th><th>值</th><th>解释</th></tr></thead><tbody><tr><td>122</td><td>z</td><td>示这次通讯的结束标志</td></tr></tbody></table><p>看下HessianOutput提供的方法，已经囊括了所有类型的序列方式<br><img src="/2018/07/22/Java-hessian-01/01.png"></p><p>hessian有很多序列化器，决定使用哪个序列化器<code>SerializerFactory</code>的<code>getSerializer(Class cl)</code><br><img src="/2018/07/22/Java-hessian-01/02.png"></p><h2><span id="总结">总结</span></h2><p>本教程只是简单的介绍hessian序列化的过程，知道从哪里入手后一步步debug，就可以分析很复杂的调用</p><p>这次调用的的所有字节就结束了。由于为了演示字节数组代表的含义，所以方法比较简单。读者可以试一下参数有List，Enum</p><p>从协议可以看出，协议没有任何校验手段。hessian是靠http传输保证数据的有效性的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#环境&quot;&gt;环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#分析&quot;&gt;分析&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#接口定义&quot;&gt;接口定义&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#客户端调用&quot;&gt;客户端调用&lt;/a
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ConcurrentHashMap</title>
    <link href="http://www.linjia.site/2018/07/20/Java-ConcurrentHashMap/"/>
    <id>http://www.linjia.site/2018/07/20/Java-ConcurrentHashMap/</id>
    <published>2018-07-20T09:20:09.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#环境">环境</a></li><li><a href="#分析">分析</a></li></ul><!-- tocstop --><h2><span id="环境">环境</span></h2><p>JDK: 1.8</p><h2><span id="分析">分析</span></h2><p>商业合作项目甚多，还包括了韩国LG，华为，香港的赛诺，美国的Remfit，澳大利亚AHB，英国Dreams等客户</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#环境&quot;&gt;环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#分析&quot;&gt;分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tocstop --&gt;
&lt;h2&gt;&lt;span id=&quot;环境&quot;&gt;环境&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;JDK:
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ArrayBlockingQueue</title>
    <link href="http://www.linjia.site/2018/07/20/Java-ArrayBlockingQueue/"/>
    <id>http://www.linjia.site/2018/07/20/Java-ArrayBlockingQueue/</id>
    <published>2018-07-20T07:54:29.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#环境">环境</a></li><li><a href="#分析">分析</a><ul><li><a href="#入队">入队</a></li><li><a href="#出队">出队</a></li></ul></li></ul><!-- tocstop --><h2><span id="环境">环境</span></h2><p>JDK: 1.8</p><h2><span id="分析">分析</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * takeIndex和putIndex是items上面的索引，控制每次出队入队对应的inex</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 具体使用可以查看dequeue()，enqueue()</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">final</span> Object[] items;</span><br><span class="line"><span class="keyword">int</span> takeIndex;</span><br><span class="line"><span class="keyword">int</span> putIndex;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">final</span> ReentrantLock lock;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> Condition notEmpty;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> Condition notFull;</span><br></pre></td></tr></table></figure><h3><span id="入队">入队</span></h3><p>put(E e), 会阻塞线程<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">(E e)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    checkNotNull(e);</span><br><span class="line">    <span class="keyword">final</span> ReentrantLock lock = <span class="keyword">this</span>.lock;</span><br><span class="line">    lock.lockInterruptibly();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 如果队列已满</span></span><br><span class="line">        <span class="keyword">while</span> (count == items.length)</span><br><span class="line">        <span class="comment">// 线程等待</span></span><br><span class="line">        <span class="comment">/* </span></span><br><span class="line"><span class="comment">        为什么会套在while循环</span></span><br><span class="line"><span class="comment">        1. 当前线程被唤醒后，继续检查队列是否已经满了，满了继续等待</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">            notFull.await();</span><br><span class="line">        enqueue(e);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        lock.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">enqueue</span><span class="params">(E x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">final</span> Object[] items = <span class="keyword">this</span>.items;</span><br><span class="line">items[putIndex] = x;</span><br><span class="line"><span class="keyword">if</span> (++putIndex == items.length)</span><br><span class="line">    putIndex = <span class="number">0</span>;</span><br><span class="line">count++;</span><br><span class="line"><span class="comment">// 唤醒获取操作时，队列为空而进入等待的线程</span></span><br><span class="line">notEmpty.signal();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>offer(E e)， 不会阻塞线程，队列满了就直接 return false<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">offer</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">    checkNotNull(e);</span><br><span class="line">    <span class="keyword">final</span> ReentrantLock lock = <span class="keyword">this</span>.lock;</span><br><span class="line">    lock.lock();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (count == items.length)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            enqueue(e);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        lock.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>offer(E e, long timeout, TimeUnit unit), 队列满时限时等待，超时 return false<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">offer</span><span class="params">(E e, <span class="keyword">long</span> timeout, TimeUnit unit)</span></span></span><br><span class="line"><span class="function">    <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line"></span><br><span class="line">    checkNotNull(e);</span><br><span class="line">    <span class="keyword">long</span> nanos = unit.toNanos(timeout);</span><br><span class="line">    <span class="keyword">final</span> ReentrantLock lock = <span class="keyword">this</span>.lock;</span><br><span class="line">    lock.lockInterruptibly();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (count == items.length) &#123;</span><br><span class="line">        <span class="comment">// 如果队列满了且等待时间耗尽，直接return false</span></span><br><span class="line">            <span class="keyword">if</span> (nanos &lt;= <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            <span class="comment">// 线程限时等待</span></span><br><span class="line">            nanos = notFull.awaitNanos(nanos);</span><br><span class="line">        &#125;</span><br><span class="line">        enqueue(e);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        lock.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3><span id="出队">出队</span></h3><p>take()，会阻塞线程<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">take</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> ReentrantLock lock = <span class="keyword">this</span>.lock;</span><br><span class="line">    lock.lockInterruptibly();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 队列空</span></span><br><span class="line">        <span class="keyword">while</span> (count == <span class="number">0</span>)</span><br><span class="line">            <span class="comment">// 线程等待</span></span><br><span class="line">            <span class="comment">/* </span></span><br><span class="line"><span class="comment">                为什么会套在while循环</span></span><br><span class="line"><span class="comment">                1. 当前线程被唤醒后，继续检查队列是否还是空，空继续等待</span></span><br><span class="line"><span class="comment">            */</span>         </span><br><span class="line">            notEmpty.await();</span><br><span class="line">        <span class="keyword">return</span> dequeue();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        lock.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> E <span class="title">dequeue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> Object[] items = <span class="keyword">this</span>.items;</span><br><span class="line">    E x = (E) items[takeIndex];</span><br><span class="line">    items[takeIndex] = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (++takeIndex == items.length)</span><br><span class="line">        takeIndex = <span class="number">0</span>;</span><br><span class="line">    count--;</span><br><span class="line">    <span class="keyword">if</span> (itrs != <span class="keyword">null</span>)</span><br><span class="line">        itrs.elementDequeued();</span><br><span class="line">    <span class="comment">// 唤醒插入操作时，队列已满而进入等待的线程</span></span><br><span class="line">    notFull.signal();</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>poll(), 不会阻塞线程，队列为空直接 return null<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">poll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> ReentrantLock lock = <span class="keyword">this</span>.lock;</span><br><span class="line">    lock.lock();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (count == <span class="number">0</span>) ? <span class="keyword">null</span> : dequeue();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        lock.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>poll(long timeout, TimeUnit unit), 队列空时限时等待，超时 return null;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">oll</span><span class="params">(<span class="keyword">long</span> timeout, TimeUnit unit)</span> pthrows InterruptedException </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> nanos = unit.toNanos(timeout);</span><br><span class="line">    <span class="keyword">final</span> ReentrantLock lock = <span class="keyword">this</span>.lock;</span><br><span class="line">    lock.lockInterruptibly();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 队列空</span></span><br><span class="line">        <span class="keyword">while</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 如果队列空且等待时间耗尽，直接return null</span></span><br><span class="line">            <span class="keyword">if</span> (nanos &lt;= <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            <span class="comment">// 线程限时等待</span></span><br><span class="line">            nanos = notEmpty.awaitNanos(nanos);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dequeue();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        lock.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#环境&quot;&gt;环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#分析&quot;&gt;分析&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#入队&quot;&gt;入队&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#出队&quot;&gt;出队&lt;/a&gt;&lt;/li&gt;
&lt;/u
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CopyOnWriteArrayList</title>
    <link href="http://www.linjia.site/2018/07/20/Java-CopyOnWriteArrayList/"/>
    <id>http://www.linjia.site/2018/07/20/Java-CopyOnWriteArrayList/</id>
    <published>2018-07-20T07:03:45.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="环境">环境</span></h2><p>JDK: 1.8</p><h2><span id="分析">分析</span></h2><p>场景：读操作远大于写</p><p>特点：读取不用加锁，写入也不会阻塞读操作，写入-写入需要同步等待</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** 保护写操作的线程安全 */</span></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">transient</span> ReentrantLock lock = <span class="keyword">new</span> ReentrantLock();</span><br><span class="line"></span><br><span class="line"><span class="comment">/** 存放数据的数组 */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">transient</span> <span class="keyword">volatile</span> Object[] array;</span><br></pre></td></tr></table></figure><p>get操作，很简单，没有锁<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> E <span class="title">get</span><span class="params">(Object[] a, <span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (E) a[index];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">get</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> get(getArray(), index);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>add操作，加锁<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">add</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> ReentrantLock lock = <span class="keyword">this</span>.lock;</span><br><span class="line">    lock.lock();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Object[] elements = getArray();</span><br><span class="line">        <span class="keyword">int</span> len = elements.length;</span><br><span class="line">        <span class="comment">//  重要：把原有的数据copy一份，改完再赋值给array = 写操作不会影响原有数据</span></span><br><span class="line">        Object[] newElements = Arrays.copyOf(elements, len + <span class="number">1</span>);</span><br><span class="line">        newElements[len] = e;</span><br><span class="line">        setArray(newElements);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        lock.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;环境&quot;&gt;环境&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;JDK: 1.8&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;分析&quot;&gt;分析&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;场景：读操作远大于写&lt;/p&gt;
&lt;p&gt;特点：读取不用加锁，写入也不会阻塞读操作，写入-写入需要同步等待&lt;/p&gt;
&lt;f
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SpringBoot JPA</title>
    <link href="http://www.linjia.site/2018/03/16/SpringBoot-JPA/"/>
    <id>http://www.linjia.site/2018/03/16/SpringBoot-JPA/</id>
    <published>2018-03-16T03:46:31.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><!-- tocstop --><p>#<br><a href="https://docs.spring.io/spring-data/jpa/docs/current/reference/html/" target="_blank" rel="noopener">Spring Data JPA - Reference Documentation</a><br><a href="https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/" target="_blank" rel="noopener">Spring Boot Reference Guide</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;!-- tocstop --&gt;
&lt;p&gt;#&lt;br&gt;&lt;a href=&quot;https://docs.spring.io/spring-data/jpa/docs/current/reference/html/&quot; target=&quot;_blank&quot; rel=&quot;noo
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="java" scheme="http://www.linjia.site/categories/IT/java/"/>
    
      <category term="spring" scheme="http://www.linjia.site/categories/IT/java/spring/"/>
    
    
      <category term="springboot" scheme="http://www.linjia.site/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins实践</title>
    <link href="http://www.linjia.site/2018/02/24/Jenkins%E5%AE%9E%E8%B7%B5/"/>
    <id>http://www.linjia.site/2018/02/24/Jenkins实践/</id>
    <published>2018-02-24T09:41:20.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#插件安装">插件安装</a></li><li><a href="#配置jenkins基本信息">配置Jenkins基本信息</a><ul><li><a href="#jdk">JDK</a></li><li><a href="#maven">Maven</a></li></ul></li><li><a href="#发布一个maven项目到tomcat">发布一个maven项目到Tomcat</a><ul><li><a href="#1-创建项目">1. 创建项目</a></li><li><a href="#2-配置git地址">2. 配置Git地址</a></li><li><a href="#3-配置build信息maven">3. 配置Build信息（Maven）</a></li><li><a href="#4-deploy-war包到tomcatdeploy-to-container-plugin">4. Deploy war包到Tomcat（Deploy to container Plugin）</a><ul><li><a href="#设置tomcat访问的username和password">设置Tomcat访问的username和password</a></li><li><a href="#deploy到tomcat可能会失败">Deploy到tomcat可能会失败</a></li></ul></li></ul></li><li><a href="#执行远程shellssh2-easy-plugin">执行远程shell（SSH2 Easy Plugin）</a><ul><li><a href="#基础配置">基础配置</a></li><li><a href="#配置job-configuration">配置job configuration</a></li></ul></li><li><a href="#可能发生的错误">可能发生的错误</a></li></ul><!-- tocstop --><hr><h2><span id="插件安装">插件安装</span></h2><table><thead><tr><th>插件名称</th><th>插件作用</th></tr></thead><tbody><tr><td>Git plugin</td><td>从git数据源拉取代码</td></tr><tr><td>Deploy to container Plugin</td><td>把war包发布到容器里</td></tr></tbody></table><p>注意：安装完插件最好重启下jenkins，我安装完之后出现了一些奇怪的问题,重启了就好</p><hr><p>Jenkins ver. 1.644</p><h2><span id="配置jenkins基本信息">配置Jenkins基本信息</span></h2><p>Jenkins &gt; configuration</p><h3><span id="jdk">JDK</span></h3><p>点击“Add JDK”按钮添加JDK信息<br><img src="/2018/02/24/Jenkins实践/01.png"></p><h3><span id="maven">Maven</span></h3><p>点击“Add Maven”按钮添加maven信息<br><img src="/2018/02/24/Jenkins实践/02.png"></p><hr><h2><span id="发布一个maven项目到tomcat">发布一个maven项目到Tomcat</span></h2><h3><span id="1-创建项目">1. 创建项目</span></h3><img src="/2018/02/24/Jenkins实践/03.png"><h3><span id="2-配置git地址">2. 配置Git地址</span></h3><img src="/2018/02/24/Jenkins实践/04.png"><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>Repository URL</td><td>git仓库地址</td></tr><tr><td>Credentials</td><td>由于我使用的是ssh访问git仓库，所以这里没有值，如果使用username和password登陆的话需要写入</td></tr><tr><td>Branch SpecifierL</td><td>我使用的gitflow创建分支，如图所示我要发布分支feature/3.6.0_P2</td></tr></tbody></table><h3><span id="3-配置build信息maven">3. 配置Build信息（Maven）</span></h3><img src="/2018/02/24/Jenkins实践/05.png"><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>Root POM</td><td>指定pom.xml地址</td></tr><tr><td>Goals and options</td><td>要执行的mvn命令，如图所示相当于执行mvn clean package -Dmaven.test.skip</td></tr></tbody></table><h3><span id="4-deploy-war包到tomcatdeploy-to-container-plugin">4. Deploy war包到Tomcat（Deploy to container Plugin）</span></h3><img src="/2018/02/24/Jenkins实践/06.png"><p>由于已经安装了Deploy to container Plugin，所以会有如上图的选项<br><img src="/2018/02/24/Jenkins实践/07.png"></p><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>WAR/EAR files</td><td>war包所在位置</td></tr><tr><td>Context path</td><td>访问前缀，例如想这样子访问<a href="http://172.14.1.100:11080/pro" target="_blank" rel="noopener">http://172.14.1.100:11080/pro</a>, 那就填pro</td></tr><tr><td>Containers Credentials</td><td>访问tomcat的username和password（下面会讲如何设置），点击“Add”按钮添加</td></tr><tr><td>Tomcat URL Tomcat URL</td><td>tomcat的root路径</td></tr></tbody></table><h4><span id="设置tomcat访问的username和password">设置Tomcat访问的username和password</span></h4><p>修改 ${tomcat_dir}/conf/tomcat-users.xml, 然后重启<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version='1.0' encoding='utf-8'?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">tomcat-users</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">"manager-gui"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">"manager-script"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">"manager-jmx"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">"manager-status"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">user</span> <span class="attr">username</span>=<span class="string">"tomcat"</span> <span class="attr">password</span>=<span class="string">"123456"</span> <span class="attr">roles</span>=<span class="string">"manager-gui,manager-script,manager-jmx,manager-status"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tomcat-users</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>此例子设置<br>username：tomcat<br>password: 123456</p><p>如何验证设置成功，访问http://${ip}:${port}/，点击“manager app”按钮，弹出登录框，看是否能成功登陆</p><h4><span id="deploy到tomcat可能会失败">Deploy到tomcat可能会失败</span></h4><p>要部署的tomcat抛出异常，如果部署失败不仅要看jenkins的错误信息，也要看tomcat的错误信息，再去定位问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java.lang.OutOfMemoryError: PermGen space</span><br></pre></td></tr></table></figure></p><p>因为war包太大（20M），所以java虚拟机会直接存到永久代（不一定要根据java启动的一些配置），永久代内存不够抛出异常</p><hr><h2><span id="执行远程shellssh2-easy-plugin">执行远程shell（SSH2 Easy Plugin）</span></h2><p>使用的是SSH2 Easy Plugin，安装完之后记得重启，不然可能有些奇怪的问题<br>缺点是SSH2 Easy Plugin只能使用username和password登陆</p><h3><span id="基础配置">基础配置</span></h3><p>Jenkins &gt; configuration<br><img src="/2018/02/24/Jenkins实践/08.png"></p><table><thead><tr><th>Server Group List 参数</th><th>解释</th></tr></thead><tbody><tr><td>Group Name</td><td>随意</td></tr><tr><td>User Name</td><td>登录名</td></tr><tr><td>Password</td><td>登陆密码</td></tr></tbody></table><table><thead><tr><th>Server List 参数</th><th>解释</th></tr></thead><tbody><tr><td>Server Group</td><td>这是个下拉框，所以必须上面的Server Group Add成功之后才能选</td></tr><tr><td>Server Name</td><td>随意</td></tr><tr><td>Server IP</td><td>IP地址</td></tr></tbody></table><h3><span id="配置job-configuration">配置job configuration</span></h3><p>配置完基本设置之后配置job，在Build会有Remote Shell出现<br><img src="/2018/02/24/Jenkins实践/09.png"><br>Target Server是个下拉框，根据Jenkins &gt; configuration设置的参数<br><img src="/2018/02/24/Jenkins实践/10.png"></p><hr><h2><span id="可能发生的错误">可能发生的错误</span></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#插件安装&quot;&gt;插件安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#配置jenkins基本信息&quot;&gt;配置Jenkins基本信息&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#jdk&quot;&gt;JDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>排序-选择</title>
    <link href="http://www.linjia.site/2018/02/04/%E6%8E%92%E5%BA%8F-%E9%80%89%E6%8B%A9/"/>
    <id>http://www.linjia.site/2018/02/04/排序-选择/</id>
    <published>2018-02-04T07:04:47.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://zh.wikipedia.org/wiki/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F" target="_blank" rel="noopener">选择排序(Wiki)</a></p><p><a href="https://github.com/linjia880714/demo-sort" target="_blank" rel="noopener">demo-sort in github</a></p><p>插入排序算法的运作如下：</p><ul><li>首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置</li><li>再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾</li><li>以此类推，直到所有元素均排序完毕</li></ul><p>选择排序的主要优点与数据移动有关，选择排序是利用一个中间变量，比较找出最小值，然后在交换位置<br>选择排序不像冒泡和插入排序依靠交换位置排序<br>可以看下Wiki，有个很棒的<a href="https://upload.wikimedia.org/wikipedia/commons/9/94/Selection-Sort-Animation.gif" target="_blank" rel="noopener">动图</a>解释原理</p><p>如下图所示长度为n的数组，<br>第一轮排序，从第一个元素开始,找出最小值，然后和第一个元素交换位置<br><img src="/2018/02/04/排序-选择/01.png" title="第一轮排序"></p><p>第二轮排序，从第二个元素开始,找出最小值，然后和第二个元素交换位置<br><img src="/2018/02/04/排序-选择/02.png" title="第二轮排序"></p><p>第三轮排序，从第三个元素开始,找出最小值，然后和第三个元素交换位置<br><img src="/2018/02/04/排序-选择/03.png" title="第三轮排序"></p><p>.<br>.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SelectionSort</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span>[] array)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> minIndex;</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">minIndex = i;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; array.length; j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(array[j]&lt;array[minIndex])</span><br><span class="line">&#123;</span><br><span class="line">minIndex = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(i!=minIndex)</span><br><span class="line">&#123;</span><br><span class="line">temp = array[i];</span><br><span class="line">array[i] = array[minIndex];</span><br><span class="line">array[minIndex] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] array = RandomUtil.randomIntArray();</span><br><span class="line"></span><br><span class="line">PrintUtil.printArray(array);</span><br><span class="line"></span><br><span class="line">sort(array);</span><br><span class="line"></span><br><span class="line">PrintUtil.printArray(array);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;选择排序(Wiki)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="算法" scheme="http://www.linjia.site/categories/IT/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="选择排序" scheme="http://www.linjia.site/tags/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>排序-插入</title>
    <link href="http://www.linjia.site/2018/02/04/%E6%8E%92%E5%BA%8F-%E6%8F%92%E5%85%A5/"/>
    <id>http://www.linjia.site/2018/02/04/排序-插入/</id>
    <published>2018-02-04T06:03:10.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://zh.wikipedia.org/wiki/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F" target="_blank" rel="noopener">插入排序(Wiki)</a></p><p><a href="https://github.com/linjia880714/demo-sort" target="_blank" rel="noopener">demo-sort in github</a></p><p>插入排序算法的运作如下：</p><ul><li>从第一个元素开始，该元素可以认为已经被排序</li><li>取出下一个元素，在已经排序的元素序列中从后向前扫描</li><li>如果该元素（已排序）大于新元素，将该元素移到下一位置</li><li>重复步骤3，直到找到已排序的元素小于或者等于新元素的位置</li><li>将新元素插入到该位置后</li><li>重复步骤2~5<br>可以看下Wiki，有个很棒的<a href="https://zh.wikipedia.org/wiki/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F#/media/File:Insertion-sort-example-300px.gif" target="_blank" rel="noopener">动图</a>解释原理</li></ul><p>如下图所示长度为n的数组，<br>第一轮排序，从第二个元素开始,和前面的有序数组比较，比自己大的往后移<br>得到了有序数组1,8<br><img src="/2018/02/04/排序-插入/01.png" title="第一轮排序"></p><p>第二轮排序，从第三个元素开始,和前面的有序数组比较，比自己大的往后移<br>得到了有序数组1,8,9(这次排序没有发生位移)<br><img src="/2018/02/04/排序-插入/02.png" title="第二轮排序"></p><p>第三轮排序，从第四个元素开始,和前面的有序数组比较，比自己大的往后移<br>得到了有序数组1,6,8,9<br><img src="/2018/02/04/排序-插入/03.png" title="第三轮排序"></p><p>.<br>.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InsertionSort</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span>[] array)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; array.length; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &gt; <span class="number">0</span>; j--) &#123;</span><br><span class="line"><span class="keyword">if</span>(array[j] &lt; array[j-<span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> temp = array[j-<span class="number">1</span>];</span><br><span class="line">array[j-<span class="number">1</span>] = array[j];</span><br><span class="line">array[j] = temp;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] array = RandomUtil.randomIntArray();</span><br><span class="line"></span><br><span class="line">PrintUtil.printArray(array);</span><br><span class="line"></span><br><span class="line">sort(array);</span><br><span class="line"></span><br><span class="line">PrintUtil.printArray(array);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个算法有两个循环嵌套，外面的我们叫外循环，里面的叫内循环。内循环有个break，因为被插入的数组是一个有序的数组，所以我们只需要插入到比当前数字大的元素前面即可，如果比当前数字小，就没有必要执行下去。如例子中的第二次排序，比较了一次之后就break了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;插入排序(Wiki)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="算法" scheme="http://www.linjia.site/categories/IT/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="插入排序" scheme="http://www.linjia.site/tags/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>排序-冒泡</title>
    <link href="http://www.linjia.site/2018/02/01/%E6%8E%92%E5%BA%8F-%E5%86%92%E6%B3%A1/"/>
    <id>http://www.linjia.site/2018/02/01/排序-冒泡/</id>
    <published>2018-02-01T15:24:58.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://zh.wikipedia.org/wiki/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F" target="_blank" rel="noopener">冒泡排序(Wiki)</a></p><p><a href="https://github.com/linjia880714/demo-sort" target="_blank" rel="noopener">demo-sort in github</a></p><p>冒泡排序算法的运作如下：</p><ul><li>比较相邻的元素。如果第一个比第二个大，就交换他们两个。</li><li>对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。这步做完后，最后的元素会是最大的数。</li><li>针对所有的元素重复以上的步骤，除了最后一个。</li><li>持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</li></ul><p>如下图所示长度为n的数组，<br>第一轮排序，比较了n-1次，找到最大的值<br>1和2比较，2和3比较，以此类推，前面的数据比后面的数值大就交换位置<br>第一轮排序我们可以把最大的值排在最后<br><img src="/2018/02/01/排序-冒泡/01.png" title="第一轮排序"></p><p>第二轮排序，比较了n-2次，因为最后的值已经是最大没有必要再比较。重复第一次比较的步骤<br><img src="/2018/02/01/排序-冒泡/02.png" title="第二轮排序"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BubbleSort</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span>[] array)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; array.length - i; j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(j&lt;=array.length-<span class="number">2</span> &amp;&amp; array[j] &gt; array[j+<span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> temp = array[j];</span><br><span class="line">array[j] =array[j+<span class="number">1</span>];</span><br><span class="line">array[j+<span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>[] array = RandomUtil.randomIntArray();</span><br><span class="line"></span><br><span class="line">PrintUtil.printArray(array);</span><br><span class="line"></span><br><span class="line">sort(array);</span><br><span class="line"></span><br><span class="line">PrintUtil.printArray(array);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意第6行的array.length - i，这个算法有两个循环嵌套，外面的我们叫外循环，里面的叫内循环。每一次内循环在数据的尾部都能得到一个最大值，既然是最大值就没有必要继续参与计算了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;冒泡排序(Wiki)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="算法" scheme="http://www.linjia.site/categories/IT/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="冒泡排序" scheme="http://www.linjia.site/tags/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>记阿里失败电面</title>
    <link href="http://www.linjia.site/2018/02/01/%E8%AE%B0%E9%98%BF%E9%87%8C%E5%A4%B1%E8%B4%A5%E7%94%B5%E9%9D%A2/"/>
    <id>http://www.linjia.site/2018/02/01/记阿里失败电面/</id>
    <published>2018-02-01T05:25:02.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>阿里电面回答最多的就是没有，不知道。感觉自己就是一个花花架子，貌似什么都懂一些</p><p>本来觉得自己还可以却遭受到重大打击。</p><p>一个认知的错误，像阿里这种大公司，部门分工很详细，不太需要我这种知识面广却不太深入的人，技术深度是必须的</p><p>冰山理论，面试官会根据你的回答，看你是否了解背后的原理。其实考这个是对的，上层的东西肯定是简单易用的，理解底层和原理才能充分的表现一个人的学习能力</p><p>给自己一个规划<br>Java虚拟机原理<br>HTTP,TCP协议<br>一个分布式框架：hessian<br>一个缓冲框架：memcached</p><ol><li><a href="http://www.cnblogs.com/-OYK/archive/2012/12/05/2803317.html" target="_blank" rel="noopener">淘汰算法</a><br>一个框架源码：spring<br>排序算法<br>设计模式</li></ol><p>这些都是在使用的技术的原理, 不管以后是否做技术，目前这些立身的根本不能丢。赶紧磨刀进行下一次狩猎，没工夫当误了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;阿里电面回答最多的就是没有，不知道。感觉自己就是一个花花架子，貌似什么都懂一些&lt;/p&gt;
&lt;p&gt;本来觉得自己还可以却遭受到重大打击。&lt;/p&gt;
&lt;p&gt;一个认知的错误，像阿里这种大公司，部门分工很详细，不太需要我这种知识面广却不太深入的人，技术深度是必须的&lt;/p&gt;
&lt;p&gt;冰山理论
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SpringBoot Websocket</title>
    <link href="http://www.linjia.site/2018/01/18/SpringBoot-Websocket/"/>
    <id>http://www.linjia.site/2018/01/18/SpringBoot-Websocket/</id>
    <published>2018-01-18T11:24:58.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#1-创建项目">1 创建项目</a></li><li><a href="#2-添加websocket支持">2 添加Websocket支持</a></li><li><a href="#3-配置websocket">3 配置Websocket</a></li><li><a href="#4-自定义textwebsockethandler">4 自定义TextWebSocketHandler</a></li><li><a href="#5-修改启动端口">5 修改启动端口</a></li><li><a href="#6-sockjs客户端">6 sockjs客户端</a></li><li><a href="#7-使用https">7 使用Https</a></li></ul><!-- tocstop --><p><a href="https://github.com/linjia880714/demo-spring-boot-websocket" target="_blank" rel="noopener">Demo in Github</a></p><h1><span id="1-创建项目">1 创建项目</span></h1><p><a href="https://start.spring.io/" target="_blank" rel="noopener">https://start.spring.io/</a> 使用线上工具可以很容易创建spring-boot项目（我创建的是maven格式的项目）<br>Group :  org.link<br>Artifact : demo-spring-boot-websocket</p><p>spring boot版本：1.5.9.RELEASE</p><p><a href="https://docs.spring.io/spring/docs/4.3.10.RELEASE/spring-framework-reference/html/websocket.html" target="_blank" rel="noopener">也可以查看官方文档4.3.10.RELEASE/spring-framework-reference/html/websocket.html</a></p><h1><span id="2-添加websocket支持">2 添加Websocket支持</span></h1><p>修改pom.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-websocket<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h1><span id="3-配置websocket">3 配置Websocket</span></h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.link.demospringbootwebsocket.websocket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.socket.config.annotation.EnableWebSocket;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.socket.config.annotation.WebSocketConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.socket.config.annotation.WebSocketHandlerRegistry;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebSocket</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebsocketConfig</span> <span class="keyword">implements</span> <span class="title">WebSocketConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> MyHandler myHandler;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">registerWebSocketHandlers</span><span class="params">(WebSocketHandlerRegistry registry)</span> </span>&#123;    </span><br><span class="line">registry.addHandler(myHandler, <span class="string">"/socket"</span>).setAllowedOrigins(<span class="string">"*"</span>).withSockJS();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>MyHandler: 处理消息的类，下面会说明</li><li>“/socket” ： websocket的地址</li><li>.setAllowedOrigins(“*”)： 解决浏览器跨域的问题（CORS）,可以设置为某个具体的域名，例如<a href="http://wwww.linjia.site" target="_blank" rel="noopener">http://wwww.linjia.site</a>, 只有这个域名下的js才可以跨域访问</li><li>.withSockJS(): 为什么使用sockjs呢，spring官网多sockjs的描述<br> The goal of SockJS is to let applications use a WebSocket API but fall back to non-WebSocket alternatives when necessary at runtime, i.e. without the need to change application code.<br> SockJS的目标是让应用程序使用WebSocket API，但在运行时需要时，可以回退到非WebSocket替代方案，不需要更改代码。 就是说浏览器不支持 WebSocket，该库可以模拟对 WebSocket 的支持   </li></ol><h1><span id="4-自定义textwebsockethandler">4 自定义TextWebSocketHandler</span></h1><p>Spring Websocket 有两种Handler TextWebSocketHandler 和 BinaryWebSocketHandler，我们选TextWebSocketHandler<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.link.demospringbootwebsocket.websocket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.socket.CloseStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.socket.TextMessage;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.socket.WebSocketSession;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.socket.handler.TextWebSocketHandler;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyHandler</span> <span class="keyword">extends</span> <span class="title">TextWebSocketHandler</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterConnectionClosed</span><span class="params">(WebSocketSession session,</span></span></span><br><span class="line"><span class="function"><span class="params">CloseStatus status)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="keyword">super</span>.afterConnectionClosed(session, status);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">handleTextMessage</span><span class="params">(WebSocketSession session,</span></span></span><br><span class="line"><span class="function"><span class="params">TextMessage message)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="keyword">super</span>.handleTextMessage(session, message);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印接收到的消息</span></span><br><span class="line">System.out.println(message.getPayload());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回消息</span></span><br><span class="line">TextMessage msg = <span class="keyword">new</span> TextMessage(<span class="string">"From server :"</span>+message.getPayload());</span><br><span class="line">session.sendMessage(msg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1><span id="5-修改启动端口">5 修改启动端口</span></h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改application.properties文件</span></span><br><span class="line">server.port=8181</span><br></pre></td></tr></table></figure><h1><span id="6-sockjs客户端">6 sockjs客户端</span></h1><p>我们使用sockjs作为客户端和服务器通信，建立src\main\resources\static\index.html页面，在classpath路径下，有如下文件夹名称 /static (or /public or /resources or /META-INF/resources)，里面的文件将作为静态文件被访问<br><img src="/2018/01/18/SpringBoot-Websocket/01.jpg"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/js/sockjs.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/js/jquery-3.2.1.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">var sock = new SockJS('http://127.0.0.1:8181/socket');</span></span><br><span class="line"><span class="undefined">sock.onopen = function() &#123;</span></span><br><span class="line"><span class="undefined">console.log('open');</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">sock.onmessage = function(e) &#123;</span></span><br><span class="line"><span class="undefined">console.log('message', e.data);</span></span><br><span class="line"><span class="undefined">display(e.data);</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">sock.onclose = function() &#123;</span></span><br><span class="line"><span class="undefined">console.log('close');</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">sock.onclose = function() &#123;</span></span><br><span class="line"><span class="undefined">console.log('close');</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">function display(msg) &#123;</span></span><br><span class="line"><span class="xml">$("#message").append("<span class="tag">&lt;<span class="name">pre</span>&gt;</span>" + msg + "<span class="tag">&lt;<span class="name">pre</span>&gt;</span>");</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">function sendMsg() &#123;</span></span><br><span class="line"><span class="undefined">sock.send($("#saySomething").val());</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"saySomething"</span> <span class="attr">value</span>=<span class="string">"Hello World"</span>&gt;</span>Say Something<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"sendMsg()"</span>&gt;</span>play<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">HR</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"message"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>请注意new SockJS(‘<a href="http://127.0.0.1:8181/socket&#39;)是http，sockjs会自动升级为ws" target="_blank" rel="noopener">http://127.0.0.1:8181/socket&#39;)是http，sockjs会自动升级为ws</a></li><li>sockjs接口很简单，相关文档可以看<a href="https://github.com/sockjs/sockjs-client" target="_blank" rel="noopener">sockjs-client</a></li><li>点击play按钮服务器接收到“Hello World”，然后返回一个“From server :Hello World”</li></ol><h1><span id="7-使用https">7 使用Https</span></h1><p>建议使用Nginx<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       443 ssl;</span><br><span class="line">        server_name  &lt;domain&gt;;</span><br><span class="line">        ssl on;</span><br><span class="line">        ssl_certificate &lt;file&gt;.crt;</span><br><span class="line">        ssl_certificate_key &lt;file&gt;.key;</span><br><span class="line"></span><br><span class="line">        location ^~ /socket &#123;</span><br><span class="line">                proxy_pass http://127.0.0.1:8181;</span><br><span class="line">                proxy_set_header X-Scheme <span class="variable">$scheme</span>;</span><br><span class="line">                proxy_set_header Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">                proxy_set_header Connection <span class="string">"upgrade"</span>;</span><br><span class="line">                proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line">                proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">                proxy_pass_header Server;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ol><li>修改成new SockJS(‘https://《domain》/socket’) ,sockjs会自动升级为wss</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1-创建项目&quot;&gt;1 创建项目&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2-添加websocket支持&quot;&gt;2 添加Websocket支持&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#3-配置websocket&quot;
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="java" scheme="http://www.linjia.site/categories/IT/java/"/>
    
      <category term="spring" scheme="http://www.linjia.site/categories/IT/java/spring/"/>
    
    
      <category term="springboot" scheme="http://www.linjia.site/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>Nginx打印整个Requst和Reponse</title>
    <link href="http://www.linjia.site/2017/12/22/Nginx%E6%89%93%E5%8D%B0%E6%95%B4%E4%B8%AARequst%E5%92%8CReponse/"/>
    <id>http://www.linjia.site/2017/12/22/Nginx打印整个Requst和Reponse/</id>
    <published>2017-12-22T03:37:47.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#应用场景">应用场景</a></li><li><a href="#系统">系统</a></li><li><a href="#lua-nginx-module模块打印response到日志文件">lua-nginx-module模块打印Response到日志文件</a><ul><li><a href="#准备依赖">准备依赖</a><ul><li><a href="#lua">Lua</a></li><li><a href="#ngx_devel_kit">ngx_devel_kit</a></li><li><a href="#lua-nginx-module">lua-nginx-module</a></li><li><a href="#openssl">openssl</a></li><li><a href="#zlib">zlib</a></li><li><a href="#pcre">pcre</a></li></ul></li><li><a href="#nginx编译安装">Nginx编译安装</a></li><li><a href="#配置nginxconf">配置nginx.conf</a></li></ul></li></ul><!-- tocstop --><h2><span id="应用场景">应用场景</span></h2><p>有时候和第三调接口，对方犯二，老是说是我方问题，所以把所有的request和response打印给对方看。</p><p>详细的输入输出在和第三方调试的时候用处极大</p><h2><span id="系统">系统</span></h2><p>此教程实在CentOS release 6.5 (Final)下实验的</p><h2><span id="lua-nginx-module模块打印response到日志文件">lua-nginx-module模块打印Response到日志文件</span></h2><h3><span id="准备依赖">准备依赖</span></h3><h4><span id="lua">Lua</span></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/</span><br><span class="line">wget http://luajit.org/download/LuaJIT-2.0.3.tar.gz</span><br><span class="line">tar -xvf LuaJIT-2.0.3.tar.gz</span><br><span class="line"><span class="built_in">cd</span> LuaJIT-2.0.3</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4><span id="ngx_devel_kit">ngx_devel_kit</span></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/</span><br><span class="line">wget https://github.com/simpl/ngx_devel_kit/archive/v0.2.19.tar.gz</span><br><span class="line">tar -xvf v0.2.19.tar.gz</span><br></pre></td></tr></table></figure><h4><span id="lua-nginx-module">lua-nginx-module</span></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/</span><br><span class="line">wget https://github.com/chaoslawful/lua-nginx-module/archive/v0.9.6.tar.gz</span><br><span class="line">tar -xvf v0.9.6.tar.gz</span><br></pre></td></tr></table></figure><h4><span id="openssl">openssl</span></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/</span><br><span class="line">wget https://www.openssl.org/<span class="built_in">source</span>/openssl-1.0.2n.tar.gz</span><br><span class="line">tar -xvf openssl-1.0.2n.tar.gz</span><br></pre></td></tr></table></figure><h4><span id="zlib">zlib</span></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/</span><br><span class="line">wget https://www.zlib.net/zlib-1.2.11.tar.gz</span><br><span class="line">tar -xvf zlib-1.2.11.tar.gz </span><br><span class="line"><span class="built_in">cd</span> zlib-1.2.11</span><br><span class="line">./configure &amp;&amp; make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment">## 或是使用yum</span></span><br><span class="line"> yum install zlib zlib-devel</span><br></pre></td></tr></table></figure><h4><span id="pcre">pcre</span></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/</span><br><span class="line">wget https://downloads.sourceforge.net/project/pcre/pcre/8.21/pcre-8.21.zip</span><br><span class="line">unzip pcre-8.21.zip</span><br><span class="line"><span class="built_in">cd</span> pcre-8.21</span><br><span class="line">./configure &amp;&amp; make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment">## 或是使用yum</span></span><br><span class="line">yum install pcre-devel pcre</span><br></pre></td></tr></table></figure><h3><span id="nginx编译安装">Nginx编译安装</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 设置Lua环境变量，以免Nginx启动找不相应模块</span></span><br><span class="line"><span class="built_in">export</span> LUAJIT_LIB=/usr/<span class="built_in">local</span>/lib</span><br><span class="line"><span class="built_in">export</span> LUAJIT_INC=/usr/<span class="built_in">local</span>/include/luajit-2.0</span><br><span class="line"></span><br><span class="line"><span class="comment">## Nginx编译安装</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/</span><br><span class="line">wget https://nginx.org/download/nginx-1.8.1.tar.gz</span><br><span class="line">tar -xvf nginx-1.8.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> nginx-1.8.1</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/nginx_debug --with-http_ssl_module --with-openssl=/usr/<span class="built_in">local</span>/src/openssl-1.0.2n  --with-ipv6  --with-http_stub_status_module --with-http_ssl_module --with-http_flv_module --with-http_gzip_static_module --with-pcre --with-ld-opt=<span class="string">"-Wl,-rpath,/usr/local/lib"</span> --add-module=/usr/<span class="built_in">local</span>/src/lua-nginx-module-0.9.6 --add-module=/usr/<span class="built_in">local</span>/src/ngx_devel_kit-0.2.19 </span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h3><span id="配置nginxconf">配置nginx.conf</span></h3><p>配置有点长，只要搞懂了body_filter_by_lua，header_filter_by_lua就Ok了。我在网上找的都是打印Response Body的，没找到header，所以看文档自己写出来。<a href="https://github.com/openresty/lua-nginx-module" target="_blank" rel="noopener">官方的文档</a>很详细了，只要会一点Lua语法就很容易按照自己的需求输出<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">include       mime.types;</span><br><span class="line">default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">log_format log_req_resp <span class="string">'$remote_addr - $remote_user [$time_local] '</span></span><br><span class="line"><span class="string">'"$request" $status $body_bytes_sent '</span></span><br><span class="line"><span class="string">'"$http_referer" "$http_user_agent" $request_time '</span></span><br><span class="line"><span class="string">'req_body:"$request_body" resp_body:"$resp_body" resp_header:"$resp_header"'</span>;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">lua_need_request_body on;</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$resp_body</span> <span class="string">""</span>;</span><br><span class="line">body_filter_by_lua <span class="string">'</span></span><br><span class="line"><span class="string">local resp_body = string.sub(ngx.arg[1], 1, 1000)</span></span><br><span class="line"><span class="string">ngx.ctx.buffered = (ngx.ctx.buffered or "") .. resp_body</span></span><br><span class="line"><span class="string">if ngx.arg[2] then</span></span><br><span class="line"><span class="string">     ngx.var.resp_body = ngx.ctx.buffered</span></span><br><span class="line"><span class="string">end</span></span><br><span class="line"><span class="string">'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$resp_header</span> <span class="string">""</span>;</span><br><span class="line">header_filter_by_lua <span class="string">'</span></span><br><span class="line"><span class="string">local res = ""</span></span><br><span class="line"><span class="string">local h = ngx.resp.get_headers()</span></span><br><span class="line"><span class="string">for k, v in pairs(h) do</span></span><br><span class="line"><span class="string">local values = ""</span></span><br><span class="line"><span class="string">if type(v) == "table" then</span></span><br><span class="line"><span class="string">for index, str in pairs(v) do</span></span><br><span class="line"><span class="string">values = values .. str;</span></span><br><span class="line"><span class="string">end</span></span><br><span class="line"><span class="string">end </span></span><br><span class="line"><span class="string">if  type(v) ~= "table" then</span></span><br><span class="line"><span class="string">values = v</span></span><br><span class="line"><span class="string">end </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">res = res .. k .. "=" .. values .. ";" </span></span><br><span class="line"><span class="string">end</span></span><br><span class="line"><span class="string">ngx.var.resp_header = res</span></span><br><span class="line"><span class="string">'</span>;</span><br><span class="line"></span><br><span class="line">listen       443 ssl;</span><br><span class="line">access_log logs/access.log log_req_resp;</span><br><span class="line"></span><br><span class="line">location ^~ / &#123;</span><br><span class="line">proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">proxy_set_header X-Forwarded-For <span class="variable">$remote_addr</span>;</span><br><span class="line">proxy_set_header X-real-ip <span class="variable">$remote_addr</span>;</span><br><span class="line">proxy_pass http://127.0.0.1:9480;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>代码一步步砍下来</p><ol><li>12行定义了变量 $resp_body， </li><li>13 ~ 19 通过Lua把Reponse Body赋值给 $resp_body<br> body_filter_by_lua 会拦截Response ，这个Directive具体说明可以看<a href="https://github.com/openresty/lua-nginx-module#body_filter_by_lua" target="_blank" rel="noopener">body_filter_by_lua</a>, 包裹在单引号的是Lua代码，以及模块给我们提供的一些<a href="https://github.com/openresty/lua-nginx-module#nginx-api-for-lua" target="_blank" rel="noopener">nginx-api-for-lua</a></li><li>21行定义了变量 $resp_header</li><li>22~39 通过Lua把Reponse Header赋值给 $resp_body<br> header_filter_by_lua 会拦截Response ，这个Directive具体说明可以看<a href="https://github.com/openresty/lua-nginx-module#header_filter_by_lua" target="_blank" rel="noopener">header_filter_by_lua </a>, 包裹在单引号的是Lua代码，以及模块给我们提供的一些<a href="https://github.com/openresty/lua-nginx-module#nginx-api-for-lua" target="_blank" rel="noopener">nginx-api-for-lua</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#应用场景&quot;&gt;应用场景&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#系统&quot;&gt;系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#lua-nginx-module模块打印response到日志文件&quot;&gt;lua-nginx
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="Nginx" scheme="http://www.linjia.site/categories/IT/Nginx/"/>
    
    
  </entry>
  
  <entry>
    <title>[备忘]HttpClient Https Request</title>
    <link href="http://www.linjia.site/2017/12/07/%E5%A4%87%E5%BF%98-HttpClient-Https-Request/"/>
    <id>http://www.linjia.site/2017/12/07/备忘-HttpClient-Https-Request/</id>
    <published>2017-12-07T08:08:20.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>httpClient 4.4</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.net.URLDecoder;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"><span class="keyword">import</span> java.security.KeyManagementException;</span><br><span class="line"><span class="keyword">import</span> java.security.KeyStoreException;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"><span class="keyword">import</span> java.security.cert.CertificateException;</span><br><span class="line"><span class="keyword">import</span> java.security.cert.X509Certificate;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Map.Entry;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.HostnameVerifier;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLContext;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLSession;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.TrustManager;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.X509TrustManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.config.RequestConfig;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.entity.UrlEncodedFormEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpGet;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpPost;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.ssl.SSLConnectionSocketFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.entity.ContentType;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.entity.StringEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.CloseableHttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.HttpClientBuilder;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.HttpClients;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.conn.PoolingHttpClientConnectionManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.message.BasicNameValuePair;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.ssl.SSLContextBuilder;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.ssl.TrustStrategy;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.util.EntityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.log4j.Logger;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpClientUtil2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">static</span> Logger LOG=Logger.getLogger(HttpClientUtil.class);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义超时配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> RequestConfigType &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置10分钟超时</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">TIMEOUT_600000(<span class="number">600000</span>,<span class="number">600000</span>,<span class="number">600000</span>),</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置10s超时</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">TIMEOUT_10000(<span class="number">10000</span>, <span class="number">10000</span>, <span class="number">10000</span>),</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置2s超时</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">TIMEOUT_2000(<span class="number">2000</span>, <span class="number">2000</span>, <span class="number">2000</span>),</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置0.5秒</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">TIMEOUT_500(<span class="number">500</span>, <span class="number">500</span>, <span class="number">500</span>);</span><br><span class="line"><span class="keyword">private</span> RequestConfig requestConfig;</span><br><span class="line"></span><br><span class="line">RequestConfigType(<span class="keyword">int</span> socketTimeout, <span class="keyword">int</span> connectTimeout,</span><br><span class="line"><span class="keyword">int</span> requestTimeout) &#123;</span><br><span class="line"><span class="keyword">this</span>.requestConfig = RequestConfig.custom()</span><br><span class="line">.setSocketTimeout(socketTimeout)</span><br><span class="line">.setConnectTimeout(connectTimeout)</span><br><span class="line">.setConnectionRequestTimeout(requestTimeout).build();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String UTF8 = <span class="string">"UTF-8"</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String GBK = <span class="string">"GBK"</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String GB2312 = <span class="string">"GB2312"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">httpsPost</span><span class="params">(String url,</span></span></span><br><span class="line"><span class="function"><span class="params">Map&lt;String, String&gt; headers, String jsonString,</span></span></span><br><span class="line"><span class="function"><span class="params">RequestConfigType requestConfigType)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        HttpClientBuilder httpClientBuilder = HttpClientBuilder.create();  </span><br><span class="line">          </span><br><span class="line">        configureHttpClient(httpClientBuilder);  </span><br><span class="line"></span><br><span class="line">CloseableHttpClient httpClient =createSSLClientDefault();</span><br><span class="line"></span><br><span class="line">HttpPost post = <span class="keyword">new</span> HttpPost(url);</span><br><span class="line">post.setConfig(requestConfigType.requestConfig);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (headers != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (Entry&lt;String, String&gt; e : headers.entrySet()) &#123;</span><br><span class="line">post.addHeader(e.getKey(), e.getValue());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (jsonString != <span class="keyword">null</span>) &#123;</span><br><span class="line">StringEntity entity = <span class="keyword">new</span> StringEntity(jsonString,</span><br><span class="line">ContentType.APPLICATION_JSON);</span><br><span class="line">post.setEntity(entity);</span><br><span class="line">&#125;</span><br><span class="line">String response = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">HttpEntity entity = httpClient.execute(post).getEntity();</span><br><span class="line">response = EntityUtils.toString(entity, UTF8);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"error post data to "</span> + url, e);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">post.releaseConnection();</span><br><span class="line"><span class="keyword">if</span>(httpClient!=<span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">httpClient.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> response;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">configureHttpClient</span><span class="params">(HttpClientBuilder clientBuilder)</span>   </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">try</span>  </span><br><span class="line">        &#123;  </span><br><span class="line">         SSLContext ctx = SSLContext.getInstance(<span class="string">"TLS"</span>);    </span><br><span class="line">             X509TrustManager tm = <span class="keyword">new</span> X509TrustManager()  </span><br><span class="line">             &#123;    </span><br><span class="line">                     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkClientTrusted</span><span class="params">(X509Certificate[] chain,  String authType)</span> <span class="keyword">throws</span> CertificateException   </span></span><br><span class="line"><span class="function">                     </span>&#123;  </span><br><span class="line">                           </span><br><span class="line">                     &#125;    </span><br><span class="line">                     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkServerTrusted</span><span class="params">(X509Certificate[] chain,  String authType)</span> <span class="keyword">throws</span> CertificateException   </span></span><br><span class="line"><span class="function">                     </span>&#123;  </span><br><span class="line">                           </span><br><span class="line">                     &#125;    </span><br><span class="line">                     <span class="keyword">public</span> X509Certificate[] getAcceptedIssuers()   </span><br><span class="line">                     &#123;    </span><br><span class="line">                         <span class="keyword">return</span> <span class="keyword">null</span>;    </span><br><span class="line">                     &#125;    </span><br><span class="line">             &#125;;    </span><br><span class="line">             ctx.init(<span class="keyword">null</span>, <span class="keyword">new</span> TrustManager[]&#123;tm&#125;, <span class="keyword">null</span>);    </span><br><span class="line">               </span><br><span class="line">             clientBuilder.setSslcontext(ctx);  </span><br><span class="line">              </span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)  </span><br><span class="line">        &#123;  </span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> CloseableHttpClient <span class="title">createSSLClientDefault</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            SSLContext sslContext = <span class="keyword">new</span> SSLContextBuilder().loadTrustMaterial(<span class="keyword">null</span>, <span class="keyword">new</span> TrustStrategy() &#123;</span><br><span class="line">                <span class="comment">//信任所有</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isTrusted</span><span class="params">(X509Certificate[] chain, String authType)</span> <span class="keyword">throws</span> CertificateException </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).build();</span><br><span class="line">            SSLConnectionSocketFactory sslsf = <span class="keyword">new</span> SSLConnectionSocketFactory(sslContext, <span class="keyword">new</span> HostnameVerifier() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">verify</span><span class="params">(String hostname, SSLSession session)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">            <span class="keyword">return</span> HttpClients.custom().setSSLSocketFactory(sslsf).build();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (KeyManagementException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (KeyStoreException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> HttpClients.createDefault();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;httpClient 4.4&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="java" scheme="http://www.linjia.site/categories/IT/java/"/>
    
      <category term="other" scheme="http://www.linjia.site/categories/IT/java/other/"/>
    
    
  </entry>
  
  <entry>
    <title>[备忘]C语言入门及编译</title>
    <link href="http://www.linjia.site/2017/12/05/%E5%A4%87%E5%BF%98-C%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8%E5%8F%8A%E7%BC%96%E8%AF%91/"/>
    <id>http://www.linjia.site/2017/12/05/备忘-C语言入门及编译/</id>
    <published>2017-12-05T09:09:48.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#hello-world编译一个文件">Hello World(编译一个文件)</a></li><li><a href="#共享函数库">共享函数库</a></li></ul><!-- tocstop --><p>环境：CentOS 6<br>gcc version： 4.4.7</p><h2><span id="hello-world编译一个文件">Hello World(编译一个文件)</span></h2><p>vi helloworld.c<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Hello, world\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编译</span></span><br><span class="line"><span class="comment"># -o 作用指定输出文件名，如果没有指定例子的helloworld将变成a.out</span></span><br><span class="line">gcc -o helloworld  helloworld.c</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行</span></span><br><span class="line">./helloworld</span><br></pre></td></tr></table></figure><h2><span id="共享函数库">共享函数库</span></h2><p>静态函数库：每次当应用程序和静态连接的函数库一起编译时，任何引用的库函数中的代码都会被直接包含进最终的二进制程序。<br>共享函数库：包含每个库函数的单一全局版本，它在所有应用程序之间共享。<br>sayHi.c<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sayHi</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Hi,C\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>main.c<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sayHi</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sayHi();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>制作libsayhi.so共享库<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gcc -fPIC -c sayHi.c</span><br><span class="line"></span><br><span class="line">gcc -shared -o libsayhi.so sayHi.o</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以写成一条命令</span></span><br><span class="line">gcc -fPIC -shared -o libsayhi.so sayHi.c</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编译main.c</span></span><br><span class="line"><span class="comment"># -lsayhi 告诉编译器引用libsayhi.so库</span></span><br><span class="line"><span class="comment"># -L 告诉编译器库所在位置，"."表示当前目录</span></span><br><span class="line">gcc -o main -lsayhi -L. main.c</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行</span></span><br><span class="line"> ./main</span><br></pre></td></tr></table></figure><p>可能会报错：<br>./main: error while loading shared libraries: libsayhi.so: cannot open shared object file: No such file or directory<br>程序找不到libsayhi.so库位置，可以使用ldd查看<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localtest c_test]<span class="comment"># ./main</span></span><br><span class="line">./main: error <span class="keyword">while</span> loading shared libraries: libsayhi.so: cannot open shared object file: No such file or directory</span><br><span class="line"></span><br><span class="line">[root@localtest c_test]<span class="comment"># ldd main</span></span><br><span class="line">        linux-vdso.so.1 =&gt;  (0x00007fffbd3ff000)</span><br><span class="line">        libsayhi.so =&gt; not found</span><br><span class="line">        libc.so.6 =&gt; /lib64/libc.so.6 (0x0000003117200000)</span><br><span class="line">        /lib64/ld-linux-x86-64.so.2 (0x0000003116e00000)</span><br></pre></td></tr></table></figure></p><p>解决：<br>需要设置一个环境变量LD_LIBRARY_PATH来制定额外的共享函数库搜索路径<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#把LD_LIBRARY_PATH设置为so库所在目录</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=`<span class="built_in">pwd</span>`</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#hello-world编译一个文件&quot;&gt;Hello World(编译一个文件)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#共享函数库&quot;&gt;共享函数库&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tocstop --&gt;
&lt;
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="java" scheme="http://www.linjia.site/categories/IT/java/"/>
    
      <category term="other" scheme="http://www.linjia.site/categories/IT/java/other/"/>
    
    
  </entry>
  
  <entry>
    <title>[ 20170923~2d ] [ 香港 ] [ 麦理浩径 ] 浪茄湾露营麦理浩径二段</title>
    <link href="http://www.linjia.site/2017/09/25/20170923-2d-%E9%A6%99%E6%B8%AF-%E9%BA%A6%E7%90%86%E6%B5%A9%E5%BE%84-%E6%B5%AA%E8%8C%84%E6%B9%BE%E9%9C%B2%E8%90%A5%E9%BA%A6%E7%90%86%E6%B5%A9%E5%BE%84%E4%BA%8C%E6%AE%B5/"/>
    <id>http://www.linjia.site/2017/09/25/20170923-2d-香港-麦理浩径-浪茄湾露营麦理浩径二段/</id>
    <published>2017-09-25T11:32:14.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#day-1">Day 1</a><ul><li><a href="#深圳湾口岸~香港西贡">深圳湾口岸~香港西贡</a></li><li><a href="#西贡~万宜水库东坝">西贡~万宜水库东坝</a></li><li><a href="#万宜水库~浪茄湾~露营">万宜水库~浪茄湾~露营</a></li></ul></li><li><a href="#day-2">Day 2</a><ul><li><a href="#麦理浩径二段徒步">麦理浩径二段徒步</a></li><li><a href="#麦理浩径二段~西贡~口岸">麦理浩径二段~西贡~口岸</a></li></ul></li><li><a href="#经验总结多人团队多于10人">经验总结（多人团队多于10人）</a></li></ul><!-- tocstop --><h1><span id="day-1">Day 1</span></h1><h2><span id="深圳湾口岸~香港西贡">深圳湾口岸~香港西贡</span></h2><p>我们采用的方案是：<br>预订跨境商务车，一辆可以做6人（7座），从科技园出发到西贡（由于麦理浩径除了的士其他车不能进入），价格600块左右。我们17个人订了3辆</p><p>优势：全程从上车点到西贡不用下车<br>缺点：稍微贵了点，个人觉得还好，香港的交通本来就很贵</p><img src="/2017/09/25/20170923-2d-香港-麦理浩径-浪茄湾露营麦理浩径二段/01.jpg" title="深圳湾口岸"><h2><span id="西贡~万宜水库东坝">西贡~万宜水库东坝</span></h2><p>从西贡到万宜水库只能打的士了，香港的的士分为4人或是5人的，在车头有标</p><p>视频：风景优美的东坝，时长15秒</p><iframe frameborder="0" width="640" height="498" src="https://v.qq.com/iframe/player.html?vid=u0507umfc26&tiny=0&auto=0" allowfullscreen></iframe><h2><span id="万宜水库~浪茄湾~露营">万宜水库~浪茄湾~露营</span></h2><p>视频：从山上看浪茄湾，干净，时长17秒</p><iframe frameborder="0" width="640" height="498" src="https://v.qq.com/iframe/player.html?vid=w0507ex6sy8&tiny=0&auto=0" allowfullscreen></iframe><p>拍完自拍，走路20分钟左右（一路也是走走停停，各种拍照），终到浪茄湾</p><p>视频：浪茄湾，时长9秒</p><iframe frameborder="0" width="640" height="498" src="https://v.qq.com/iframe/player.html?vid=n0507eo7vvy&tiny=0&auto=0" allowfullscreen></iframe><p>我们从早上9点集合，一路折腾，到达今天的目的地浪茄湾，大概是下午两点左右。</p><p>午餐：部分人在西贡那里吃午餐，部分人在浪茄湾烧烤<br>晚餐：出发前规划的火锅，器具食材都是在深圳买好带过来</p><img src="/2017/09/25/20170923-2d-香港-麦理浩径-浪茄湾露营麦理浩径二段/浪茄湾_烧烤.JPG" title="午餐下午茶烧烤搞起来"><img src="/2017/09/25/20170923-2d-香港-麦理浩径-浪茄湾露营麦理浩径二段/浪茄湾_火锅01.JPG" title="晚餐是火锅"><img src="/2017/09/25/20170923-2d-香港-麦理浩径-浪茄湾露营麦理浩径二段/浪茄湾_火锅02.JPG" title="晚餐是火锅"><img src="/2017/09/25/20170923-2d-香港-麦理浩径-浪茄湾露营麦理浩径二段/浪茄湾_沙滩狼人杀.JPG" title="沙滩狼人杀，猎人总是走不出带走预言家的坑"><p>注意注意</p><ol><li>浪茄湾很难收到信号</li><li>注意饮用水，第二天的徒步需要走到西湾才有补给（具体多久忘记了，需要几个小时，最好备有3~4瓶）</li></ol><h1><span id="day-2">Day 2</span></h1><h2><span id="麦理浩径二段徒步">麦理浩径二段徒步</span></h2><img src="/2017/09/25/20170923-2d-香港-麦理浩径-浪茄湾露营麦理浩径二段/团队.jpg" title="拍完团体照出发"><img src="/2017/09/25/20170923-2d-香港-麦理浩径-浪茄湾露营麦理浩径二段/二段美丽风景01.JPG" title="二段美丽风景"><p>达到西湾才有补给站，到达西湾有工作人员在提醒注意安全<br><img src="/2017/09/25/20170923-2d-香港-麦理浩径-浪茄湾露营麦理浩径二段/地图.jpg" title="到达西湾有幅地图"></p><h2><span id="麦理浩径二段~西贡~口岸">麦理浩径二段~西贡~口岸</span></h2><img src="/2017/09/25/20170923-2d-香港-麦理浩径-浪茄湾露营麦理浩径二段/二段终点.jpg" title="负重徒步终到终点"><p>由于二段的终点比较少的士，所以我们觉得先搭乘巴士去西贡，再从西贡打的去口岸（大概320人民币）</p><h1><span id="经验总结多人团队多于10人">经验总结（多人团队多于10人）</span></h1><ol><li>一定一定要分组，指定组长</li><li>以小组为单位活动，没有必要勉强所以小组都在一起，第一天的午饭有些人在西贡吃午饭，有些人就先搭的士先去。都是成年人，香港也讲普通话，丢不了</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#day-1&quot;&gt;Day 1&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#深圳湾口岸~香港西贡&quot;&gt;深圳湾口岸~香港西贡&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#西贡~万宜水库东坝&quot;&gt;西贡~万宜水库东坝&lt;/a&gt;&lt;/l
      
    
    </summary>
    
      <category term="旅游" scheme="http://www.linjia.site/categories/%E6%97%85%E6%B8%B8/"/>
    
    
      <category term="旅游" scheme="http://www.linjia.site/tags/%E6%97%85%E6%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>Linux SVN(https+web权限管理)</title>
    <link href="http://www.linjia.site/2017/09/11/Linux-SVN-https-web%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/"/>
    <id>http://www.linjia.site/2017/09/11/Linux-SVN-https-web权限管理/</id>
    <published>2017-09-11T10:10:25.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#创建仓库">创建仓库</a></li><li><a href="#apache配置svn模块">apache配置SVN模块</a></li><li><a href="#ifsvnadmin-web管理界面用户和权限管理">iF.SVNAdmin - Web管理界面（用户和权限管理）</a></li></ul><!-- tocstop --><hr><h1><span id="创建仓库">创建仓库</span></h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">svnadmin create /data/svndata/<span class="built_in">test</span> -- <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#修改权限, 由于使用apache访问，所以修改成apache的启动用户</span></span><br><span class="line">chown -R apache:apache /data/svndata/<span class="built_in">test</span></span><br></pre></td></tr></table></figure><h1><span id="apache配置svn模块">apache配置SVN模块</span></h1><ol><li><p>修改 /etc/httpd/conf/httpd.conf文件 增加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Include conf/svn.conf</span><br></pre></td></tr></table></figure></li><li><p>创建/etc/httpd/conf/svn.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">LoadModule dav_svn_module modules/mod_dav_svn.so</span><br><span class="line">LoadModule authz_svn_module modules/mod_authz_svn.so</span><br><span class="line"></span><br><span class="line">&lt;Location /svn/<span class="built_in">test</span>&gt;</span><br><span class="line">        DAV svn</span><br><span class="line">        SVNPath /data/svndata/<span class="built_in">test</span></span><br><span class="line">        SVNListParentPath on</span><br><span class="line"></span><br><span class="line">        AuthName <span class="string">"welcome to Medica svn"</span></span><br><span class="line">        AuthType Basic</span><br><span class="line">        AuthUserFile /data/svndata/svn-auth.htpasswd</span><br><span class="line">        AuthzSVNAccessFile /data/svndata/svn-access</span><br><span class="line">        Require valid-user</span><br><span class="line">&lt;/Location&gt;</span><br></pre></td></tr></table></figure></li></ol><table><thead><tr><th>name</th><th>description</th><th>remark</th></tr></thead><tbody><tr><td>SVNPath</td><td>仓库地址</td><td></td></tr><tr><td>AuthUserFile</td><td>用户名和密码</td><td>使用web管理界面配置</td></tr><tr><td>AuthzSVNAccessFile</td><td>权限管理</td><td>使用web管理界面配置</td></tr></tbody></table><h1><span id="ifsvnadmin-web管理界面用户和权限管理">iF.SVNAdmin - Web管理界面（用户和权限管理）</span></h1><p>iF.SVNAdmin是PHP写的，放到apache运行，且配置好如下配置</p><img src="/2017/09/11/Linux-SVN-https-web权限管理/01.png">]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#创建仓库&quot;&gt;创建仓库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#apache配置svn模块&quot;&gt;apache配置SVN模块&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#ifsvnadmin-web管理界面用户和权
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="Linux" scheme="http://www.linjia.site/categories/IT/Linux/"/>
    
    
      <category term="linux,svn,http,https,web,权限管理" scheme="http://www.linjia.site/tags/linux-svn-http-https-web-%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJ GUI Designer 打成可执行jar包</title>
    <link href="http://www.linjia.site/2017/08/28/IntelliJ-GUI-Designer-%E6%89%93%E6%88%90%E5%8F%AF%E6%89%A7%E8%A1%8Cjar%E5%8C%85/"/>
    <id>http://www.linjia.site/2017/08/28/IntelliJ-GUI-Designer-打成可执行jar包/</id>
    <published>2017-08-28T09:20:05.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>参考 <a href="https://intellij-support.jetbrains.com/hc/en-us/community/posts/206200489-Problems-with-maven-while-using-intelij-idea-gui-designer-?sort_by=votes" target="_blank" rel="noopener">Problems with maven while using intelij idea gui designer</a></p><p>报错：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">java.awt.IllegalComponentStateException: contentPane cannot be set to <span class="keyword">null</span>.</span><br><span class="line">        at javax.swing.JRootPane.setContentPane(JRootPane.java:<span class="number">621</span>)</span><br><span class="line">        at javax.swing.JFrame.setContentPane(JFrame.java:<span class="number">698</span>)</span><br><span class="line">        at com.jia.autocode.Panel.&lt;init&gt;(Panel.java:<span class="number">93</span>)</span><br><span class="line">        at com.jia.autocode.Main.main(Main.java:<span class="number">16</span>)</span><br></pre></td></tr></table></figure></p><p>IntelliJ GUI Designer的.form是使用自己的javac2 compiler，所以标准JDK是无法解析编译这个.form文件的。</p><p>pom.xml增加下面两个插件</p><ol><li>maven-shade-plugin把项目打成一个可执行jar包</li><li>maven-antrun-plugin执行javac2 compiler</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-shade-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>shade<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">transformers</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">transformer</span> <span class="attr">implementation</span>=<span class="string">"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.jia.autocode.Main<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">transformer</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">transformers</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-antrun-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.sun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>system<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">systemPath</span>&gt;</span>$&#123;java.home&#125;/../lib/tools.jar<span class="tag">&lt;/<span class="name">systemPath</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tasks</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"IDEA.home"</span> <span class="attr">value</span>=<span class="string">"/Applications/IntelliJ IDEA.app/Contents"</span>/&gt;</span> <span class="comment">&lt;!-- My IDEA home. --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">"j2cp"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">pathelement</span> <span class="attr">location</span>=<span class="string">"$&#123;IDEA.home&#125;/lib/asm-5.0.3.jar"</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">pathelement</span> <span class="attr">location</span>=<span class="string">"$&#123;IDEA.home&#125;/lib/asm-all.jar"</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">pathelement</span> <span class="attr">location</span>=<span class="string">"$&#123;IDEA.home&#125;/lib/javac2.jar"</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">pathelement</span> <span class="attr">location</span>=<span class="string">"$&#123;IDEA.home&#125;/lib/jdom.jar"</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">pathelement</span> <span class="attr">location</span>=<span class="string">"$&#123;IDEA.home&#125;/lib/jgoodies-forms.jar"</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">"j2sp"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">pathelement</span> <span class="attr">location</span>=<span class="string">"$&#123;project.basedir&#125;\src\main\java"</span>/&gt;</span> </span><br><span class="line">                    <span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">taskdef</span> <span class="attr">name</span>=<span class="string">"javac2"</span> <span class="attr">classpathref</span>=<span class="string">"j2cp"</span> <span class="attr">classname</span>=<span class="string">"com.intellij.ant.Javac2"</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">javac2</span> <span class="attr">destdir</span>=<span class="string">"$&#123;project.basedir&#125;\target\classes"</span>&gt;</span> </span><br><span class="line">                        <span class="tag">&lt;<span class="name">src</span> <span class="attr">refid</span>=<span class="string">"j2sp"</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">javac2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tasks</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>run<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><p>请注意：</p><ol><li>maven-shade-plugin的mainClass，请填写自己main方法所在的class</li><li>maven-antrun-plugin中的”IDEA.home”是IntelliJ所在的路径</li><li>${IDEA.home}/lib/asm-5.0.3.jar，${IDEA.home}/lib/asm-all.jar等5个jar包，请到具体路径下看是否存在，名字有可能是不一样的</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;参考 &lt;a href=&quot;https://intellij-support.jetbrains.com/hc/en-us/community/posts/206200489-Problems-with-maven-while-using-intelij-idea-gui-de
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="java" scheme="http://www.linjia.site/categories/IT/java/"/>
    
      <category term="IDE" scheme="http://www.linjia.site/categories/IT/java/IDE/"/>
    
    
      <category term="IT工具" scheme="http://www.linjia.site/tags/IT%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot学习 ( 三 ) - Log</title>
    <link href="http://www.linjia.site/2017/08/24/SpringBoot%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%89%EF%BC%89-Log/"/>
    <id>http://www.linjia.site/2017/08/24/SpringBoot学习（三）-Log/</id>
    <published>2017-08-24T08:11:09.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#使用log4j2">使用Log4j2</a></li></ul><!-- tocstop --><hr><p><a href="https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/" target="_blank" rel="noopener">Spring Boot Reference Guide</a></p><p><code>版本：</code>1.5.6.RELEASE</p><hr><h1><span id="使用log4j2">使用Log4j2</span></h1><ol><li><p>修改pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 去掉spring-boot-starter-logging --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 加入spring-boot-starter-log4j2 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-log4j2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在resource下创建文件log4j2.xml，spring会自动去加载在这个位置的这个文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">Configuration</span> <span class="attr">status</span>=<span class="string">"WARN"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Appenders</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">"Console"</span> <span class="attr">target</span>=<span class="string">"SYSTEM_OUT"</span> <span class="attr">follow</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d %p %C&#123;1.&#125; [%t] %m%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">PatternLayout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">"RollingFile"</span> <span class="attr">fileName</span>=<span class="string">"logs/eagle.log"</span> <span class="attr">filePattern</span>=<span class="string">"logs/eagle-%d&#123;MM-dd-yyyy&#125;.log"</span> <span class="attr">ignoreExceptions</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Pattern</span>&gt;</span>%d %p %c&#123;1.&#125; [%t] %m%n<span class="tag">&lt;/<span class="name">Pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">PatternLayout</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Appenders</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Loggers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">"org.springframework"</span> <span class="attr">level</span>=<span class="string">"warn"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Root</span> <span class="attr">level</span>=<span class="string">"info"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">"Console"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">"RollingFile"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>配置文件中有个RollingFile，如果在Intellij IDEA右键运行的话，log文件是放在项目代码的根目录下（Mac系统，window没试过）</p><ol start="3"><li>指定配置文件，例如logging.xml（可选）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改application.properties文件</span></span><br><span class="line">logging.config = classpath:logging.xml</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#使用log4j2&quot;&gt;使用Log4j2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tocstop --&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.spring.io/spring-boot/docs/
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="java" scheme="http://www.linjia.site/categories/IT/java/"/>
    
      <category term="spring" scheme="http://www.linjia.site/categories/IT/java/spring/"/>
    
    
      <category term="springboot" scheme="http://www.linjia.site/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot学习 ( 二 )</title>
    <link href="http://www.linjia.site/2017/08/17/SpringBoot%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://www.linjia.site/2017/08/17/SpringBoot学习（二）/</id>
    <published>2017-08-17T10:00:51.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#1rest风格的uri">1.Rest风格的URI</a></li><li><a href="#2访问静态资源">2.访问静态资源</a></li><li><a href="#3spring-mvc-json格式化输出配置jackson">3.Spring mvc Json格式化输出配置(Jackson)</a><ul><li><a href="#31-jackson格式化输出date">3.1 Jackson格式化输出Date</a></li><li><a href="#31-jackson不输出null或是空的变量">3.1 Jackson不输出null或是空的变量</a></li></ul></li><li><a href="#4获取命令行启动的参数">4.获取命令行启动的参数</a><ul><li><a href="#41-使用value">4.1 使用@Value</a></li><li><a href="#42-使用applicationarguments">4.2 使用ApplicationArguments</a></li><li><a href="#43-实现commandlinerunner接口">4.3 实现CommandLineRunner接口</a></li></ul></li><li><a href="#spring-mvc-自定义header">spring mvc 自定义header</a></li><li><a href="#import-springxml文件">import spring.xml文件</a></li></ul><!-- tocstop --><p><a href="https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/" target="_blank" rel="noopener">Spring Boot Reference Guide</a></p><p><code>版本：</code>1.5.6.RELEASE</p><h1><span id="1rest风格的uri">1.Rest风格的URI</span></h1><p>访问方式 Http://host/user/100<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.example.springBootTest.bean.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/&#123;userId&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">(@PathVariable <span class="keyword">long</span> userId)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setUserId(userId);</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><h1><span id="2访问静态资源">2.访问静态资源</span></h1><p>在classpath路径下，有如下文件夹名称 /static (or /public or /resources or /META-INF/resources)<br>里面的文件将作为静态文件被访问, 建立如下文件<br><img src="/2017/08/17/SpringBoot学习（二）/01.png" alt=""><br>Http://host/index.html<br>Http://host/user2/user.html<br>注意：为什么是user2而不是user，在上面我们建立了个Controller（UserController），如果使用user的话，优先匹配Controller，会报错</p><hr><h1><span id="3spring-mvc-json格式化输出配置jackson">3.Spring mvc Json格式化输出配置(Jackson)</span></h1><h2><span id="31-jackson格式化输出date">3.1 Jackson格式化输出Date</span></h2><p>spring默认使用Jackson输出json，Jackson对于Date是输出成时间戳，要改成”yyyy-MM-dd hh:mm:ss”这种格式的字符串<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonGenerator;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonParser;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.DeserializationContext;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.JsonDeserializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.JsonSerializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.SerializerProvider;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.annotation.JsonDeserialize;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.jackson.JsonComponent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by jialin on 17/8/2017.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@JsonComponent</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JsonConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> SimpleDateFormat format = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd hh:mm:ss"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Serializer</span> <span class="keyword">extends</span> <span class="title">JsonSerializer</span>&lt;<span class="title">Date</span>&gt; </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">serialize</span><span class="params">(Date value, JsonGenerator gen, SerializerProvider serializers)</span> <span class="keyword">throws</span> IOException, JsonProcessingException </span>&#123;</span><br><span class="line">            gen.writeString(format.format(value));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Deserializer</span> <span class="keyword">extends</span> <span class="title">JsonDeserializer</span>&lt;<span class="title">Date</span>&gt; </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> Date <span class="title">deserialize</span><span class="params">(JsonParser p, DeserializationContext ctxt)</span> <span class="keyword">throws</span> IOException, JsonProcessingException </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><h2><span id="31-jackson不输出null或是空的变量">3.1 Jackson不输出null或是空的变量</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonInclude;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.converter.json.Jackson2ObjectMapperBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JsonConfig</span> <span class="keyword">implements</span> <span class="title">Jackson2ObjectMapperBuilderCustomizer</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">customize</span><span class="params">(Jackson2ObjectMapperBuilder jacksonObjectMapperBuilder)</span> </span>&#123;</span><br><span class="line">        jacksonObjectMapperBuilder.serializationInclusion(JsonInclude.Include.NON_NULL).serializationInclusion(JsonInclude.Include.NON_EMPTY);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonInclude;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.converter.json.Jackson2ObjectMapperBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by jialin on 22/8/2017.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JsonConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Jackson2ObjectMapperBuilder <span class="title">objectMapperBuilder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Jackson2ObjectMapperBuilder builder = <span class="keyword">new</span> Jackson2ObjectMapperBuilder();</span><br><span class="line">        builder.serializationInclusion(JsonInclude.Include.NON_NULL).serializationInclusion(JsonInclude.Include.NON_EMPTY);</span><br><span class="line">        <span class="keyword">return</span> builder;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1><span id="4获取命令行启动的参数">4.获取命令行启动的参数</span></h1><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行</span></span><br><span class="line">$ java -jar target/springBootTest-0.0.1-SNAPSHOT.jar --name=<span class="string">'spring'</span> --logFileList logfile.txt logfile2.txt</span><br></pre></td></tr></table></figure><ul><li>如何在IntelliJ IDEA配置这个参数<br><img src="/2017/08/17/SpringBoot学习（二）/02.png" alt="步骤一"><br><img src="/2017/08/17/SpringBoot学习（二）/03.png" alt="步骤二"></li></ul><hr><h2><span id="41-使用value">4.1 使用@Value</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> javax.annotation.PostConstruct;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ParamsFromCommandLine</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;name&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;logFileList&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String logFileList;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"name = "</span>+name);</span><br><span class="line">        System.out.println(<span class="string">"logFileList = "</span>+logFileList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果可以看出需要–name=’spring’有等于号的才能拿到<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">'spring'</span></span><br><span class="line">logFileList =</span><br></pre></td></tr></table></figure></p><hr><h2><span id="42-使用applicationarguments">4.2 使用ApplicationArguments</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.ApplicationArguments;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBean</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyBean</span><span class="params">(ApplicationArguments args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> name = args.containsOption(<span class="string">"name"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Print NonOptionArgs</span></span><br><span class="line">        List&lt;String&gt; nonOptionArgs = args.getNonOptionArgs();</span><br><span class="line">        <span class="keyword">if</span> (nonOptionArgs!=<span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (String item:nonOptionArgs)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(<span class="string">"nonOptionArg :"</span> + item);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Print Names</span></span><br><span class="line">        Set&lt;String&gt; names = args.getOptionNames();</span><br><span class="line">        <span class="keyword">if</span> (names != <span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (String item:names)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(item+<span class="string">" = "</span> +args.getOptionValues(item));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果，值得注意的是args.getOptionValues是返回一个数据，那就是我们是否可以添加多一个”–name”<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ java -jar target/springBootTest-0.0.1-SNAPSHOT.jar --name=<span class="string">'spring'</span>  --logFileList logfile.txt logfile2.txt </span><br><span class="line">nonOptionArg :logfile.txt</span><br><span class="line">nonOptionArg :logfile2.txt</span><br><span class="line">logFileList = []</span><br><span class="line">name = [<span class="string">'spring'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行</span></span><br><span class="line">$ java -jar target/springBootTest-0.0.1-SNAPSHOT.jar --name=<span class="string">'spring'</span> --name=<span class="string">'spring2'</span> --logFileList logfile.txt logfile2.txt </span><br><span class="line">nonOptionArg :logfile.txt</span><br><span class="line">nonOptionArg :logfile2.txt</span><br><span class="line">logFileList = []</span><br><span class="line">name = [<span class="string">'spring'</span>,<span class="string">'spring2'</span>]</span><br></pre></td></tr></table></figure></p><hr><h2><span id="43-实现commandlinerunner接口">4.3 实现CommandLineRunner接口</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.CommandLineRunner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConfigBeforeStart</span> <span class="keyword">implements</span> <span class="title">CommandLineRunner</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(String... args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (String item : args)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">"args : "</span>+item);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">args : --name=<span class="string">'spring'</span></span><br><span class="line">args : --logFileList</span><br><span class="line">args : logfile.txt</span><br><span class="line">args : logfile2.txt</span><br></pre></td></tr></table></figure></p><p>CommandLineRunner主要作用是用于SpringApplication启动之前执行一些代码，具体可以看<a href="https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-command-line-runner" target="_blank" rel="noopener">boot-features-command-line-runner</a></p><hr><h1><span id="spring-mvc-自定义header">spring mvc 自定义header</span></h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.example.springBootTest.Params;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.EnableAutoConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpHeaders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ModelAttribute;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.resource.ResourceHttpRequestHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/1"</span>)</span><br><span class="line">    <span class="function">String <span class="title">home</span><span class="params">(HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">        response.setHeader(<span class="string">"header1"</span>,<span class="string">"header1"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello World 1"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/2"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseEntity <span class="title">home2</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        HttpHeaders httpHeaders = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">        httpHeaders.add(<span class="string">"header2"</span>,<span class="string">"header2"</span>);</span><br><span class="line">        httpHeaders.add(<span class="string">"header3"</span>,<span class="string">"header3"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResponseEntity(<span class="string">"Hello World 2"</span>,httpHeaders, HttpStatus.OK);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ModelAttribute</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setVaryResponseHeader</span><span class="params">(HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">        response.setHeader(<span class="string">"Vary"</span>, <span class="string">"Accept"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上展现了3种方式</p><ol><li>HttpServletResponse以参数的方式传入到方法里面</li><li>通过返回ResponseEntity，设置headers</li><li>@ModelAttribute，这个注解的作用是Controller的每个方法执行前都会执行</li></ol><h1><span id="import-springxml文件">import spring.xml文件</span></h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@ImportResource</span>(locations = &#123;<span class="string">"classpath:spring/spring.xml"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootTestApplication</span>  </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SpringApplication.run(SpringBootTestApplication.class, args);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用<code>@ImportResource</code>注解</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1rest风格的uri&quot;&gt;1.Rest风格的URI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2访问静态资源&quot;&gt;2.访问静态资源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#3spring-mvc-json格式
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="java" scheme="http://www.linjia.site/categories/IT/java/"/>
    
      <category term="spring" scheme="http://www.linjia.site/categories/IT/java/spring/"/>
    
    
      <category term="springboot" scheme="http://www.linjia.site/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>从0到1</title>
    <link href="http://www.linjia.site/2017/08/06/%E4%BB%8E0%E5%88%B01/"/>
    <id>http://www.linjia.site/2017/08/06/从0到1/</id>
    <published>2017-08-06T09:13:18.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2017/08/06/从0到1/s28012945.jpg" alt=""></p><p><em>开始：2017-08-06</em><br><em>结束：2017</em></p><p>非垄断者的谎言和垄断者相反，他们不会夸大竞争对立，而是会说：”我们结成了自己的联盟。”创业家通常倾向于对市场竞争轻描淡写，但这却是初创公司犯下的最大错误。而最致命的诱惑就是将市场描述得太狭小，好像你可以理所当然地驾驭它一样。</p><p>如果你忽略了激烈的竞争而只看到你开的菜馆那些细微的特使 – 也许你认为你家的印度薄饼很棒，因为你曾祖母给了你超棒的配方 – 那么，你的生意不可能持续下去</p><p>垄断企业推进社会进步，因为数年甚至是数十年的垄断利润是有力的创新动机。之后垄断企业会不断创新，因为利润给了它们规划长远未来的资本，它们有能力投资雄心勃勃的研究项目，这些是困在竞争之中的企业想都不敢想的。</p><p>托尔斯泰在《安娜.卡列尼娜》中以下面这段文字作为开头：”幸福的家庭总是相似的，不幸的家庭各有各的不幸”。而在商业中，情形恰恰相反。企业成功的原因各有不同：每个垄断企业都是靠解决一个独一无二的问题获得垄断地位；而企业失败的原因却相同：它们都无法逃脱竞争。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2017/08/06/从0到1/s28012945.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;开始：2017-08-06&lt;/em&gt;&lt;br&gt;&lt;em&gt;结束：2017&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;非垄断者的谎言和垄断者相反，他们不会夸大竞争对立，而是会说：
      
    
    </summary>
    
      <category term="读书" scheme="http://www.linjia.site/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="读书" scheme="http://www.linjia.site/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJ IED java远程debug</title>
    <link href="http://www.linjia.site/2017/08/02/IntelliJ-IED-java%E8%BF%9C%E7%A8%8Bdebug/"/>
    <id>http://www.linjia.site/2017/08/02/IntelliJ-IED-java远程debug/</id>
    <published>2017-08-02T10:07:06.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2017/08/02/IntelliJ-IED-java远程debug/01.png" alt="右上角 Edit Configurations"><br><img src="/2017/08/02/IntelliJ-IED-java远程debug/02.png" alt=""><br><img src="/2017/08/02/IntelliJ-IED-java远程debug/03.png" alt=""><br><img src="/2017/08/02/IntelliJ-IED-java远程debug/04.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2017/08/02/IntelliJ-IED-java远程debug/01.png&quot; alt=&quot;右上角 Edit Configurations&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2017/08/02/IntelliJ-IED-java远程debug/0
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="java" scheme="http://www.linjia.site/categories/IT/java/"/>
    
      <category term="IDE" scheme="http://www.linjia.site/categories/IT/java/IDE/"/>
    
    
      <category term="IT工具" scheme="http://www.linjia.site/tags/IT%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot学习 ( 一 )</title>
    <link href="http://www.linjia.site/2017/08/02/SpringBoot%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://www.linjia.site/2017/08/02/SpringBoot学习（一）/</id>
    <published>2017-08-02T06:45:14.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#1-创建项目">1 创建项目</a></li><li><a href="#2-创建http-server">2 创建Http Server</a><ul><li><a href="#21-修改pomxml加入依赖">2.1 修改pom.xml，加入依赖</a></li><li><a href="#22-创建controller">2.2 创建Controller</a></li><li><a href="#23-运行项目">2.3 运行项目</a><ul><li><a href="#231-在ide中eclipseintellij">2.3.1 在IDE中(Eclipse,IntelliJ)</a></li><li><a href="#232-编译成jar运行">2.3.2 编译成jar运行</a></li><li><a href="#233-使用maven运行">2.3.3 使用maven运行</a></li><li><a href="#234-打成war包">2.3.4 打成war包</a></li></ul></li></ul></li><li><a href="#3-修改启动的端口">3 修改启动的端口</a></li></ul><!-- tocstop --><p><a href="https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/" target="_blank" rel="noopener">Spring Boot Reference Guide</a></p><p><code>版本：</code>1.5.6.RELEASE</p><h1><span id="1-创建项目">1 创建项目</span></h1><p><a href="https://start.spring.io/" target="_blank" rel="noopener">https://start.spring.io/</a> 使用线上工具可以很容易创建spring-boot项目（我创建的是maven格式的项目）<br>Group :  com.example<br>Artifact : springBootTest</p><hr><h1><span id="2-创建http-server">2 创建Http Server</span></h1><h2><span id="21-修改pomxml加入依赖">2.1 修改pom.xml，加入依赖</span></h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2><span id="22-创建controller">2.2 创建Controller</span></h2><p>创建文件 com/example/springBootTest/controller/IndexController.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springBootTest.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springBootTest.Params;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.EnableAutoConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/"</span>)</span><br><span class="line">    <span class="function">String <span class="title">home</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello World"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2><span id="23-运行项目">2.3 运行项目</span></h2><h3><span id="231-在ide中eclipseintellij">2.3.1 在IDE中(Eclipse,IntelliJ)</span></h3><p>在SpringBootTestApplication右键 -&gt; Run, localhost:8080访问<br><img src="/2017/08/02/SpringBoot学习（一）/01.png" alt=""></p><h3><span id="232-编译成jar运行">2.3.2 编译成jar运行</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd到工程路径</span></span><br><span class="line">$ ls</span><br><span class="line">mvnwpom.xmlsrc</span><br><span class="line">mvnw.cmdspringBootTest.imltarget</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译打包</span></span><br><span class="line">$ mvn clean package -Dmaven.test.skip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行</span></span><br><span class="line">$ java -jar target/springBootTest-0.0.1-SNAPSHOT.jar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行(debug)</span></span><br><span class="line">$ java -Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=8000,<span class="built_in">suspend</span>=n -jar target/springBootTest-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure><p>编译打包后会生成2个jar<br>springBootTest-0.0.1-SNAPSHOT.jar 集成所有依赖的jar<br>springBootTest-0.0.1-SNAPSHOT.jar.original 只要用户自己写的class<br>可以使用下面命令查看两个包的差异<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看jar的目录结构</span></span><br><span class="line">$ jar tvf springBootTest-0.0.1-SNAPSHOT.jar </span><br><span class="line"></span><br><span class="line"><span class="comment">#解压jar包</span></span><br><span class="line">$ jar xvf springBootTest-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure></p><h3><span id="233-使用maven运行">2.3.3 使用maven运行</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ mvn spring-boot:run</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可能需要设置maven的运行参数</span></span><br><span class="line">$ <span class="built_in">export</span> MAVEN_OPTS=-Xmx1024m -XX:MaxPermSize=128M</span><br></pre></td></tr></table></figure><h3><span id="234-打成war包">2.3.4 打成war包</span></h3><ol><li><p>修改SpringBootApplication</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 注意下和原本的区别</span></span><br><span class="line"><span class="comment">// 1. extends SpringBootServletInitializer</span></span><br><span class="line"><span class="comment">// 2. 多了configure方法</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootTestApplication</span> <span class="keyword">extends</span> <span class="title">SpringBootServletInitializer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> SpringApplicationBuilder <span class="title">configure</span><span class="params">(SpringApplicationBuilder application)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> application.sources(SpringBootTestApplication.class);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SpringApplication.run(SpringBootTestApplication.class, args);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- jar改成war --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 增加依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mvn clean package -Dmaven.test.skip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在target目录下可以看到springBootTest-0.0.1-SNAPSHOT.war文件</span></span><br></pre></td></tr></table></figure></li></ol><hr><h1><span id="3-修改启动的端口">3 修改启动的端口</span></h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改application.properties文件</span></span><br><span class="line">server.port=8181</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1-创建项目&quot;&gt;1 创建项目&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2-创建http-server&quot;&gt;2 创建Http Server&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#21-修改pomxml加入依赖
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="java" scheme="http://www.linjia.site/categories/IT/java/"/>
    
      <category term="spring" scheme="http://www.linjia.site/categories/IT/java/spring/"/>
    
    
      <category term="springboot" scheme="http://www.linjia.site/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>[ 深圳 ] [ 羊台山 ] [ 20170729 ] 野餐还是爬山?</title>
    <link href="http://www.linjia.site/2017/07/31/%E6%B7%B1%E5%9C%B3-%E7%BE%8A%E5%8F%B0%E5%B1%B1-20170729-%E9%87%8E%E9%A4%90%E8%BF%98%E6%98%AF%E7%88%AC%E5%B1%B1/"/>
    <id>http://www.linjia.site/2017/07/31/深圳-羊台山-20170729-野餐还是爬山/</id>
    <published>2017-07-31T08:43:10.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2017/07/31/深圳-羊台山-20170729-野餐还是爬山/01.png" alt=""></p><p>路线： 大浪 -&gt; 小羊台山顶 -&gt; 大羊台山顶 -&gt; 石岩<br>耗时： 5个小时</p><p>欣赏一路美照<br><img src="/2017/07/31/深圳-羊台山-20170729-野餐还是爬山/02.jpg" alt=""><br><img src="/2017/07/31/深圳-羊台山-20170729-野餐还是爬山/03.jpg" alt=""><br><img src="/2017/07/31/深圳-羊台山-20170729-野餐还是爬山/04.jpg" alt=""><br><img src="/2017/07/31/深圳-羊台山-20170729-野餐还是爬山/05.jpg" alt=""><br><img src="/2017/07/31/深圳-羊台山-20170729-野餐还是爬山/06.jpg" alt=""><br><img src="/2017/07/31/深圳-羊台山-20170729-野餐还是爬山/07.jpg" alt="路遇黄瓜摊，没冰镇过，不屑"></p><p>没看错，由于准备太过于充分，爬山变野餐</p><p>爬山还能吃到冰镇的西瓜，火龙果，桃子，枣子，果冻。还有各种牛肉干，鸡腿，辣条… 不要太幸福~~~</p><p>最后来个团体照<br><img src="/2017/07/31/深圳-羊台山-20170729-野餐还是爬山/08.jpeg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2017/07/31/深圳-羊台山-20170729-野餐还是爬山/01.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;路线： 大浪 -&amp;gt; 小羊台山顶 -&amp;gt; 大羊台山顶 -&amp;gt; 石岩&lt;br&gt;耗时： 5个小时&lt;/p&gt;
&lt;p&gt;欣赏一路美照&lt;br&gt;
      
    
    </summary>
    
      <category term="旅游" scheme="http://www.linjia.site/categories/%E6%97%85%E6%B8%B8/"/>
    
    
      <category term="旅游" scheme="http://www.linjia.site/tags/%E6%97%85%E6%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>5-Hexo加入百度统计</title>
    <link href="http://www.linjia.site/2017/07/12/5-Hexo%E5%8A%A0%E5%85%A5%E7%99%BE%E5%BA%A6%E7%BB%9F%E8%AE%A1/"/>
    <id>http://www.linjia.site/2017/07/12/5-Hexo加入百度统计/</id>
    <published>2017-07-12T08:25:57.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#简单粗暴的方式">简单粗暴的方式</a></li><li><a href="#优雅可控的方式">优雅可控的方式</a></li></ul><!-- tocstop --><p>默认主题（landscape）<br>把百度统计放在每个页面的最下面，百度统计的代码必须放在<code>&lt;/head&gt;</code>之前</p><h3><span id="简单粗暴的方式">简单粗暴的方式</span></h3><p>直接在themes -&gt; landscape -&gt; _partial -&gt; head.ejs 文件贴上百度统计的代码<br><img src="/2017/07/12/5-Hexo加入百度统计/03.png" alt=""></p><h3><span id="优雅可控的方式">优雅可控的方式</span></h3><ol><li><p>在themes -&gt; landscape -&gt; _partial 文件夹下新建文件baidu-analytics.ejs<br>内容如下，把<code>&lt;script&gt;</code>替换成自己的百度统计代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.baidu_analytics)&#123; %&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var _hmt = _hmt || [];</span><br><span class="line">    (function() &#123;</span><br><span class="line">        var hm = document.createElement(&quot;script&quot;);</span><br><span class="line">        hm.src = &quot;https://hm.baidu.com/hm.js?d21fc853db4e4f89e2ff6c3b89fba31a&quot;;</span><br><span class="line">        var s = document.getElementsByTagName(&quot;script&quot;)[0];</span><br><span class="line">        s.parentNode.insertBefore(hm, s);</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure></li><li><p>在themes -&gt; landscape -&gt; _config.yml 添加控制字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">baidu_analytics: true</span><br></pre></td></tr></table></figure></li><li><p>在themes -&gt; landscape -&gt; _partial -&gt; head.ejs 添加&lt;%- partial(‘baidu-analytics’) %&gt;<br><img src="/2017/07/12/5-Hexo加入百度统计/04.png" alt=""></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#简单粗暴的方式&quot;&gt;简单粗暴的方式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#优雅可控的方式&quot;&gt;优雅可控的方式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tocstop --&gt;
&lt;p&gt;默认主题（landscape）&lt;
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="Hexo" scheme="http://www.linjia.site/categories/IT/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://www.linjia.site/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>4-Hexo加入谷歌统计</title>
    <link href="http://www.linjia.site/2017/07/12/4-Hexo%E5%8A%A0%E5%85%A5%E8%B0%B7%E6%AD%8C%E7%BB%9F%E8%AE%A1/"/>
    <id>http://www.linjia.site/2017/07/12/4-Hexo加入谷歌统计/</id>
    <published>2017-07-12T08:01:19.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用默认的theme（landscape）<br><img src="/2017/07/12/4-Hexo加入谷歌统计/01.png" alt=""></p><p>修改这个文件 themes -&gt; landscape -&gt; _config.yml （PS: 不要改成根目录的那个_config.yml）<br>添加如下google代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">google_analytics: UA-101268827-1</span><br></pre></td></tr></table></figure></p><p>UA-101268827-1是从google统计获取的</p><p>查看页面源码看是否已经加上了<br><img src="/2017/07/12/4-Hexo加入谷歌统计/02.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用默认的theme（landscape）&lt;br&gt;&lt;img src=&quot;/2017/07/12/4-Hexo加入谷歌统计/01.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;修改这个文件 themes -&amp;gt; landscape -&amp;gt; _config.yml （PS: 不
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="Hexo" scheme="http://www.linjia.site/categories/IT/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://www.linjia.site/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Javamail使用gmail发送邮件</title>
    <link href="http://www.linjia.site/2017/06/16/Javamail%E4%BD%BF%E7%94%A8gmail%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/"/>
    <id>http://www.linjia.site/2017/06/16/Javamail使用gmail发送邮件/</id>
    <published>2017-06-16T06:32:32.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>代码先贴上,代码参考<a href="https://gist.github.com/brunocesarsilva/12a529f7f752f2853b9f" target="_blank" rel="noopener">https://gist.github.com/brunocesarsilva/12a529f7f752f2853b9f</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.mail<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.mail-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.sun.mail<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.mail.*;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.InternetAddress;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"><span class="keyword">import</span> java.util.logging.Level;</span><br><span class="line"><span class="keyword">import</span> java.util.logging.Logger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SendEmailGmail</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = Logger.getAnonymousLogger();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SERVIDOR_SMTP = <span class="string">"smtp.gmail.com"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PORTA_SERVIDOR_SMTP = <span class="number">587</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CONTA_PADRAO = <span class="string">"xxxx@gmail.com"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SENHA_CONTA_PADRAO = <span class="string">"xxxx"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String from = <span class="string">"xxxx@gmail.com"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String to = <span class="string">"xxxx@sleepace.net"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String subject = <span class="string">"Teste"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String messageContent = <span class="string">"Teste de Mensagem"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> Session session = Session.getInstance(<span class="keyword">this</span>.getEmailProperties(), <span class="keyword">new</span> Authenticator() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">protected</span> PasswordAuthentication <span class="title">getPasswordAuthentication</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> PasswordAuthentication(CONTA_PADRAO, SENHA_CONTA_PADRAO);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> Message message = <span class="keyword">new</span> MimeMessage(session);</span><br><span class="line">            message.setRecipient(Message.RecipientType.TO, <span class="keyword">new</span> InternetAddress(to));</span><br><span class="line">            message.setFrom(<span class="keyword">new</span> InternetAddress(from));</span><br><span class="line">            message.setSubject(subject);</span><br><span class="line">            message.setText(messageContent);</span><br><span class="line">            message.setSentDate(<span class="keyword">new</span> Date());</span><br><span class="line">            Transport.send(message);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="keyword">final</span> MessagingException ex) &#123;</span><br><span class="line">            LOGGER.log(Level.WARNING, <span class="string">"Erro ao enviar mensagem: "</span> + ex.getMessage(), ex);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Properties <span class="title">getEmailProperties</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> Properties config = <span class="keyword">new</span> Properties();</span><br><span class="line">        config.put(<span class="string">"mail.smtp.auth"</span>, <span class="string">"true"</span>);</span><br><span class="line">        config.put(<span class="string">"mail.smtp.starttls.enable"</span>, <span class="string">"true"</span>);</span><br><span class="line">        config.put(<span class="string">"mail.smtp.host"</span>, SERVIDOR_SMTP);</span><br><span class="line">        config.put(<span class="string">"mail.smtp.port"</span>, PORTA_SERVIDOR_SMTP);</span><br><span class="line">        <span class="comment">//这个参数会把和邮箱服务器的交互过程都打印出来</span></span><br><span class="line">        config.put(<span class="string">"mail.debug"</span>, <span class="string">"true"</span>);</span><br><span class="line">        <span class="keyword">return</span> config;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">final</span> String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> SendEmailGmail().sendEmail();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">javax.mail.AuthenticationFailedException: 535-5.7.8 Username and Password not accepted. Learn more at</span><br><span class="line">535 5.7.8  https://support.google.com/mail/?p=BadCredentials y8sm3034037pge.0 - gsmtp</span><br><span class="line">at com.sun.mail.smtp.SMTPTransport$Authenticator.authenticate(SMTPTransport.java:826)</span><br><span class="line">at com.sun.mail.smtp.SMTPTransport.authenticate(SMTPTransport.java:761)</span><br><span class="line">at com.sun.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:685)</span><br><span class="line">at javax.mail.Service.connect(Service.java:317)</span><br><span class="line">at javax.mail.Service.connect(Service.java:176)</span><br><span class="line">at javax.mail.Service.connect(Service.java:125)</span><br><span class="line">at javax.mail.Transport.send0(Transport.java:194)</span><br><span class="line">at javax.mail.Transport.send(Transport.java:124)</span><br><span class="line">at office365.SendEmailGmail.sendEmail(SendEmailGmail.java:43)</span><br><span class="line">at office365.SendEmailGmail.main(SendEmailGmail.java:59)</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)</span><br><span class="line">at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">at java.lang.reflect.Method.invoke(Method.java:606)</span><br><span class="line">at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)</span><br></pre></td></tr></table></figure></p><p>你会发现你输入了正确的用户名和密码还是报错。</p><p>那是因为google开启了两步验证功能，所以如果要使用javamail发送邮件的话，需要一个应用专用密码（app password），这样即使密码被盗取也无法登录到账号</p><p><img src="/2017/06/16/Javamail使用gmail发送邮件/01.png" alt=""><br><img src="/2017/06/16/Javamail使用gmail发送邮件/02.png" alt=""><br><img src="/2017/06/16/Javamail使用gmail发送邮件/03.png" alt=""><br>谷歌的官方文档<a href="https://support.google.com/accounts/answer/185833?hl=en&amp;ctx=ch_DisplayUnlockCaptcha" target="_blank" rel="noopener">Sign in using App Passwords</a></p><p><strong>注意注意: office365也有个小坑，如果邮箱地址有大写，要全部小写才能发送成功，不然会一直提示授权失败，其他邮箱没有测试过，如果一直授权失败应该就是大小写的原因</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;代码先贴上,代码参考&lt;a href=&quot;https://gist.github.com/brunocesarsilva/12a529f7f752f2853b9f&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://gist.github.com/b
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="java" scheme="http://www.linjia.site/categories/IT/java/"/>
    
      <category term="other" scheme="http://www.linjia.site/categories/IT/java/other/"/>
    
    
      <category term="javamail" scheme="http://www.linjia.site/tags/javamail/"/>
    
  </entry>
  
  <entry>
    <title>UITableView左滑动删除编辑</title>
    <link href="http://www.linjia.site/2017/05/02/UITableView%E5%B7%A6%E6%BB%91%E5%8A%A8%E5%88%A0%E9%99%A4%E7%BC%96%E8%BE%91/"/>
    <id>http://www.linjia.site/2017/05/02/UITableView左滑动删除编辑/</id>
    <published>2017-05-02T09:18:33.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#左滑动显示一个按钮系统自带">左滑动显示一个按钮（系统自带）</a></li><li><a href="#左滑动显示多个按钮系统自带ios-80以上">左滑动显示多个按钮（系统自带，IOS 8.0以上）</a></li></ul><!-- tocstop --><h3><span id="左滑动显示一个按钮系统自带">左滑动显示一个按钮（系统自带）</span></h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">BOOL</span>)tableView:(<span class="built_in">UITableView</span> *)tableView canEditRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView commitEditingStyle:(<span class="built_in">UITableViewCellEditingStyle</span>)editingStyle forRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</span><br><span class="line">    <span class="keyword">if</span> (editingStyle == <span class="built_in">UITableViewCellEditingStyleDelete</span>) &#123;</span><br><span class="line">        </span><br><span class="line">    <span class="comment">// do something</span></span><br><span class="line">    <span class="comment">// 例如删除DataSource的数据</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// UI上删除这条记录</span></span><br><span class="line">        [tableView deleteRowsAtIndexPaths:@[indexPath] withRowAnimation:<span class="built_in">UITableViewRowAnimationFade</span>];</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (editingStyle == <span class="built_in">UITableViewCellEditingStyleInsert</span>) &#123;</span><br><span class="line">       </span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSString</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView titleForDeleteConfirmationButtonForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 默认的文案是Del</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">@"删除"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">UITableViewCellEditingStyle</span>)tableView:(<span class="built_in">UITableView</span> *)tableView editingStyleForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//UITableViewCellEditingStyle有三种模式，测试只有UITableViewCellEditingStyleDelete是有效的;</span></span><br><span class="line"><span class="comment">//UITableViewCellEditingStyleNone,</span></span><br><span class="line"><span class="comment">//UITableViewCellEditingStyleDelete,</span></span><br><span class="line"><span class="comment">//UITableViewCellEditingStyleInsert</span></span><br><span class="line"><span class="comment">//没有实现这个方法，默认是UITableViewCellEditingStyleDelete</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">UITableViewCellEditingStyleDelete</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="左滑动显示多个按钮系统自带ios-80以上">左滑动显示多个按钮（系统自带，IOS 8.0以上）</span></h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">BOOL</span>)tableView:(<span class="built_in">UITableView</span> *)tableView canEditRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSArray</span>&lt;<span class="built_in">UITableViewRowAction</span> *&gt; *)tableView:(<span class="built_in">UITableView</span> *)tableView editActionsForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">UITableViewRowAction</span> *edit = [<span class="built_in">UITableViewRowAction</span> rowActionWithStyle:<span class="built_in">UITableViewRowActionStyleNormal</span> title:<span class="string">@"Edit"</span> handler:^(<span class="built_in">UITableViewRowAction</span> * _Nonnull action, <span class="built_in">NSIndexPath</span> * _Nonnull indexPath) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"edit"</span>);</span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UITableViewRowAction</span> *del = [<span class="built_in">UITableViewRowAction</span> rowActionWithStyle:<span class="built_in">UITableViewRowActionStyleNormal</span> title:<span class="string">@"Del"</span> handler:^(<span class="built_in">UITableViewRowAction</span> * _Nonnull action, <span class="built_in">NSIndexPath</span> * _Nonnull indexPath) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"del"</span>);</span><br><span class="line">        [tableView deleteRowsAtIndexPaths:@[indexPath] withRowAnimation:<span class="built_in">UITableViewRowAnimationFade</span>];</span><br><span class="line">       </span><br><span class="line">    &#125;];</span><br><span class="line">    del.backgroundColor = [<span class="built_in">UIColor</span> redColor];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> [<span class="built_in">NSArray</span> arrayWithObjects:del,edit,<span class="literal">nil</span>] ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2017/05/02/UITableView左滑动删除编辑/5000fbb1-6ff6-4741-b800-4a8232530af2.png" alt="效果"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#左滑动显示一个按钮系统自带&quot;&gt;左滑动显示一个按钮（系统自带）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#左滑动显示多个按钮系统自带ios-80以上&quot;&gt;左滑动显示多个按钮（系统自带，IOS 8.0以上）&lt;/a&gt;&lt;/
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="IOS" scheme="http://www.linjia.site/categories/IT/IOS/"/>
    
    
      <category term="IOS" scheme="http://www.linjia.site/tags/IOS/"/>
    
  </entry>
  
  <entry>
    <title>ipv6折腾</title>
    <link href="http://www.linjia.site/2017/04/27/ipv6%E6%8A%98%E8%85%BE/"/>
    <id>http://www.linjia.site/2017/04/27/ipv6折腾/</id>
    <published>2017-04-27T06:56:52.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#ping6-address-family-not-supported-by-protocol">ping6 Address family not supported by protocol</a></li><li><a href="#阿里云centos添加ipv6">阿里云CentOS添加ipv6</a><ul><li><a href="#1修改前备份下">1.修改前备份下</a></li><li><a href="#2修改isable_ipv6conf">2.修改isable_ipv6.conf</a></li><li><a href="#3修改network">3.修改network</a></li><li><a href="#4重启服务器">4.重启服务器</a></li><li><a href="#5查看是否开启">5.查看是否开启</a></li></ul></li><li><a href="#ping6-invalid-argument">ping6 Invalid argument</a></li><li><a href="#阿里云centos添加ipv6隧道">阿里云centos添加ipv6隧道</a></li><li><a href="#配置aaaa解析">配置AAAA解析</a></li><li><a href="#测试">测试</a></li><li><a href="#其他">其他</a></li></ul><!-- tocstop --><hr><h3><span id="ping6-address-family-not-supported-by-protocol">ping6 Address family not supported by protocol</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@iZwz95xpl5hq4pfcitdtwdZ conf]<span class="comment"># ping6 fe80::216:3eff:fe00:275e%0</span></span><br><span class="line">socket: Address family not supported by protocol</span><br><span class="line"></span><br><span class="line"><span class="comment">### 那是因为机器不支持IPV6,操作完下面步骤就可以了</span></span><br></pre></td></tr></table></figure><hr><h3><span id="阿里云centos添加ipv6">阿里云CentOS添加ipv6</span></h3><h4><span id="1修改前备份下">1.修改前备份下</span></h4><p>cp /etc/modprobe.d/disable_ipv6.conf /data/backup/disable_ipv6.conf<br>cp /etc/sysconfig/network /data/backup/network</p><h4><span id="2修改isable_ipv6conf">2.修改isable_ipv6.conf</span></h4><p>vim /etc/modprobe.d/disable_ipv6.conf </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> net-pf-10 off</span><br><span class="line">options ipv6 <span class="built_in">disable</span>=1</span><br></pre></td></tr></table></figure><p>改成<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#alias net-pf-10 off</span></span><br><span class="line">options ipv6 <span class="built_in">disable</span>=0</span><br></pre></td></tr></table></figure></p><h4><span id="3修改network">3.修改network</span></h4><p>vim /etc/sysconfig/network<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">NETWORKING=yes</span><br><span class="line">HOSTNAME=iZwz95xpl5hq4pfcitdtwdZ</span><br><span class="line">NETWORKING_IPV6=no</span><br><span class="line">PEERNTP=no</span><br><span class="line">GATEWAY=172.18.175.253</span><br></pre></td></tr></table></figure></p><p>改成<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">NETWORKING=yes</span><br><span class="line">HOSTNAME=iZwz95xpl5hq4pfcitdtwdZ</span><br><span class="line">NETWORKING_IPV6=yes</span><br><span class="line">PEERNTP=no</span><br><span class="line">GATEWAY=172.18.175.253</span><br></pre></td></tr></table></figure></p><h4><span id="4重启服务器">4.重启服务器</span></h4><h4><span id="5查看是否开启">5.查看是否开启</span></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ944o1lko3Z ~]<span class="comment"># ifconfig | grep -i inet6</span></span><br><span class="line">          inet6 addr: fe80::216:3eff:fe00:1f11/64 Scope:Link</span><br><span class="line">          inet6 addr: fe80::216:3eff:fe00:275e/64 Scope:Link</span><br><span class="line">          inet6 addr: 2001:470:18:ed0::2/64 Scope:Global</span><br><span class="line">          inet6 addr: fe80::7818:a9cc/128 Scope:Link</span><br><span class="line">          inet6 addr: ::1/128 Scope:Host</span><br></pre></td></tr></table></figure><hr><h3><span id="ping6-invalid-argument">ping6 Invalid argument</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ944o1lko3Z ~]<span class="comment"># ping6  fe80::216:3eff:fe00:275e</span></span><br><span class="line">connect: Invalid argument</span><br><span class="line"></span><br><span class="line"><span class="comment">### 改成下面这个就好了</span></span><br><span class="line">[root@iZ944o1lko3Z ~]<span class="comment"># ping6 -I eth0 ffe80::216:3eff:fe00:275e</span></span><br></pre></td></tr></table></figure><hr><h3><span id="阿里云centos添加ipv6隧道">阿里云centos添加ipv6隧道</span></h3><p>参考<a href="http://coolnull.com/4476.html" target="_blank" rel="noopener">阿里云centos添加ipv6隧道</a></p><hr><h3><span id="配置aaaa解析">配置AAAA解析</span></h3><p>在<a href="https://www.tunnelbroker.net/" target="_blank" rel="noopener">https://www.tunnelbroker.net/</a>申请的ipv6隧道<br><img src="/2017/04/27/ipv6折腾/bc974e65-9405-42d7-82d8-dfff96615393.png" alt=""><br>在阿里云解析添加一条AAAA的解析记录，地址就是上图的ipv6地址。可以和A记录并存<br><img src="/2017/04/27/ipv6折腾/9dabeeeb-6e4d-4e2b-8cf5-ee9dcc9b5f22.png" alt=""></p><h3><span id="测试">测试</span></h3><p><a href="http://ipv6-test.com/validate.php" target="_blank" rel="noopener">http://ipv6-test.com</a><br><img src="/2017/04/27/ipv6折腾/22e5830b-783d-406c-b31d-feae70e1464f.png" alt=""></p><h3><span id="其他">其他</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看某个域名的ipv6地址</span></span><br><span class="line">host -t AAAA webapi.test.sleepace.net</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#ping6-address-family-not-supported-by-protocol&quot;&gt;ping6 Address family not supported by protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="Other" scheme="http://www.linjia.site/categories/IT/Other/"/>
    
    
      <category term="ipv6" scheme="http://www.linjia.site/tags/ipv6/"/>
    
  </entry>
  
  <entry>
    <title>LinkDiary历程</title>
    <link href="http://www.linjia.site/2017/04/15/LinkDiary%E5%8E%86%E7%A8%8B/"/>
    <id>http://www.linjia.site/2017/04/15/LinkDiary历程/</id>
    <published>2017-04-15T10:25:30.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#2017-04-14-日志添加页面10">2017-04-14 日志添加页面1.0</a></li></ul><!-- tocstop --><hr><h3><span id="2017-04-14-日志添加页面10">2017-04-14 日志添加页面1.0</span></h3><div class="video-container"><iframe src="//www.youtube.com/embed/n09OA2MJRy4" frameborder="0" allowfullscreen></iframe></div><p>技术点：</p><ol><li>从相册/相机获取图片</li><li>UITextView输入居中，输入时字跳上跳下</li><li>添加图片的排版</li></ol><p>第一版只支持单选图片</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#2017-04-14-日志添加页面10&quot;&gt;2017-04-14 日志添加页面1.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tocstop --&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;span id=&quot;2017-04-14-日志添加
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="项目" scheme="http://www.linjia.site/categories/IT/%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="IOS" scheme="http://www.linjia.site/tags/IOS/"/>
    
  </entry>
  
  <entry>
    <title>照片选择UIImagePickerController</title>
    <link href="http://www.linjia.site/2017/04/14/%E7%85%A7%E7%89%87%E9%80%89%E6%8B%A9UIImagePickerController/"/>
    <id>http://www.linjia.site/2017/04/14/照片选择UIImagePickerController/</id>
    <published>2017-04-14T08:44:12.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#uiimagepickercontroller">UIImagePickerController</a><ul><li><a href="#ios-60-and-later需要在infoplist添加两个key">iOS 6.0 and later需要在info.plist添加两个key</a></li><li><a href="#继承uiimagepickercontroller的delegate">继承UIImagePickerController的delegate</a></li><li><a href="#具体实现代码">具体实现代码</a></li></ul></li><li><a href="#图片压缩">图片压缩</a></li></ul><!-- tocstop --><h3><span id="uiimagepickercontroller">UIImagePickerController</span></h3><h4><span id="ios-60-and-later需要在infoplist添加两个key">iOS 6.0 and later需要在info.plist添加两个key</span></h4><p>NSPhotoLibraryUsageDescription<br>NSCameraUsageDescription</p><p><img src="/2017/04/14/照片选择UIImagePickerController/01.png" alt=""></p><h4><span id="继承uiimagepickercontroller的delegate">继承UIImagePickerController的delegate</span></h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">DiaryAddViewController</span> : <span class="title">UIViewController</span>&lt;<span class="title">UIImagePickerControllerDelegate</span>,<span class="title">UINavigationControllerDelegate</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><h4><span id="具体实现代码">具体实现代码</span></h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">DiaryAddViewController</span> ()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">UIImagePickerController</span> *imagePickerController;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">DiaryAddViewController</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// imagePickerController init</span></span><br><span class="line">    imagePickerController = [[<span class="built_in">UIImagePickerController</span> alloc] init];</span><br><span class="line">    imagePickerController.delegate = <span class="keyword">self</span>;</span><br><span class="line">    imagePickerController.modalTransitionStyle = <span class="built_in">UIModalTransitionStyleFlipHorizontal</span>;</span><br><span class="line">    imagePickerController.allowsEditing = <span class="literal">YES</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 添加sheet</span></span><br><span class="line">    <span class="built_in">UIAlertController</span>* alert = [<span class="built_in">UIAlertController</span> alertControllerWithTitle:<span class="literal">nil</span></span><br><span class="line">                                                                   message:<span class="literal">nil</span></span><br><span class="line">                                                            preferredStyle:<span class="built_in">UIAlertControllerStyleActionSheet</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIAlertAction</span>* albumAction = [<span class="built_in">UIAlertAction</span> actionWithTitle:<span class="string">@"From Album"</span> style:<span class="built_in">UIAlertActionStyleDefault</span></span><br><span class="line">                                                        handler:^(<span class="built_in">UIAlertAction</span> * action) &#123;</span><br><span class="line">                                                            imagePickerController.sourceType = <span class="built_in">UIImagePickerControllerSourceTypePhotoLibrary</span>;</span><br><span class="line">                                                            [<span class="keyword">self</span> presentViewController:imagePickerController animated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</span><br><span class="line">                                                            </span><br><span class="line">                                                        &#125;];</span><br><span class="line">    <span class="built_in">UIAlertAction</span>* cameraAction = [<span class="built_in">UIAlertAction</span> actionWithTitle:<span class="string">@"From Camera"</span> style:<span class="built_in">UIAlertActionStyleDefault</span></span><br><span class="line">                                                         handler:^(<span class="built_in">UIAlertAction</span> * action) &#123;</span><br><span class="line">                                                             imagePickerController.sourceType = <span class="built_in">UIImagePickerControllerSourceTypeCamera</span>;</span><br><span class="line">                                                             [<span class="keyword">self</span> presentViewController:imagePickerController animated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</span><br><span class="line">                                                         &#125;];</span><br><span class="line">    <span class="built_in">UIAlertAction</span>* defaultAction = [<span class="built_in">UIAlertAction</span> actionWithTitle:<span class="string">@"Cancel"</span> style:<span class="built_in">UIAlertActionStyleDefault</span></span><br><span class="line">                                                          handler:^(<span class="built_in">UIAlertAction</span> * action) &#123;&#125;];</span><br><span class="line">    [alert addAction:albumAction];</span><br><span class="line">    [alert addAction:cameraAction];</span><br><span class="line">    [alert addAction:defaultAction];</span><br><span class="line">    [<span class="keyword">self</span> presentViewController:alert animated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)imagePickerController:(<span class="built_in">UIImagePickerController</span> *)picker didFinishPickingMediaWithInfo:(<span class="built_in">NSDictionary</span>&lt;<span class="built_in">NSString</span> *,<span class="keyword">id</span>&gt; *)info</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//info里面有5个值</span></span><br><span class="line">    <span class="comment">//UIImagePickerControllerCropRect 裁剪尺寸</span></span><br><span class="line">    <span class="comment">//UIImagePickerControllerEditedImage 编辑之后的图片</span></span><br><span class="line">    <span class="comment">//UIImagePickerControllerMediaType 资源类型，图片或是视频</span></span><br><span class="line">    <span class="comment">//UIImagePickerControllerOriginalImage 原始图片</span></span><br><span class="line">    <span class="comment">//UIImagePickerControllerReferenceURL 原始文件的URL</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSString</span> *mediaType=[info objectForKey:<span class="built_in">UIImagePickerControllerMediaType</span>];</span><br><span class="line">    <span class="comment">//判断资源类型</span></span><br><span class="line">    <span class="keyword">if</span> ([mediaType isEqualToString:<span class="string">@"public.image"</span>])&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">UIImage</span> *image = [info objectForKey:<span class="built_in">UIImagePickerControllerEditedImage</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">UIImageView</span> *imageView = [[<span class="built_in">UIImageView</span> alloc]initWithImage:image];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 一定要调用这个方法，不然会一直停留在图片选择页面</span></span><br><span class="line">    [<span class="keyword">self</span> dismissViewControllerAnimated:<span class="literal">YES</span> completion:^()&#123;&#125;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><hr><h3><span id="图片压缩">图片压缩</span></h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 返回JPEG格式的图片</span></span><br><span class="line"><span class="comment">// 参数2表示压缩比例,范围0~1，1表示不压缩</span></span><br><span class="line"><span class="built_in">NSData</span> *data = <span class="built_in">UIImageJPEGRepresentation</span>(image,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回PNG格式的图片</span></span><br><span class="line"><span class="built_in">NSData</span> *data = <span class="built_in">UIImagePNGRepresentation</span>(image)；</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#uiimagepickercontroller&quot;&gt;UIImagePickerController&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#ios-60-and-later需要在infoplist添加两个key&quot;&gt;
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="IOS" scheme="http://www.linjia.site/categories/IT/IOS/"/>
    
    
      <category term="IOS" scheme="http://www.linjia.site/tags/IOS/"/>
    
  </entry>
  
  <entry>
    <title>Hexo一些技巧</title>
    <link href="http://www.linjia.site/2017/04/13/Hexo%E4%B8%80%E4%BA%9B%E6%8A%80%E5%B7%A7/"/>
    <id>http://www.linjia.site/2017/04/13/Hexo一些技巧/</id>
    <published>2017-04-13T02:26:07.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#1链接到站内文章">1.链接到站内文章</a></li></ul><!-- tocstop --><hr><h3><span id="1链接到站内文章">1.链接到站内文章</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;% post_path hello-world %&#125;</span><br><span class="line">// /2015/01/16/hello-world/</span><br><span class="line">&#123;% post_link hello-world %&#125;</span><br><span class="line">// &lt;a href=<span class="string">"/2015/01/16/hello-world/"</span>&gt;Hello World&lt;/a&gt;</span><br><span class="line">&#123;% post_link hello-world Custom Title %&#125;</span><br><span class="line">// &lt;a href=<span class="string">"/2015/01/16/hello-world/"</span>&gt;Custom Title&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">&#123;% asset_path example.jpg %&#125;</span><br><span class="line">// /2015/01/16/hello-world/example.jpg</span><br><span class="line">&#123;% asset_link example.jpg %&#125;</span><br><span class="line">// &lt;a href=<span class="string">"/2015/01/16/hello-world/example.jpg"</span>&gt;example.jpg&lt;/a&gt;</span><br><span class="line">&#123;% asset_link example.jpg Example %&#125;</span><br><span class="line">// &lt;a href=<span class="string">"/2015/01/16/hello-world/example.jpg"</span>&gt;Example&lt;/a&gt;</span><br><span class="line">&#123;% asset_img slug %&#125;</span><br><span class="line">// &lt;img src=<span class="string">"/2015/01/16/hello-world/example.jpg"</span>&gt;</span><br></pre></td></tr></table></figure><p>还有其他的一些可以参考<a href="https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0#render-pipeline-changed" target="_blank" rel="noopener">Breaking Changes in Hexo 3.0</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1链接到站内文章&quot;&gt;1.链接到站内文章&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tocstop --&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;span id=&quot;1链接到站内文章&quot;&gt;1.链接到站内文章&lt;/span&gt;&lt;/h3&gt;&lt;figur
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="Hexo" scheme="http://www.linjia.site/categories/IT/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://www.linjia.site/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>except自动登录远程服务器</title>
    <link href="http://www.linjia.site/2017/04/12/except%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://www.linjia.site/2017/04/12/except自动登录远程服务器/</id>
    <published>2017-04-12T09:14:23.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>简单的一个例子，备份下省得忘记了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line">spawn ssh root@127.0.0.1</span><br><span class="line">expect <span class="string">"*password:"</span></span><br><span class="line">send <span class="string">"123\r"</span></span><br><span class="line">expect <span class="string">"*#"</span></span><br><span class="line">interact</span><br></pre></td></tr></table></figure><p>如果ssh禁止root远程登录，需要设置ssh</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简单的一个例子，备份下省得忘记了&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="Linux" scheme="http://www.linjia.site/categories/IT/Linux/"/>
    
    
      <category term="Linxu" scheme="http://www.linjia.site/tags/Linxu/"/>
    
  </entry>
  
  <entry>
    <title>脚本nobody启动tomcat</title>
    <link href="http://www.linjia.site/2017/04/12/%E8%84%9A%E6%9C%ACnobody%E5%90%AF%E5%8A%A8tomcat/"/>
    <id>http://www.linjia.site/2017/04/12/脚本nobody启动tomcat/</id>
    <published>2017-04-12T09:06:01.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="场景">场景：</span></h3><p>crontab配置和了个定时任务检查tomcat是否挂掉，如果挂掉就自动启动。但一直没有作用（刚开始没有把错误重定向到一个文件，一直没有找到问题）</p><p>tomcat的启动方式：sudo -u nobody /usr/local/tomcat/bin/startup.sh</p><h3><span id="错误">错误：</span></h3><p>“sudo: sorry, you must have a tty to run sudo”<br>看错误的意思是nobody需要一个终端才可以执行这条命令</p><h3><span id="解决">解决：</span></h3><p>修改/etc/sudoers<br>1.Defaults requiretty，修改为 #Defaults requiretty，注释掉表示不需要控制终端（不推荐）。<br>2.Defaults requiretty，修改为 Defaults:nobody !requiretty，表示仅 nobody 用户不需要控制终端。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3&gt;&lt;span id=&quot;场景&quot;&gt;场景：&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;crontab配置和了个定时任务检查tomcat是否挂掉，如果挂掉就自动启动。但一直没有作用（刚开始没有把错误重定向到一个文件，一直没有找到问题）&lt;/p&gt;
&lt;p&gt;tomcat的启动方式：sudo -u nob
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="Linux" scheme="http://www.linjia.site/categories/IT/Linux/"/>
    
    
      <category term="Linxu" scheme="http://www.linjia.site/tags/Linxu/"/>
    
  </entry>
  
  <entry>
    <title>3-Hexo图片改成左对齐</title>
    <link href="http://www.linjia.site/2017/04/12/3-Hexo%E5%9B%BE%E7%89%87%E6%94%B9%E6%88%90%E5%B7%A6%E5%AF%B9%E9%BD%90/"/>
    <id>http://www.linjia.site/2017/04/12/3-Hexo图片改成左对齐/</id>
    <published>2017-04-12T08:43:18.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>修改文件主题文件themes/landscape/source/css/_partial/article.styl</p><p>landscape是Hexo的默认主题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">img, video</span><br><span class="line">  max-width: 100%</span><br><span class="line">  height: auto</span><br><span class="line">  display: block</span><br><span class="line">  margin: auto</span><br></pre></td></tr></table></figure><p>改成<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">img, video</span><br><span class="line">  max-width: 100%</span><br><span class="line">  height: auto</span><br><span class="line">  display: block</span><br><span class="line">  margin: auto</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;修改文件主题文件themes/landscape/source/css/_partial/article.styl&lt;/p&gt;
&lt;p&gt;landscape是Hexo的默认主题&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td c
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="Hexo" scheme="http://www.linjia.site/categories/IT/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://www.linjia.site/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Nginx自己签发证书配置https</title>
    <link href="http://www.linjia.site/2017/04/12/Nginx%E8%87%AA%E5%B7%B1%E7%AD%BE%E5%8F%91%E8%AF%81%E4%B9%A6%E9%85%8D%E7%BD%AEhttps/"/>
    <id>http://www.linjia.site/2017/04/12/Nginx自己签发证书配置https/</id>
    <published>2017-04-12T07:46:33.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#1生成一个rsa密钥">1.生成一个RSA密钥</a></li><li><a href="#2拷贝一个不需要输入密码的密钥文件">2.拷贝一个不需要输入密码的密钥文件</a></li><li><a href="#3生成一个证书请求">3.生成一个证书请求</a></li><li><a href="#4自己签发证书">4.自己签发证书</a></li><li><a href="#5配置nginx">5.配置Nginx</a></li></ul><!-- tocstop --><h3><span id="1生成一个rsa密钥">1.生成一个RSA密钥</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -des3 -out sleepace.key 1024</span><br></pre></td></tr></table></figure><p>执行时需要输入一个密码，请记住</p><hr><h3><span id="2拷贝一个不需要输入密码的密钥文件">2.拷贝一个不需要输入密码的密钥文件</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl rsa -<span class="keyword">in</span> sleepace.key -out sleepace_nopass.key</span><br></pre></td></tr></table></figure><p>执行时需要输入第一步的密码</p><hr><h3><span id="3生成一个证书请求">3.生成一个证书请求</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -key sleepace.key -out sleepace.csr</span><br></pre></td></tr></table></figure><p>需要输入公司的一些信息，如下图所示<br><img src="/2017/04/12/Nginx自己签发证书配置https/03.png"></p><hr><h3><span id="4自己签发证书">4.自己签发证书</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -req -days 365 -<span class="keyword">in</span> sleepace.csr -signkey sleepace.key -out sleepace.crt</span><br></pre></td></tr></table></figure><p>执行时需要输入第一步的密码</p><h3><span id="5配置nginx">5.配置Nginx</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       443 ssl;</span><br><span class="line">        server_name  www.xxx.com;</span><br><span class="line">        </span><br><span class="line">        ssl on;</span><br><span class="line">        ssl_certificate /root/ssl/sleepace.crt;</span><br><span class="line">        ssl_certificate_key /root/ssl/sleepace_nopass.key;</span><br><span class="line">        # 若ssl_certificate_key使用sleepace_nopass.key，则每次启动Nginx服务器都要求输入key的密码。</span><br><span class="line">        location / &#123;</span><br><span class="line">                proxy_pass http://127.0.0.1:9080;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1生成一个rsa密钥&quot;&gt;1.生成一个RSA密钥&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2拷贝一个不需要输入密码的密钥文件&quot;&gt;2.拷贝一个不需要输入密码的密钥文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="Nginx" scheme="http://www.linjia.site/categories/IT/Nginx/"/>
    
    
      <category term="Nginx" scheme="http://www.linjia.site/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx开启ssi</title>
    <link href="http://www.linjia.site/2017/04/12/Nginx%E5%BC%80%E5%90%AFssi/"/>
    <id>http://www.linjia.site/2017/04/12/Nginx开启ssi/</id>
    <published>2017-04-12T07:33:05.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th>参数</th><th>默认值</th><th>解释</th></tr></thead><tbody><tr><td>ssi</td><td>off</td><td>开关：on开，off关</td></tr><tr><td>ssi_silent_errors</td><td>off</td><td>开启后在处理SSI文件出错时不输出错误提示:<br>”[an error occurred while processing the directive]</td></tr><tr><td>ssi_types</td><td>text/html</td><td>启用ssi的格式</td></tr></tbody></table><p>ssi，ssi_silent_errors和ssi_types，可以放在http,server和location的作用域下</p><p>详情请看 <a href="http://nginx.org/en/docs/http/ngx_http_ssi_module.html" target="_blank" rel="noopener">ngx_http_ssi_module</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       83;</span><br><span class="line">        location / &#123;</span><br><span class="line">                 ssi on;</span><br><span class="line">                 ssi_silent_errors on;</span><br><span class="line">                 root   &quot;D:\workspace\project\Link\xproject-html&quot;;</span><br><span class="line">         expires 0;</span><br><span class="line">        &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;默认值&lt;/th&gt;
&lt;th&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ssi&lt;/td&gt;
&lt;td&gt;off&lt;/td&gt;
&lt;td&gt;开关：on开，off关&lt;/td&gt;
&lt;/tr&gt;
&lt;
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="Nginx" scheme="http://www.linjia.site/categories/IT/Nginx/"/>
    
    
      <category term="Nginx" scheme="http://www.linjia.site/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Mysql问题及解决</title>
    <link href="http://www.linjia.site/2017/04/12/Mysql%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3/"/>
    <id>http://www.linjia.site/2017/04/12/Mysql问题及解决/</id>
    <published>2017-04-12T07:25:20.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#load-data-发生错误lost-connection-to-mysql-server-during-query">LOAD DATA 发生错误：Lost connection to MySQL server during query</a></li></ul><!-- tocstop --><hr><h3><span id="load-data-发生错误lost-connection-to-mysql-server-during-query">LOAD DATA 发生错误：Lost connection to MySQL server during query</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 看下max_allowed_packet的大小</span></span><br><span class="line">show VARIABLES like <span class="string">'%max_allowed_packet%'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置max_allowed_packet=20M</span></span><br><span class="line"><span class="built_in">set</span> global max_allowed_packet = 50*1024*1024*10;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#load-data-发生错误lost-connection-to-mysql-server-during-query&quot;&gt;LOAD DATA 发生错误：Lost connection to MySQL server d
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="DB" scheme="http://www.linjia.site/categories/IT/DB/"/>
    
      <category term="Mysql" scheme="http://www.linjia.site/categories/IT/DB/Mysql/"/>
    
    
      <category term="Mysql" scheme="http://www.linjia.site/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>[ 日本 ] [ 东京镰仓伊东河口湖 ] [ 20170402~20170409 ] </title>
    <link href="http://www.linjia.site/2017/04/10/%E6%97%A5%E6%9C%AC%E4%B8%9C%E4%BA%AC20170402-20170409/"/>
    <id>http://www.linjia.site/2017/04/10/日本东京20170402-20170409/</id>
    <published>2017-04-10T07:00:22.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#day1-浅草上野">Day1 - 浅草上野</a></li><li><a href="#day2-迪士尼海洋">Day2 - 迪士尼海洋</a></li><li><a href="#day3-江之岛镰仓">Day3 - 江之岛镰仓</a></li><li><a href="#day4-伊东温泉">Day4 - 伊东温泉</a></li><li><a href="#day5-河口湖">Day5 - 河口湖</a></li><li><a href="#day6-河口湖忍野八海">Day6 - 河口湖忍野八海</a></li><li><a href="#day7-筑地市场">Day7 - 筑地市场</a></li><li><a href="#day8-回深圳">Day8 - 回深圳</a></li><li><a href="#总结">总结</a></li></ul><!-- tocstop --><p>第一次去日本，日本这个国家和中国还是很大的差别，清明请3天假，加上两个周末，一共8天</p><h3><span id="day1-浅草上野">Day1 - 浅草上野</span></h3><p>凌晨1：50的飞机，预定了”奔奔跨境车”，直接从科兴拉我们到香港机场，超级方便。飞3个半小时到底日本，大概也就6点多，日本比中国快一个小时</p><p>第一站浅草寺庙，看人人人人人</p><p>第二站上野公园，看人人人人人</p><p>瞎折腾的一天，都是在看人，晚上回到新宿的酒店。7百多的酒店，小到住得压抑。</p><p>晚上歌舞伎町，黄金街闲逛<br><img src="/2017/04/10/日本东京20170402-20170409/IMG_0972_副本.jpg" alt=""></p><h3><span id="day2-迪士尼海洋">Day2 - 迪士尼海洋</span></h3><p>全世界唯一的迪士尼sea就在东京，怎能不去逛逛。</p><p>在淘宝买了票，很奇怪的是票到入园的前一天才发。本来就很担心靠不靠谱，结果果然很不靠谱，原因就不说了，最后拿不到票，特别批评下”小脚丫旅行网 “。花了原价现场买票</p><p>去之前找了些攻略，怎么玩才比较有效率。没用！！人太多（刚好日本学生放春假）！！排队3小时劲爽4分钟，一个早上排了一个，fastPass两个小时才能拿一个，等到能拿下一个的时候已经拿完，欲哭无泪。</p><p>所以对于迪士尼sea的感觉就是，还不如去land，去land还不如去香港的迪士尼</p><h3><span id="day3-江之岛镰仓">Day3 - 江之岛镰仓</span></h3><p>新宿区镰仓非常方便，在新宿的小田急买周游卷。</p><p><img src="/2017/04/10/日本东京20170402-20170409/IMG_1002_副本.jpg" alt=""><br>江之岛上面的虾饼，看着一只新鲜的虾被压成这样子，感觉好邪恶啊</p><p>晚上会新宿的回憶橫丁（思い出横丁）吃串串，店都很小，味道不错</p><h3><span id="day4-伊东温泉">Day4 - 伊东温泉</span></h3><p>去伊东也是小田急到小田原，再转JR</p><p>露天温泉是要裸体的…</p><p><img src="/2017/04/10/日本东京20170402-20170409/IMG_1146_副本.jpg" alt=""><br><img src="/2017/04/10/日本东京20170402-20170409/IMG_1116_副本.jpg" alt=""></p><p>温泉酒店包的晚餐，从前菜开始，汤，主食，到甜点，每份看着很小，数量挺多，吃得超饱，历时两个半小时。甜点有金箔哦！！第一次吃金子，豪嗨心<br><img src="/2017/04/10/日本东京20170402-20170409/food.jpg" alt=""></p><h3><span id="day5-河口湖">Day5 - 河口湖</span></h3><p>早上从伊东出发去河口湖，电车转巴士，也挺累的</p><p>晚上去闲逛了下，7点路上就没人…</p><h3><span id="day6-河口湖忍野八海">Day6 - 河口湖忍野八海</span></h3><p>早早起床，原计划是要搭乘8：45的车去五合目，没想到天气不好，巴士不开，登不了富士山了</p><p>去不了五合目，那就转战忍野八海，就是一个宁静的小村庄，买了些手信</p><p>中午的时候终于看到富士山了<br><img src="/2017/04/10/日本东京20170402-20170409/IMG_1194_副本.jpg" alt=""></p><p>下午去和河口湖公园随便晃晃</p><p>晚上搭乘2个小时的巴士去东京站，酒店checkin，以为第一个酒店就够小了，没想到这个更小，人形町附近</p><h3><span id="day7-筑地市场">Day7 - 筑地市场</span></h3><p>早上5点半起床赶往筑地，这天是整个行程最爽的一天，就是吃吃吃</p><p>网上很多攻略提及的大和，寿司大，直接不去，排满了人，看排队人潮少于两个小时是吃不上的</p><p>吃了一些烤串和螃蟹。选了一家叫寿司清的，很不错<br><img src="/2017/04/10/日本东京20170402-20170409/IMG_1208_副本.jpg" alt=""><br><img src="/2017/04/10/日本东京20170402-20170409/IMG_1205_副本.jpg" alt=""><br><img src="/2017/04/10/日本东京20170402-20170409/IMG_1207_副本.jpg" alt=""></p><p>随便一家小店的买的生蚝，超好吃。岩手县的<br><img src="/2017/04/10/日本东京20170402-20170409/IMG_1210_副本.jpg" alt=""></p><p>中午三鹰吉卜力工作室</p><p>下午秋叶原银座，买买买。当然是其他人买买买，我是没需求的</p><p>晚上奢侈了一把，和牛。宵夜烤串<br><img src="/2017/04/10/日本东京20170402-20170409/IMG_1220_副本.jpg" alt=""></p><h3><span id="day8-回深圳">Day8 - 回深圳</span></h3><p>早上10点从酒店出发，晚上11点回到家门</p><h3><span id="总结">总结</span></h3><p>迪士尼sea没什么，还不如去香港</p><p>上野的樱花还不如随便一个小巷的樱花</p><p>711超方便，牛奶是每天必买，早餐就一个饭团。杯面和中国的不一样不一样。每天最大的惊喜就是去711买个不知道什么鬼的东西<br><img src="/2017/04/10/日本东京20170402-20170409/711.jpg" alt=""><br><img src="/2017/04/10/日本东京20170402-20170409/WechatIMG1.jpeg" alt="泡面真的有虾哦"></p><p>日本道路超干净,单车和出租车都是闪闪发亮的</p><p>日本人从小就不怕冷，要知道外面10来度，风也挺大的<br><img src="/2017/04/10/日本东京20170402-20170409/IMG_1193_副本.jpg" alt=""><br><img src="/2017/04/10/日本东京20170402-20170409/IMG_1215_副本.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#day1-浅草上野&quot;&gt;Day1 - 浅草上野&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#day2-迪士尼海洋&quot;&gt;Day2 - 迪士尼海洋&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#day3-江之岛镰仓&quot;&gt;Da
      
    
    </summary>
    
      <category term="旅游" scheme="http://www.linjia.site/categories/%E6%97%85%E6%B8%B8/"/>
    
    
      <category term="旅游" scheme="http://www.linjia.site/tags/%E6%97%85%E6%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>教父</title>
    <link href="http://www.linjia.site/2017/04/10/%E6%95%99%E7%88%B6/"/>
    <id>http://www.linjia.site/2017/04/10/教父/</id>
    <published>2017-04-10T01:45:56.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2017/04/10/教父/s3303695.jpg" alt=""></p><p><em>开始：2017-04-10</em><br><em>结束：</em></p><p>“友谊就是一切。比天赋更重要，比政府更重要。和家人差不多同样重要” 唐.柯里昂</p><p>“知道极地探险家在通往北极的路上要沿途存放口粮，防止日后某天会需要食物吗？那就是我父亲的人情。他迟早会找上门，而他们最好按他说的做” 迈克尔.柯里昂</p><p>我最常说的一句话是”不是什么人都可以得到我的友谊”，所以我认可的朋友真的很少，很多时候不是别人不够出色，而是自己把自己锁起来了，不愿去深入接触别人。我大概就是这样子的吧，和我相处很容易，但是能够深入我内心的寥寥无几。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2017/04/10/教父/s3303695.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;开始：2017-04-10&lt;/em&gt;&lt;br&gt;&lt;em&gt;结束：&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;“友谊就是一切。比天赋更重要，比政府更重要。和家人差不多同样重要” 唐.柯
      
    
    </summary>
    
      <category term="读书" scheme="http://www.linjia.site/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="读书" scheme="http://www.linjia.site/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>创建cocoapod项目</title>
    <link href="http://www.linjia.site/2017/04/01/%E5%88%9B%E5%BB%BAcocoapod%E9%A1%B9%E7%9B%AE/"/>
    <id>http://www.linjia.site/2017/04/01/创建cocoapod项目/</id>
    <published>2017-04-01T09:25:25.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#安装-cocoapods">安装 cocoapods</a></li><li><a href="#使用-pod">使用 pod</a></li></ul><!-- tocstop --><h3><span id="安装-cocoapods">安装 cocoapods</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gem install cocoapods</span><br></pre></td></tr></table></figure><p>在中国有可能source不可用，所以更要gem的source，参考<a href="https://gems.ruby-china.org/" target="_blank" rel="noopener">https://gems.ruby-china.org/</a></p><h3><span id="使用-pod">使用 pod</span></h3><ul><li>进入到项目的路径</li><li><p>初始化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod init</span><br></pre></td></tr></table></figure></li><li><p>编辑Podfile文件<br>添加 “pod ‘AFNetworking’, ‘~&gt; 2.5’”<br><img src="/2017/04/01/创建cocoapod项目/pod.png" alt=""></p></li><li><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod install</span><br></pre></td></tr></table></figure></li></ul><p>AFNetworking框架就安装上了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#安装-cocoapods&quot;&gt;安装 cocoapods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#使用-pod&quot;&gt;使用 pod&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tocstop --&gt;
&lt;h3&gt;&lt;span i
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="IOS" scheme="http://www.linjia.site/categories/IT/IOS/"/>
    
    
      <category term="IOS" scheme="http://www.linjia.site/tags/IOS/"/>
    
  </entry>
  
  <entry>
    <title>UITableView</title>
    <link href="http://www.linjia.site/2017/04/01/UITableView/"/>
    <id>http://www.linjia.site/2017/04/01/UITableView/</id>
    <published>2017-04-01T09:18:43.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#默认uitableviewcell的样式">默认UITableViewCell的样式</a></li><li><a href="#下拉刷新">下拉刷新</a></li><li><a href="#不允许点击">不允许点击</a></li><li><a href="#滚动至某一行">滚动至某一行</a></li><li><a href="#table-view-data-source">Table view data source</a></li></ul><!-- tocstop --><h3><span id="默认uitableviewcell的样式">默认UITableViewCell的样式</span></h3><p><img src="/2017/04/01/UITableView/image.png" alt=""></p><h3><span id="下拉刷新">下拉刷新</span></h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">UIRefreshControl</span> *refresh = [[<span class="built_in">UIRefreshControl</span> alloc]init];</span><br><span class="line">refresh.attributedTitle = [[<span class="built_in">NSAttributedString</span> alloc]initWithString:<span class="string">@"刷新"</span>];</span><br><span class="line">[refresh addTarget:<span class="keyword">self</span> action:<span class="keyword">@selector</span>(refreshAction) forControlEvents:<span class="built_in">UIControlEventValueChanged</span>];</span><br><span class="line"><span class="keyword">self</span>.refreshControl = refresh;</span><br><span class="line"></span><br><span class="line">-(<span class="keyword">void</span>)refreshAction</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.refreshControl.isRefreshing)&#123;</span><br><span class="line">        <span class="keyword">self</span>.refreshControl.attributedTitle = [[<span class="built_in">NSAttributedString</span> alloc]initWithString:<span class="string">@"加载中..."</span>];</span><br><span class="line">        <span class="comment">// do something you need</span></span><br><span class="line">        [<span class="keyword">self</span>.refreshControl endRefreshing];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="不允许点击">不允许点击</span></h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tableView.allowsSelection=<span class="literal">NO</span>;</span><br></pre></td></tr></table></figure><h3><span id="滚动至某一行">滚动至某一行</span></h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[tableView scrollToRowAtIndexPath:indexPath atScrollPosition:<span class="built_in">UITableViewScrollPositionBottom</span> animated:<span class="literal">YES</span>];</span><br></pre></td></tr></table></figure><h3><span id="table-view-data-source">Table view data source</span></h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">NSInteger</span>)numberOfSectionsInTableView:(<span class="built_in">UITableView</span> *)tableView &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSInteger</span>)tableView:(<span class="built_in">UITableView</span> *)tableView numberOfRowsInSection:(<span class="built_in">NSInteger</span>)section &#123;</span><br><span class="line">    <span class="keyword">return</span> tableViewData.count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">UITableViewCell</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView cellForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">NSString</span> *iden = <span class="string">@"xxxxx"</span>;</span><br><span class="line">    <span class="built_in">UITableViewCell</span> *cell = [<span class="keyword">self</span>.tableView dequeueReusableCellWithIdentifier:iden];</span><br><span class="line">    <span class="keyword">if</span> (cell==<span class="literal">nil</span>) &#123;</span><br><span class="line">        cell=[[<span class="built_in">UITableViewCell</span> alloc] initWithStyle:<span class="built_in">UITableViewCellStyleDefault</span> reuseIdentifier:iden];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// do something</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> cell;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#默认uitableviewcell的样式&quot;&gt;默认UITableViewCell的样式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#下拉刷新&quot;&gt;下拉刷新&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#不允许点击&quot;&gt;不
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="IOS" scheme="http://www.linjia.site/categories/IT/IOS/"/>
    
    
      <category term="IOS" scheme="http://www.linjia.site/tags/IOS/"/>
    
  </entry>
  
  <entry>
    <title>2.Hexo发布到Github page</title>
    <link href="http://www.linjia.site/2017/03/31/2-Hexo%E5%8F%91%E5%B8%83%E5%88%B0Github-page/"/>
    <id>http://www.linjia.site/2017/03/31/2-Hexo发布到Github-page/</id>
    <published>2017-03-31T06:16:29.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#1到githubcom申请账号">1.到github.com申请账号</a></li><li><a href="#2创建仓库">2.创建仓库</a></li><li><a href="#3配置hexo">3.配置hexo</a></li><li><a href="#4如果需要配置自己的域名">4.如果需要配置自己的域名</a></li></ul><!-- tocstop --><h2><span id="1到githubcom申请账号">1.到github.com申请账号</span></h2><h2><span id="2创建仓库">2.创建仓库</span></h2><p><img src="/2017/03/31/2-Hexo发布到Github-page/576928CC-5ED1-49A1-9B07-349B055E11E8.png" alt=""><br>仓库名有要求的，必须是 &lt;用户名&gt;.github.io</p><h2><span id="3配置hexo">3.配置hexo</span></h2><ul><li><p>安装hexo-deployer-git插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>修改_config.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="string">git@github.com:linjia880714/linjia880714.github.io.git</span></span><br></pre></td></tr></table></figure><p>github最好配置成ssh验证，省去了输入用户名和密码的步骤</p><font color="red">配置type: git的时候，第一次配置时冒号和git之间少了个空格，不管如何操作配置都不生效，还是要严格的遵循语法</font></li><li><p>发布</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>到这里已经可以使用http://&lt;用户名&gt;.github.io访问了</p></li></ul><h2><span id="4如果需要配置自己的域名">4.如果需要配置自己的域名</span></h2><p><img src="/2017/03/31/2-Hexo发布到Github-page/99B81979-09EE-434C-A674-45DD82BDF655.png" alt=""><br>在source目录下创建一个CNAME的文件，注意没有后缀，编辑文件写上自己的域名。然后再发布到github上</p><p>到自己的域名申请商那里解析你的域名，添加canme指定到”&lt;用户名&gt;.github.io.”</p><p>我的是阿里云<br><img src="/2017/03/31/2-Hexo发布到Github-page/F82D2CC7-CF0E-4375-B90E-4A271D165B76.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1到githubcom申请账号&quot;&gt;1.到github.com申请账号&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2创建仓库&quot;&gt;2.创建仓库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#3配置hexo&quot;&gt;3.配置
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="Hexo" scheme="http://www.linjia.site/categories/IT/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://www.linjia.site/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>1.Hexo国际化</title>
    <link href="http://www.linjia.site/2017/03/31/1-Hexo%E5%9B%BD%E9%99%85%E5%8C%96/"/>
    <id>http://www.linjia.site/2017/03/31/1-Hexo国际化/</id>
    <published>2017-03-31T06:03:26.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>修改_config.yml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-CN</span><br></pre></td></tr></table></figure></p><p><img src="/2017/03/31/1-Hexo国际化/D959544E-A13D-4742-8955-A8F60344E043.png" alt=""></p><p>例如设置为zh-CN,Hexo就会使用到themes/landscape/languages/zh-CN.yml文件</p><p>zh-CN.yml内容如下，只要修改相应的值就好了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">categories: 分类</span><br><span class="line">search: 搜索</span><br><span class="line">tags: 标签</span><br><span class="line">tagcloud: 标签云</span><br><span class="line">tweets: 推文</span><br><span class="line">prev: 上一页</span><br><span class="line">next: 下一页</span><br><span class="line">comment: 留言</span><br><span class="line">archive_a: 归档</span><br><span class="line">archive_b: 归档：%s</span><br><span class="line">page: 第 %d 页</span><br><span class="line">recent_posts: 最新文章</span><br><span class="line">newer: 上一篇</span><br><span class="line">older: 下一篇</span><br><span class="line">share: Share</span><br><span class="line">powered_by: Powered by</span><br><span class="line">rss_feed: RSS Feed</span><br><span class="line">category: Category</span><br><span class="line">tag: Tag</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;修改_config.yml&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="Hexo" scheme="http://www.linjia.site/categories/IT/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://www.linjia.site/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Maven pom实用配置</title>
    <link href="http://www.linjia.site/2017/03/30/Maven-pom%E5%AE%9E%E7%94%A8%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.linjia.site/2017/03/30/Maven-pom实用配置/</id>
    <published>2017-03-30T12:04:54.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#不要发布">不要发布</a></li><li><a href="#获取svn版本号">获取svn版本号</a></li><li><a href="#把source一起发布">把source一起发布</a></li><li><a href="#打成jar包并制定main方法">打成jar包，并制定main方法</a></li><li><a href="#把jar安装到本地">把jar安装到本地</a></li><li><a href="#mvn-dependencytree">mvn dependency:tree</a></li></ul><!-- tocstop --><h3><span id="不要发布">不要发布</span></h3><p>当项目是很多的模块，有些模块（例如打成war包的模块）不需要deploy<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-deploy-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">skip</span>&gt;</span>true<span class="tag">&lt;/<span class="name">skip</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3><span id="获取svn版本号">获取svn版本号</span></h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">scm</span>&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>scm:svn:svn://203.195.156.249/services/sleepace-pro-api<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">connection</span>&gt;</span>scm:svn:svn://203.195.156.249/services/sleepace-pro-api<span class="tag">&lt;/<span class="name">connection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">scm</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>sleepace-pro-api-$&#123;buildNumber&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.mojo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>buildnumber-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">phase</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">goal</span>&gt;</span>create<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">doCheck</span>&gt;</span>false<span class="tag">&lt;/<span class="name">doCheck</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">doUpdate</span>&gt;</span>false<span class="tag">&lt;/<span class="name">doUpdate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">username</span>&gt;</span>linjia<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">password</span>&gt;</span>linjia<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">items</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">item</span>&gt;</span>scmVersion<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">items</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>scm配置svn得地址<br>username登录名<br>password登录密码</p><h3><span id="把source一起发布">把source一起发布</span></h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-source-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attach</span>&gt;</span>true<span class="tag">&lt;/<span class="name">attach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><h3><span id="打成jar包并制定main方法">打成jar包，并制定main方法</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean compile assembly:single</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-assembly-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">configuration</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">appendAssemblyId</span>&gt;</span>false<span class="tag">&lt;/<span class="name">appendAssemblyId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">descriptorRefs</span>&gt;</span>   </span><br><span class="line">      <span class="tag">&lt;<span class="name">descriptorRef</span>&gt;</span>jar-with-dependencies<span class="tag">&lt;/<span class="name">descriptorRef</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">archive</span>&gt;</span>   </span><br><span class="line">      <span class="tag">&lt;<span class="name">manifest</span>&gt;</span>   </span><br><span class="line">        <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.medica.servicenetty.HealthServer<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span>    </span><br><span class="line">      <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">archive</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><h3><span id="把jar安装到本地">把jar安装到本地</span></h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.ethz.ganymed<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ganymed-ssh2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>build210<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn install:install-file -Dfile=ganymed-ssh2-build210.jar -DgroupId=ch.ethz.ganymed -DartifactId=ganymed-ssh2 -Dversion=build210 -Dpackaging=jar</span><br></pre></td></tr></table></figure><h3><span id="mvn-dependencytree">mvn dependency:tree</span></h3><p>排查包冲突超好用，列出所有依赖关系<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn dependency:tree</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#不要发布&quot;&gt;不要发布&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#获取svn版本号&quot;&gt;获取svn版本号&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#把source一起发布&quot;&gt;把source一起发布&lt;/a&gt;&lt;/li
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="java" scheme="http://www.linjia.site/categories/IT/java/"/>
    
      <category term="maven" scheme="http://www.linjia.site/categories/IT/java/maven/"/>
    
    
      <category term="java" scheme="http://www.linjia.site/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>NSUserDefaults错误</title>
    <link href="http://www.linjia.site/2017/03/30/NSUserDefaults%E9%94%99%E8%AF%AF/"/>
    <id>http://www.linjia.site/2017/03/30/NSUserDefaults错误/</id>
    <published>2017-03-30T09:58:35.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Attempt to insert non-property list object (</span><br><span class="line">    &quot;&lt;NovelChapterModel: 0x170038160&gt;&quot;,</span><br><span class="line">    &quot;&lt;NovelChapterModel: 0x170036480&gt;&quot;,</span><br><span class="line">    &quot;&lt;NovelChapterModel: 0x1700378c0&gt;&quot;,</span><br><span class="line">    &quot;&lt;NovelChapterModel: 0x170035f20&gt;&quot;,</span><br><span class="line">    &quot;&lt;NovelChapterModel: 0x170036620&gt;&quot;,</span><br><span class="line">    &quot;&lt;NovelChapterModel: 0x170038bc0&gt;&quot;,</span><br><span class="line">    &quot;&lt;NovelChapterModel: 0x170038600&gt;&quot;,</span><br><span class="line">    &quot;&lt;NovelChapterModel: 0x1700357a0&gt;&quot;,</span><br><span class="line">    &quot;&lt;NovelChapterModel: 0x170039160&gt;&quot;,</span><br><span class="line">    &quot;&lt;NovelChapterModel: 0x170033d60&gt;&quot;,</span><br><span class="line">    &quot;&lt;NovelChapterModel: 0x170036380&gt;&quot;,</span><br><span class="line">    &quot;&lt;NovelChapterModel: 0x170037dc0&gt;&quot;,</span><br><span class="line">    &quot;&lt;NovelChapterModel: 0x1700384c0&gt;&quot;,</span><br><span class="line">    &quot;&lt;NovelChapterModel: 0x1700385a0&gt;&quot;,</span><br><span class="line">    &quot;&lt;NovelChapterModel: 0x170037b40&gt;&quot;,</span><br><span class="line">    &quot;&lt;NovelChapterModel: 0x170038100&gt;&quot;,</span><br><span class="line">    &quot;&lt;NovelChapterModel: 0x170035d00&gt;&quot;,</span><br><span class="line">    &quot;&lt;NovelChapterModel: 0x170033ea0&gt;&quot;,</span><br><span class="line">    &quot;&lt;NovelChapterModel: 0x170033ca0&gt;&quot;,</span><br><span class="line">    &quot;&lt;NovelChapterModel: 0x170036100&gt;&quot;,</span><br><span class="line">    &quot;&lt;NovelChapterModel: 0x170037b60&gt;&quot;,</span><br><span class="line">    &quot;&lt;NovelChapterModel: 0x170037f40&gt;&quot;,</span><br><span class="line">    &quot;&lt;NovelCh</span><br><span class="line">libc++abi.dylib: terminating with uncaught exception of type NSException</span><br></pre></td></tr></table></figure><p>这种错误的原因是插入了不识别的数据类型，NSUserDefaults支持的数据类型有NSString、 NSNumber、NSDate、 NSArray、NSDictionary、BOOL、NSInteger、NSFloat等系统定义的数据类型。自定义的类型需要转成NSData再存入。</p><p>1.修改NovelChapterModel,实现NSCoding接口</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">NovelChapterModel</span> : <span class="title">NSObject</span>&lt;<span class="title">NSCoding</span>&gt;</span></span><br><span class="line"><span class="keyword">@property</span> <span class="built_in">NSString</span> *chapterName;</span><br><span class="line"><span class="keyword">@property</span> <span class="keyword">int</span> chapter;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">NovelChapterModel</span></span></span><br><span class="line">-(<span class="keyword">void</span>)encodeWithCoder:(<span class="built_in">NSCoder</span> *)aCoder</span><br><span class="line">&#123;</span><br><span class="line">    [aCoder encodeObject:_chapterName forKey:<span class="string">@"chapterName"</span>];</span><br><span class="line">    [aCoder encodeObject: [<span class="built_in">NSNumber</span> numberWithInt:_chapter] forKey:<span class="string">@"chapter"</span>];</span><br><span class="line">&#125;</span><br><span class="line">-(<span class="keyword">id</span>)initWithCoder:(<span class="built_in">NSCoder</span> *)aDecoder</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span> = [<span class="keyword">super</span> init]) &#123;</span><br><span class="line">        _chapterName = [aDecoder decodeObjectForKey:<span class="string">@"chapterName"</span>];</span><br><span class="line">        _chapter = [[aDecoder decodeObjectForKey:<span class="string">@"chapter"</span>] intValue];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>2.序列化存入</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSData</span> *nsData = [<span class="built_in">NSKeyedArchiver</span> archivedDataWithRootObject:chapterArray];</span><br><span class="line">[defaults setObject:nsData forKey:key];</span><br></pre></td></tr></table></figure><p>3.反序列化取出</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSUserDefaults</span> *defaults =[<span class="built_in">NSUserDefaults</span> standardUserDefaults];</span><br><span class="line"><span class="built_in">NSData</span> *chapterFromCache =  [defaults objectForKey:key];</span><br><span class="line"><span class="built_in">NSMutableArray</span> *chapterArray;</span><br><span class="line"><span class="keyword">if</span>(chapterFromCache!=<span class="literal">nil</span>)</span><br><span class="line">&#123;</span><br><span class="line">    chapterArray = [<span class="built_in">NSKeyedUnarchiver</span> unarchiveObjectWithData:chapterFromCache];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="IOS" scheme="http://www.linjia.site/categories/IT/IOS/"/>
    
    
      <category term="IOS" scheme="http://www.linjia.site/tags/IOS/"/>
    
  </entry>
  
  <entry>
    <title>Intellij使用</title>
    <link href="http://www.linjia.site/2017/03/30/Intellij%E4%BD%BF%E7%94%A8/"/>
    <id>http://www.linjia.site/2017/03/30/Intellij使用/</id>
    <published>2017-03-30T07:40:47.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#mac快捷键">Mac快捷键</a></li><li><a href="#window快捷键">Window快捷键</a></li><li><a href="#只能代码提示忽略大小写">只能代码提示，忽略大小写</a></li></ul><!-- tocstop --><h3><span id="mac快捷键">Mac快捷键</span></h3><table><thead><tr><th>快捷键</th><th>说明</th></tr></thead><tbody><tr><td>⌘O</td><td>查找类文件</td></tr><tr><td>⌘⇧O</td><td>查找所有类型文件、打开文件、打开目录，打开目录需要在输入的内容前面或后面加一个反斜杠</td></tr><tr><td>Double ⇧</td><td>查询任何东西</td></tr><tr><td>⇥ / ⇧⇥</td><td>缩进代码 / 反缩进代码</td></tr><tr><td>⌃Space</td><td>基本的代码补全（补全任何类、方法、变量）</td></tr><tr><td>⌃⇧Space</td><td>智能代码补全（过滤器方法列表和变量的预期类型）</td></tr><tr><td>⌘N, ⌃↩, ⌃N</td><td>生成代码（getter、setter、构造函数、hashCode/equals,toString）</td></tr><tr><td>⌘ R</td><td>替换文件</td></tr><tr><td>⌘⌥← / ⌘⌥→</td><td>退回 / 前进到上一个操作的地方</td></tr><tr><td>⌘ J</td><td>代码生成（main，if….）</td></tr><tr><td>⌘ ⌥ B</td><td>跳转到接口的实现类，也可按住⌘ ⌥ 鼠标点击接口方法名</td></tr></tbody></table><h3><span id="window快捷键">Window快捷键</span></h3><table><thead><tr><th>快捷键</th><th>说明</th></tr></thead><tbody><tr><td>Ctrl+j</td><td>代码生成。例如main方法</td></tr><tr><td>Ctrl+N</td><td>查找类</td></tr><tr><td>Ctrl+Shift+N</td><td>查找文件</td></tr><tr><td>Alt+Insert</td><td>可以生成构造器/Getter/Setter等</td></tr><tr><td>Ctrl+F12</td><td>可以显示当前文件的结构</td></tr><tr><td>Ctrl+Shift+Space</td><td>自动补全代码</td></tr></tbody></table><h3><span id="只能代码提示忽略大小写">只能代码提示，忽略大小写</span></h3><p><img src="/2017/03/30/Intellij使用/01.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#mac快捷键&quot;&gt;Mac快捷键&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#window快捷键&quot;&gt;Window快捷键&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#只能代码提示忽略大小写&quot;&gt;只能代码提示，忽略大小写&lt;
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="java" scheme="http://www.linjia.site/categories/IT/java/"/>
    
      <category term="IDE" scheme="http://www.linjia.site/categories/IT/java/IDE/"/>
    
    
      <category term="IT工具" scheme="http://www.linjia.site/tags/IT%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>刀锋</title>
    <link href="http://www.linjia.site/2017/03/30/%E5%88%80%E9%94%8B/"/>
    <id>http://www.linjia.site/2017/03/30/刀锋/</id>
    <published>2017-03-30T03:47:15.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2017/03/30/刀锋/s29112798.jpg" alt=""></p><p><em>开始：2017-03-28</em><br><em>结束：2017-04-24</em></p><ul><li>The Razor’s Edge</li></ul><p>林步升的这个译本不错，不会有平时读译文的那种别扭感。</p><p>“我想确定究竟有没有上帝，想弄清楚为什么有邪恶存在，也想知道我的灵魂是不是不死，还是身体的死亡就是终点。”</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2017/03/30/刀锋/s29112798.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;开始：2017-03-28&lt;/em&gt;&lt;br&gt;&lt;em&gt;结束：2017-04-24&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The Razor’s Edge&lt;/li
      
    
    </summary>
    
      <category term="读书" scheme="http://www.linjia.site/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="读书" scheme="http://www.linjia.site/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>月亮与六便士</title>
    <link href="http://www.linjia.site/2017/03/29/%E6%9C%88%E4%BA%AE%E4%B8%8E%E5%85%AD%E4%BE%BF%E5%A3%AB/"/>
    <id>http://www.linjia.site/2017/03/29/月亮与六便士/</id>
    <published>2017-03-29T03:48:02.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2017/03/29/月亮与六便士/s2659208.jpg" alt=""></p><ul><li>The Moon and Sixpence（月亮与六便士）<br>According to a 1956 letter from Maugham, “If you look on the ground in search of a sixpence, you don’t look up, and so miss the moon.”</li></ul><p>抛弃所有，家庭，工作，稳定的生活，而去追寻艺术之路。只是因为想，这种看起来难以理解的东西往往才是最坚定的。</p><p>我看到了心中的月亮。追寻虚无缥缈的，可能一生都无法触及的月亮，还是地上的六便士来得实际？不能按照自己的意志活着，人存在于世又有什么意义呢？躁动不安的灵魂又如何安抚？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2017/03/29/月亮与六便士/s2659208.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The Moon and Sixpence（月亮与六便士）&lt;br&gt;According to a 1956 letter from Maugham,
      
    
    </summary>
    
      <category term="读书" scheme="http://www.linjia.site/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="读书" scheme="http://www.linjia.site/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>Mac使用小技巧-程序员版</title>
    <link href="http://www.linjia.site/2017/01/01/Mac%E4%BD%BF%E7%94%A8%E5%B0%8F%E6%8A%80%E5%B7%A7-%E7%A8%8B%E5%BA%8F%E5%91%98%E7%89%88/"/>
    <id>http://www.linjia.site/2017/01/01/Mac使用小技巧-程序员版/</id>
    <published>2017-01-01T08:59:11.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#下载xcode">下载xcode</a></li><li><a href="#在mac上命令行里面如何打开文本编辑器">在mac上命令行里面如何打开文本编辑器</a></li></ul><!-- tocstop --><h2><span id="下载xcode">下载xcode</span></h2><p>有时AppStore更新太慢，直接去网站下载<br><a href="https://developer.apple.com/download/more/" target="_blank" rel="noopener">https://developer.apple.com/download/more/</a></p><h2><span id="在mac上命令行里面如何打开文本编辑器">在mac上命令行里面如何打开文本编辑器</span></h2><p>使用：open -a TextEdit settings.xml 参数说明：－a指定应用<br>也可以是：open -e settings.xml 参数说明：－e使用文本编辑器打开<br>也可以是：open -t settings.xml 参数说明：－t使用默认编辑器打开</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#下载xcode&quot;&gt;下载xcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#在mac上命令行里面如何打开文本编辑器&quot;&gt;在mac上命令行里面如何打开文本编辑器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tocstop
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="IOS" scheme="http://www.linjia.site/categories/IT/IOS/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.linjia.site/2017/01/01/hello-world/"/>
    <id>http://www.linjia.site/2017/01/01/hello-world/</id>
    <published>2016-12-31T16:00:00.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2><span id="quick-start">Quick Start</span></h2><h3><span id="create-a-new-post">Create a new post</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3><span id="run-server">Run server</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3><span id="generate-static-files">Generate static files</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3><span id="deploy-to-remote-sites">Deploy to remote sites</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Velocity Unable to find resource</title>
    <link href="http://www.linjia.site/2011/12/15/Velocity-Unable-to-find-resource/"/>
    <id>http://www.linjia.site/2011/12/15/Velocity-Unable-to-find-resource/</id>
    <published>2011-12-15T09:51:36.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>错误：org.apache.velocity.exception.ResourceNotFoundException: Unable to find resource<br>死活解决不了，最后看了下源码，终于找到错误所在了</p><p>从官网copy自己稍微改下的例子<br><img src="/2011/12/15/Velocity-Unable-to-find-resource/6afe0f16-11c3-3411-8618-56eba3f12772.png" alt=""></p><p>开始是天真的放在同一目录下的相对路径，结果一次又一次的Unable to find resource</p><p>最后实在受不了，追踪了下velocity的源码 org.apache.velocity.runtime.resource.loader.FileResourceLoader<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">resourceExists</span><span class="params">(String name)</span>  </span></span><br><span class="line"><span class="function">  </span>&#123;  </span><br><span class="line">      <span class="keyword">if</span> (name == <span class="keyword">null</span>)  </span><br><span class="line">      &#123;  </span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">false</span>;  </span><br><span class="line">      &#125;  </span><br><span class="line">      name = StringUtils.normalizePath(name);  </span><br><span class="line">      <span class="keyword">if</span> (name == <span class="keyword">null</span> || name.length() == <span class="number">0</span>)  </span><br><span class="line">      &#123;  </span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">false</span>;  </span><br><span class="line">      &#125;  </span><br><span class="line">  </span><br><span class="line">      <span class="keyword">int</span> size = paths.size();  </span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++)  </span><br><span class="line">      &#123;  </span><br><span class="line">          String path = (String)paths.get(i);  </span><br><span class="line">          <span class="keyword">try</span>  </span><br><span class="line">          &#123;  </span><br><span class="line">              File file = getFile(path, name);  </span><br><span class="line">              <span class="keyword">if</span> (file.canRead())  </span><br><span class="line">              &#123;  </span><br><span class="line">                  <span class="keyword">return</span> <span class="keyword">true</span>;  </span><br><span class="line">              &#125;  </span><br><span class="line">          &#125;  </span><br><span class="line">          <span class="keyword">catch</span> (Exception ioe)  </span><br><span class="line">          &#123;  </span><br><span class="line">              String msg = <span class="string">"Exception while checking for template "</span> + name;  </span><br><span class="line">              log.debug(msg, ioe);  </span><br><span class="line">          &#125;  </span><br><span class="line">      &#125;  </span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;  </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>最后是变成了”./Test1.vm”</p><p>放在这个目录就没事了。<br><img src="/2011/12/15/Velocity-Unable-to-find-resource/8404c700-852e-3680-91e8-483a2edc3034.png" alt=""></p><p>“.”代表的应该是项目的根路径</p><p>最后试了下使用“/Test.vm”,“./Test.vm”和“Test.vm”一样</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;错误：org.apache.velocity.exception.ResourceNotFoundException: Unable to find resource&lt;br&gt;死活解决不了，最后看了下源码，终于找到错误所在了&lt;/p&gt;
&lt;p&gt;从官网copy自己稍微改下的例子&lt;b
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="java" scheme="http://www.linjia.site/categories/IT/java/"/>
    
      <category term="other" scheme="http://www.linjia.site/categories/IT/java/other/"/>
    
    
      <category term="Velocity" scheme="http://www.linjia.site/tags/Velocity/"/>
    
  </entry>
  
  <entry>
    <title>Mysql索引学习</title>
    <link href="http://www.linjia.site/2011/10/20/Mysql%E7%B4%A2%E5%BC%95%E5%AD%A6%E4%B9%A0/"/>
    <id>http://www.linjia.site/2011/10/20/Mysql索引学习/</id>
    <published>2011-10-20T10:01:35.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用索引可以提高查询效率，废话不多说，先来个例子。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`person`</span> (  </span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,  </span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  </span><br><span class="line">  <span class="string">`birthday`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  </span><br><span class="line">  <span class="string">`isMan`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  </span><br><span class="line">  <span class="string">`salary`</span> <span class="keyword">double</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  </span><br><span class="line">  <span class="string">`test`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  </span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)  </span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>在插入一些数据。例如：</p><p><img src="/2011/10/20/Mysql索引学习/78b8b525-6624-3dcf-9eca-57291fe4ab24.png" alt=""></p><p>运行：<br>EXPLAIN select name from person where name=’linjia4’</p><p>观察结果：<br><img src="/2011/10/20/Mysql索引学习/ec8aed91-8a7a-3d2b-bf5a-e1bee8b57bf8.png" alt=""></p><p>row=23, 是因为这个表总共有23条记录，即是说做了全表扫描</p><p>在搜索的“name”加上索引：<br>create index testtest on person (name)<br>再执行EXPLAIN select name from person where name=’linjia4’<br>观察结果：</p><p><img src="/2011/10/20/Mysql索引学习/eeb1ed93-e39a-3621-9d5d-7dc872b7951e.png" alt=""><br>rows=1, 即是所当查询语句执行时通过name的索引，直接定位到那条数据，不用做全表扫描</p><p>索引的效果是显而易见的，大大的提高了查询的速度。但索引也不能滥用，增加索引是要付出代价的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用索引可以提高查询效率，废话不多说，先来个例子。&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="DB" scheme="http://www.linjia.site/categories/IT/DB/"/>
    
      <category term="Mysql" scheme="http://www.linjia.site/categories/IT/DB/Mysql/"/>
    
    
      <category term="Mysql" scheme="http://www.linjia.site/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>Java技术要点</title>
    <link href="http://www.linjia.site/2011/05/13/Java-%E6%8A%80%E6%9C%AF%E8%A6%81%E7%82%B9/"/>
    <id>http://www.linjia.site/2011/05/13/Java-技术要点/</id>
    <published>2011-05-12T16:00:00.000Z</published>
    <updated>2018-07-31T07:01:50.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#引用">引用</a></li><li><a href="#对象是否该死">对象是否该死</a></li><li><a href="#垃圾收集算法">垃圾收集算法</a><ul><li><a href="#标记清除算法mark-sweep">标记清除算法(Mark-Sweep)</a></li><li><a href="#复制算法copying">复制算法(Copying)</a></li><li><a href="#标记整理算法mark-compact">标记整理算法(Mark-Compact)</a></li></ul></li><li><a href="#收集器">收集器</a><ul><li><a href="#serialsɪriəl">Serial[‘sɪriəl]</a></li><li><a href="#parnew">ParNew</a></li><li><a href="#parallel-scavenge-parallel-pærəlel-skævɪndʒər">Parallel Scavenge Parallel [‘pærəlel] [‘skævɪndʒə(r)]</a></li></ul></li></ul><!-- tocstop --><h2><span id="引用">引用</span></h2><ul><li>Strong Reference: Object obj = new Object();</li><li>Soft Reference: 内存溢出异常前，软引用进行第二次回收</li><li>Weak Reference: 只能生存到下次gc</li><li>Phantom Reference:</li></ul><hr><h2><span id="对象是否该死">对象是否该死</span></h2><p>经历两次标记</p><ol><li>没有GC Root相连接的引用</li><li>对象是否有必要执行finalize(), 同一个对象的finalize()只会被调用一次</li></ol><hr><h2><span id="垃圾收集算法">垃圾收集算法</span></h2><hr><h3><span id="标记清除算法mark-sweep">标记清除算法(Mark-Sweep)</span></h3><p>缺点</p><ol><li>效率不高，标记和清除的过程效率都不高<code>why?</code></li><li>产生大量的不连续的内存碎片</li></ol><hr><h3><span id="复制算法copying">复制算法(Copying)</span></h3><p>过程</p><ol><li>内存分成两块A和B</li><li>A内存用完，把活的对象复制到B，只要移动到堆顶指针，按循序分配内存</li><li>清理A的内存</li></ol><p>缺点</p><ol><li>内存代价过高</li></ol><p>现实应用</p><ol><li>98%的对象朝闻夕死，没有必要1：1去分配空间</li><li>Eden：Survivor1：Survivor2 8：1：1</li><li>回收是Eden和Survivor1存活对象复制到Surivoro2</li><li>Eden和Survivor1一次清空</li><li>Survivor2不一定有足够的空间放下存活的对象，需要老年代分配担保(Handle Promotion)</li></ol><hr><h3><span id="标记整理算法mark-compact">标记整理算法(Mark-Compact)</span></h3><p>如果对象存活率较高，需要大量的复制，而且还需要额外的分配担保，所以老年代不适用这种算法</p><p>过程</p><ol><li>标记</li><li>存活对象向一段移动</li><li>清理边界以外的内存</li></ol><hr><h2><span id="收集器">收集器</span></h2><h3><span id="serialsɪriəl">Serial[‘sɪriəl]</span></h3><p>过程</p><ol><li>单线程</li><li>必须暂停所有的工作线程</li></ol><p>算法</p><ol><li>新生代 - 复制算法</li><li>老年代 - 标记整理算法</li></ol><h3><span id="parnew">ParNew</span></h3><p>Serial的多线程版本，其他没太多区别</p><h3><span id="parallel-scavenge-parallel-pærəlel-skævɪndʒər">Parallel Scavenge Parallel [‘pærəlel] [‘skævɪndʒə(r)]</span></h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#引用&quot;&gt;引用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#对象是否该死&quot;&gt;对象是否该死&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#垃圾收集算法&quot;&gt;垃圾收集算法&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#标记清
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>面试-友金所</title>
    <link href="http://www.linjia.site/2011/05/13/%E9%9D%A2%E8%AF%95-%E5%8F%8B%E9%87%91%E6%89%80/"/>
    <id>http://www.linjia.site/2011/05/13/面试-友金所/</id>
    <published>2011-05-12T16:00:00.000Z</published>
    <updated>2018-07-31T07:01:50.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#面试前准备">面试前准备</a><ul><li><a href="#技术">技术</a><ul><li><a href="#1设计模式">1.设计模式</a></li><li><a href="#2redis">2.Redis</a></li></ul></li></ul></li></ul><!-- tocstop --><h2><span id="面试前准备">面试前准备</span></h2><h3><span id="技术">技术</span></h3><hr><h4><span id="1设计模式">1.设计模式</span></h4><p>策略模式和适配器模式的区别<br>适配器模式：是在想使用一个已经存在的类，但是他的接口并不符合要求，因为在编码过程中要遵循对扩展开放，对修改关闭的原则，所以不能对原有的类进行修改，这时便需要使用适配器模式，将原有的类适配成自己需要的形式。有类适配器和对象适配器两种适配器</p><h2><span id="策略模式strategy-pattern定义一系列算法将每一个算法封装起来并让它们可以相互替换-策略模式让算法独立于使用它的客户而变化也称为政策模式policy">策略模式(Strategy Pattern)：定义一系列算法，将每一个算法封装起来，并让它们可以相互替换。策略模式让算法独立于使用它的客户而变化，也称为政策模式(Policy)。</span></h2><h4><span id="2redis">2.Redis</span></h4><p>redis为什么会快，redis单线程是怎么保证高吞吐量的‘</p><ul><li><p>Redis为什么这么快<br>1、完全基于内存，绝大部分请求是纯粹的内存操作，非常快速。数据存在内存中，类似于HashMap，HashMap的优势就是查找和操作的时间复杂度都是O(1)；<br>2、数据结构简单，对数据操作也简单，Redis中的数据结构是专门进行设计的；<br>3、采用单线程，避免了不必要的上下文切换和竞争条件，也不存在多进程或者多线程导致的切换而消耗 CPU，不用去考虑各种锁的问题，不存在加锁释放锁操作，没有因为可能出现死锁而导致的性能消耗；<br>4、使用多路I/O复用模型，非阻塞IO；<br>5、使用底层模型不同，它们之间底层实现方式以及与客户端之间通信的应用协议不一样，Redis直接自己构建了VM 机制 ，因为一般的系统调用系统函数的话，会浪费一定的时间去移动和请求；</p></li><li><p>多路 I/O 复用模型<br>1、多路I/O复用模型是利用 select、poll、epoll 可以同时监察多个流的 I/O 事件的能力，在空闲的时候，会把当前线程阻塞掉，当有一个或多个流有 I/O 事件时，就从阻塞态中唤醒，于是程序就会轮询一遍所有的流（epoll 是只轮询那些真正发出了事件的流），并且只依次顺序的处理就绪的流，这种做法就避免了大量的无用操作。<br>2、这里“多路”指的是多个网络连接，“复用”指的是复用同一个线程。采用多路 I/O 复用技术可以让单个线程高效的处理多个连接请求（尽量减少网络 IO 的时间消耗），且 Redis 在内存中操作数据的速度非常快，也就是说内存内的操作不会成为影响Redis性能的瓶颈，主要由以上几点造就了 Redis 具有很高的吞吐量。</p></li><li><p>那么为什么Redis是单线程的<br>我们首先要明白，上边的种种分析，都是为了营造一个Redis很快的氛围！官方FAQ表示，因为Redis是基于内存的操作，CPU不是Redis的瓶颈，Redis的瓶颈最有可能是机器内存的大小或者网络带宽。既然单线程容易实现，而且CPU不会成为瓶颈，那就顺理成章地采用单线程的方案了（毕竟采用多线程会有很多麻烦！）。</p></li></ul><p>3.Spring</p><p>4.反射</p><p>5.MQ</p><p>6.Mysql<br>1.UNION在进行表链接后会筛选掉重复的记录<br>2.NION ALL只是简单的将两个结果合并后就返回</p><p>7.mybatis<br>  注解，还有占位符中的*和#的区别；</p><p>文件复制改名，Java序列化，<br>根据项目问遇到的困难，有挑战性的问题，怎么解决的，平时上什么论坛？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#面试前准备&quot;&gt;面试前准备&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#技术&quot;&gt;技术&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1设计模式&quot;&gt;1.设计模式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2redis&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Word生成目录页码从1开始</title>
    <link href="http://www.linjia.site/2011/04/01/Word%E7%94%9F%E6%88%90%E7%9B%AE%E5%BD%95%E9%A1%B5%E7%A0%81%E4%BB%8E1%E5%BC%80%E5%A7%8B/"/>
    <id>http://www.linjia.site/2011/04/01/Word生成目录页码从1开始/</id>
    <published>2011-04-01T10:14:53.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>word生成目录的时候页码开始不是1,把它改成1<br><img src="/2011/04/01/Word生成目录页码从1开始/f2cd1345-3d55-39b8-a2c2-5799dcb98ead.png" alt=""></p><p>1.把光标（焦点）移到正文开始所在页，点击插入——页码出现下图<br><img src="/2011/04/01/Word生成目录页码从1开始/cdcf7531-ff51-31d6-b732-6d07b9c9a88a.png" alt=""></p><p>2.修改正文开始页页码，刚才是从12开始，现在改为从1开始，点击确定，你会发现页码已经从12变成了1<br><img src="/2011/04/01/Word生成目录页码从1开始/b180b3fb-860e-3123-ac5d-9ab3b8c7547e.png" alt=""></p><p>3.更新目录的页码就会出现下图状态<br><img src="/2011/04/01/Word生成目录页码从1开始/c528f35c-8a7b-303d-bf00-eb7baf43a14a.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;word生成目录的时候页码开始不是1,把它改成1&lt;br&gt;&lt;img src=&quot;/2011/04/01/Word生成目录页码从1开始/f2cd1345-3d55-39b8-a2c2-5799dcb98ead.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;1.把光标（焦点）移到正文开始
      
    
    </summary>
    
      <category term="应用" scheme="http://www.linjia.site/categories/%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="Word" scheme="http://www.linjia.site/tags/Word/"/>
    
  </entry>
  
  <entry>
    <title>hibernate-tools详细使用教程</title>
    <link href="http://www.linjia.site/2011/01/05/hibernate-tools%E8%AF%A6%E7%BB%86%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <id>http://www.linjia.site/2011/01/05/hibernate-tools详细使用教程/</id>
    <published>2011-01-05T06:11:55.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用hibernate-tool的版本是hibernatetools-Update-2010-09-08_14-25-39-H23<br>1.在eclipse下安装好hibernate-tool插件，新建一个hibernate.cxf.xml文件<br><img src="/2011/01/05/hibernate-tools详细使用教程/01.jpg" alt=""></p><p>2.写好数据库连接配置<br><img src="/2011/01/05/hibernate-tools详细使用教程/02.jpg" alt=""></p><p>3<br><img src="/2011/01/05/hibernate-tools详细使用教程/03.png" alt=""></p><p>4<br><img src="/2011/01/05/hibernate-tools详细使用教程/04.png" alt=""></p><p>5<br><img src="/2011/01/05/hibernate-tools详细使用教程/05.png" alt=""></p><p>6<br><img src="/2011/01/05/hibernate-tools详细使用教程/06.png" alt=""></p><p>7<br><img src="/2011/01/05/hibernate-tools详细使用教程/07.png" alt=""></p><p>8<br><img src="/2011/01/05/hibernate-tools详细使用教程/08.png" alt=""></p><p>9<br><img src="/2011/01/05/hibernate-tools详细使用教程/09.png" alt=""></p><p>10<br><img src="/2011/01/05/hibernate-tools详细使用教程/10.png" alt=""></p><p>11<br><img src="/2011/01/05/hibernate-tools详细使用教程/12.png" alt=""></p><p>12<br><img src="/2011/01/05/hibernate-tools详细使用教程/13.png" alt=""></p><p>13<br><img src="/2011/01/05/hibernate-tools详细使用教程/14.png" alt=""></p><p>14.下图生成的entity有注释是因为使用的模板不是hibernate-tools提供的，是自己修改的<br><img src="/2011/01/05/hibernate-tools详细使用教程/03.png" alt=""></p><p>hibernate生成注释模板下载：<br><a href="/2011/01/05/hibernate-tools详细使用教程/hbmtemplates-201009201535.rar" title="hbmtemplates-201009201535.rar">hbmtemplates-201009201535.rar</a></p><p>hibernate生成中文注释乱码解决（eclipse设置为utf-8编码）：<br>修改hibernate-tool的源码<br><a href="/2011/01/05/hibernate-tools详细使用教程/hibernate-tools.jar" title="hibernate-tools.jar">hibernate-tools.jar</a><br>只要把hibernate-tool的hibernate-tools.jar文件替换成上面的jar包就ok了，目前只修改了oracle的中文注释乱码</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用hibernate-tool的版本是hibernatetools-Update-2010-09-08_14-25-39-H23&lt;br&gt;1.在eclipse下安装好hibernate-tool插件，新建一个hibernate.cxf.xml文件&lt;br&gt;&lt;img src=&quot;
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="java" scheme="http://www.linjia.site/categories/IT/java/"/>
    
      <category term="IDE" scheme="http://www.linjia.site/categories/IT/java/IDE/"/>
    
    
      <category term="eclipse" scheme="http://www.linjia.site/tags/eclipse/"/>
    
  </entry>
  
  <entry>
    <title>Powerdesigner15-物理模型-非主键联系</title>
    <link href="http://www.linjia.site/2010/12/31/Powerdesigner15-%E7%89%A9%E7%90%86%E6%A8%A1%E5%9E%8B-%E9%9D%9E%E4%B8%BB%E9%94%AE%E8%81%94%E7%B3%BB/"/>
    <id>http://www.linjia.site/2010/12/31/Powerdesigner15-物理模型-非主键联系/</id>
    <published>2010-12-31T03:20:54.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>在Powerdesigner15设置两个表的关联，一般默认为主键关联，但有时候不想设置为主键关联<br>而是非主键关联，可以用到以下的方法<br><img src="/2010/12/31/Powerdesigner15-物理模型-非主键联系/01.png" alt=""><br><img src="/2010/12/31/Powerdesigner15-物理模型-非主键联系/02.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在Powerdesigner15设置两个表的关联，一般默认为主键关联，但有时候不想设置为主键关联&lt;br&gt;而是非主键关联，可以用到以下的方法&lt;br&gt;&lt;img src=&quot;/2010/12/31/Powerdesigner15-物理模型-非主键联系/01.png&quot; alt=&quot;&quot;&gt;
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="Other" scheme="http://www.linjia.site/categories/IT/Other/"/>
    
    
      <category term="Powerdesigner" scheme="http://www.linjia.site/tags/Powerdesigner/"/>
    
  </entry>
  
  <entry>
    <title>Powerdesigner15-用jdbc链接MySQL实现逆向工程步骤</title>
    <link href="http://www.linjia.site/2010/12/31/Powerdesigner15-%E7%94%A8jdbc%E9%93%BE%E6%8E%A5MySQL%E5%AE%9E%E7%8E%B0%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E6%AD%A5%E9%AA%A4/"/>
    <id>http://www.linjia.site/2010/12/31/Powerdesigner15-用jdbc链接MySQL实现逆向工程步骤/</id>
    <published>2010-12-31T01:49:39.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#1建立一个物理模型">1.建立一个物理模型</a></li><li><a href="#2配置一个jdbc数据库链接以mysql为例">2.配置一个jdbc数据库链接，以mysql为例</a></li><li><a href="#3把物理模型的表更新到刚才配置的数据库mysql">3.把物理模型的表更新到刚才配置的数据库（mysql）</a></li></ul><!-- tocstop --><hr><h3><span id="1建立一个物理模型">1.建立一个物理模型</span></h3><p><img src="/2010/12/31/Powerdesigner15-用jdbc链接MySQL实现逆向工程步骤/01.png" alt=""></p><h3><span id="2配置一个jdbc数据库链接以mysql为例">2.配置一个jdbc数据库链接，以mysql为例</span></h3><p>注意：<br>使用 jdbc 连接数据库，要在环境变量设置 classpath ，值为数据库jdbc的 jar 文件路径</p><p><img src="/2010/12/31/Powerdesigner15-用jdbc链接MySQL实现逆向工程步骤/02.png" alt=""><br><img src="/2010/12/31/Powerdesigner15-用jdbc链接MySQL实现逆向工程步骤/03.png" alt=""><br><img src="/2010/12/31/Powerdesigner15-用jdbc链接MySQL实现逆向工程步骤/04.png" alt=""></p><h3><span id="3把物理模型的表更新到刚才配置的数据库mysql">3.把物理模型的表更新到刚才配置的数据库（mysql）</span></h3><p><img src="/2010/12/31/Powerdesigner15-用jdbc链接MySQL实现逆向工程步骤/05.png" alt=""><br><img src="/2010/12/31/Powerdesigner15-用jdbc链接MySQL实现逆向工程步骤/06.png" alt=""><br><img src="/2010/12/31/Powerdesigner15-用jdbc链接MySQL实现逆向工程步骤/07.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1建立一个物理模型&quot;&gt;1.建立一个物理模型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2配置一个jdbc数据库链接以mysql为例&quot;&gt;2.配置一个jdbc数据库链接，以mysql为例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="Other" scheme="http://www.linjia.site/categories/IT/Other/"/>
    
    
      <category term="Powerdesigner" scheme="http://www.linjia.site/tags/Powerdesigner/"/>
    
  </entry>
  
  <entry>
    <title>Powerdesigner15-物理模型-导出建表sql语句</title>
    <link href="http://www.linjia.site/2010/12/31/Powerdesigner15-%E7%89%A9%E7%90%86%E6%A8%A1%E5%9E%8B-%E5%AF%BC%E5%87%BA%E5%BB%BA%E8%A1%A8sql%E8%AF%AD%E5%8F%A5/"/>
    <id>http://www.linjia.site/2010/12/31/Powerdesigner15-物理模型-导出建表sql语句/</id>
    <published>2010-12-31T01:49:39.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#1设置哪种数据库导出的sql语句设置数据库类型">1.设置哪种数据库导出的sql语句，设置数据库类型</a></li><li><a href="#2导出sql语句">2.导出sql语句</a></li><li><a href="#3关于配置数据库连接">3.关于配置数据库连接</a></li></ul><!-- tocstop --><hr><h3><span id="1设置哪种数据库导出的sql语句设置数据库类型">1.设置哪种数据库导出的sql语句，设置数据库类型</span></h3><p><img src="/2010/12/31/Powerdesigner15-物理模型-导出建表sql语句/01.png" alt=""><br><img src="/2010/12/31/Powerdesigner15-物理模型-导出建表sql语句/02.png" alt=""></p><h3><span id="2导出sql语句">2.导出sql语句</span></h3><p><img src="/2010/12/31/Powerdesigner15-物理模型-导出建表sql语句/03.png" alt=""><br><img src="/2010/12/31/Powerdesigner15-物理模型-导出建表sql语句/04.png" alt=""></p><h3><span id="3关于配置数据库连接">3.关于配置数据库连接</span></h3><p>写了一个jdbc的例子，可以参照 <a href="/2010/12/31/Powerdesigner15-用jdbc链接MySQL实现逆向工程步骤/" title="Powerdesigner15-用jdbc链接MySQL实现逆向工程步骤">Powerdesigner15-用jdbc链接MySQL实现逆向工程步骤</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1设置哪种数据库导出的sql语句设置数据库类型&quot;&gt;1.设置哪种数据库导出的sql语句，设置数据库类型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2导出sql语句&quot;&gt;2.导出sql语句&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;
      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="Other" scheme="http://www.linjia.site/categories/IT/Other/"/>
    
    
      <category term="Powerdesigner" scheme="http://www.linjia.site/tags/Powerdesigner/"/>
    
  </entry>
  
  <entry>
    <title>eclipse下jdk的某些包访问受限解决办法</title>
    <link href="http://www.linjia.site/2010/12/30/eclipse%E4%B8%8Bjdk%E7%9A%84%E6%9F%90%E4%BA%9B%E5%8C%85%E8%AE%BF%E9%97%AE%E5%8F%97%E9%99%90%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://www.linjia.site/2010/12/30/eclipse下jdk的某些包访问受限解决办法/</id>
    <published>2010-12-30T06:05:30.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2010/12/30/eclipse下jdk的某些包访问受限解决办法/01.png" alt=""><br><img src="/2010/12/30/eclipse下jdk的某些包访问受限解决办法/02.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2010/12/30/eclipse下jdk的某些包访问受限解决办法/01.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2010/12/30/eclipse下jdk的某些包访问受限解决办法/02.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="IT" scheme="http://www.linjia.site/categories/IT/"/>
    
      <category term="java" scheme="http://www.linjia.site/categories/IT/java/"/>
    
      <category term="IDE" scheme="http://www.linjia.site/categories/IT/java/IDE/"/>
    
    
      <category term="eclipse" scheme="http://www.linjia.site/tags/eclipse/"/>
    
  </entry>
  
  <entry>
    <title>Something in my life</title>
    <link href="http://www.linjia.site/1988/08/25/Something-in-my-life/"/>
    <id>http://www.linjia.site/1988/08/25/Something-in-my-life/</id>
    <published>1988-08-24T15:00:00.000Z</published>
    <updated>2018-07-24T06:50:27.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#悟">悟</a></li><li><a href="#小时候">小时候</a></li></ul><!-- tocstop --><hr><h3><span id="悟">悟</span></h3><p>仿佛开悟一般，觉得人活着或许是为了寻找一个问题，得到一个答案。</p><p>懵懵懂懂到了20岁，浑浑噩噩活到了现在。不知道自己的生活应该是怎样，爱的人是谁，自己想干嘛</p><p>我必须给自己的人生一个答案，一个能让自己微笑的面对死亡的答案。我想知道自己的职业道路，自己能为这个社会做点什么</p><p>活了将近30年，经历太少，不怎么读书。以致于现在没能力思考更高层面的问题，一直陷于浑噩中。继续宅，继续给自己借口，或许到死都不知道生于世意义何在</p><ul><li><p>多读点书，或许先贤们能给自己一点提示。<br>或许真的书读得少，所以才现在这样，迷茫困惑。<br>文明世界发展了几千年，我相信有人和我一样，答案或是启示就在浩瀚的历史中。<br>没有理论支撑的行动是没有意义的。</p></li><li><p>多去经历，只有自己亲身感受才能懂。<br>英语似乎成了自己的心魔，我想知道当我克服了我的生活是否会如我所想的发生改变<br>创业，开家小店，我想知道自己的能力极限在哪里<br>环游世界，当书中描绘的景色真实的呈现在我眼前是，我是否能离我的答案更近一步<br>我觉得自己喜欢烹饪，真的吗？为什么1个月煮饭的次数一只手都数得出来<br>谁都知道锻炼健身能让人改变，或许没经历过那种状态，所以对于要到达那种状态不是很执着</p></li><li><p>正视自己的善与恶，才能看清过去未来<br>暴戾，仿佛根植于动物本能。我也不例外<br>好逸恶劳<br>对于其他人充满了偏见</p></li></ul><h3><span id="小时候">小时候</span></h3><p>小时候，大学以前吧！我成长的家庭，爸爸沉默不语，妈妈家庭妇女。我呢，也不算是天才。所以成长的结果就是，普通，普通，普通。考上了个三流大学。踏入社会的前两年，算是我价值观人生观初步形成的时期吧，很幸运遇到很好的同伴和导师，人生轨迹虽然不精彩，最起码还是正确的。</p><p>穿越剧流行，我自问自己想不想回到以前，我心底没有任何犹豫，不想。小时候最大的愿望就是长大，这样才可以做自己想做的事情，我的父母从来都不知道我想什么我追求什么，他们也不关心。即使现在我年近30，和父母也是无话可谈，偌大的客厅也只有电视的声音。从没有父亲有过深层次的交流，当某种生活成为习惯就不是能轻易改变。</p><p>以前处于焦躁的状态，只想快快长大，却不知成长需要什么，也没人告诉我。基本功没有培养好，现在抱怨成长太慢。是时候应该拆掉重新打基。或许还有希望…从以前的怪圈跳出来</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#悟&quot;&gt;悟&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#小时候&quot;&gt;小时候&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tocstop --&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;span id=&quot;悟&quot;&gt;悟&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;仿
      
    
    </summary>
    
    
  </entry>
  
</feed>
